@{
	ViewBag.title = "Undo Posting & Knockoff";
	Layout = "~/Views/Shared/_LayoutNew.cshtml";
}

<!Doctype html>
<html>
<head>
	<title></title>
	<style>
		.nav-item.me-2.me-xl-50 {
			margin-right: 33rem !important;
		}
	</style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
	<div class="content-wrapper">
		<div class="container-xxl flex-grow-1 container-p-y">
			<div class="card-body" style="margin-top: -1%; min-height: 82%;">
				<div class="row" style="padding-bottom:5px;margin-top:5px;padding-right:5px">
					<div class="col-sm-4">
						<label for="" class="form-label">Recon Name&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
						<select id="cmbreconname" class="form-select form-control">
						</select>
					</div>
					<div class="col-sm-4">
						<label for="" class="form-label">KO Id&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
						<input class="form-control" id="Ko_id" type="text">
					</div>
					<div class="col-md-3" style="margin-top: 2%;">
						<button type="button" class="btn btn-sm save_btn me-2" style="width:40%;margin-top: 7px" onclick="reconsubmit()">
							Submit
						</button> &nbsp; &nbsp; &nbsp;
						<button type="button" id="proceed_btn" class="btn btn-sm save_btn me-2" style="width:40%;margin-top: 7px" onclick="Proceed()">
							Proceed
						</button>
					</div>
				</div>
				<div class="col-xs-12" style="margin-top: 1%;">
					<div id="undo_grid"></div>
				</div>
			</div>
		</div>
	</div>
</body>
</html>
<script type="text/javascript">
	$(document).ready(function () {
		$("#navhead").text("Undo Posting & Knockoff");
		$('#proceed_btn').prop('disabled', true);
		//document.getElementById("proceed_btn").disabled = true;
		gridlist();
	});

	function gridlist() {
		debugger;
		//recon name
		var data = {};
		data.in_user_gid = 0;
		data.in_active_status = '';
		var Context = data;
		$.ajax({
			type: "POST",
			url: '../Recon/Reconlistfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_user_gid: Context.in_user_gid, in_active_status: Context.in_active_status }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				$("#cmbreconname").empty();
				$("#cmbreconname").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(response, function (index, item) {
					if (item.active_status == 'Y') {
						$("#cmbreconname").append($('<option>', {
							value: item.recon_code,
							text: item.recon_name
						}));
					}
				});
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
	}

	function reconsubmit() {
		debugger;
		var in_recon_code = $("#cmbreconname").val();
		var Ko_id = $("#Ko_id").val();
		if (in_recon_code && Ko_id) {
		$.ajax({
			type: "POST",
			url: '../knockoff/undorunreport',
			dataType: 'json',
			data: JSON.stringify({ in_recon_code: in_recon_code, in_report_code: "RPT_KO", in_report_param: "", in_report_condition: "and a.ko_gid =" + Ko_id, in_ip_addr: "", in_outputfile_flag: false, in_user_code:"" }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				debugger;
				if (response != null) {
					var res = JSON.parse(response);
					grid_reconverion(res);
					//if(res.length > 0){
					//	grid_reconverion(res);
					//} 
					
				}
				else {
					grid_reconverion([]);
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
		} else if (!in_recon_code) {
			$.alert({
				title: 'Recon',
				content: 'Please select Recon',
				type: 'red',
			});
		} else if (!Ko_id) {
			$.alert({
				title: 'Recon',
				content: 'KO Id is missing',
				type: 'red',
			});
		}
	}

	function grid_reconverion(data) {
		debugger;
		var columns = [];
		var rows = [];
		if (data.length > 0) {
			$('#proceed_btn').prop('disabled', false);
			//document.getElementById("proceed_btn").disabled = false;
			var index = 0;
			
			for (var key in data[0]) {
				var field;
				index = index + 1;
				field = "field"+index.toString();
				var propType = typeof data[0][key];
				var bool = false;
				var txtalign = "left";				
				columns.push({
					field: field,
					title: key,
					type: propType,
					attributes: { style: "text-align:" + txtalign },
					filterable: false,
					hidden: bool,
					width: 150
				});
			}
			$.each(data, function (i, e) {
				var entryObject = {};
				index = 0;
				for (var key in e) {
					index = index + 1;
					field = "field" + index.toString();
					entryObject[field] = e[key];
				}
				rows.push(entryObject);
			});

			var configuration = {
				dataSource: {
					data: rows,
				},
				height: 347,
				navigatable: false,
				groupable: false,
				editable: false,
				sortable: false,
				scrollable: true,
				attributes: { style: "text-align: center;" },
				filterable: {
					extra: true,
					operators: {
						string: {
							contains: "Contains"
						}
					}
				},
				pageable: false,
				resizable: true,
				persistSelection: true,
				selectable: true,
				columns: columns,
				dataBound: function (e) {
					var grid = this; // "this" refers to the Kendo Grid

					grid.tbody.find("tr").each(function (index) {
						var rowData = grid.dataItem(this); // Get the data item for the current row
						$(this).css("background-color", rowData.backcolor);
						$(this).css("color", rowData.forecolor);
						//}
					});
				}
			};

			$("#example").remove();
		$('#undo_grid').append('<div id="example" style="position:relative;" class="k-content"><table id="undo_grid" style="position:relative;overflow:scroll;width:100%"></table></div>');
		var timeEditGrid = $("#undo_grid").kendoGrid(configuration).data("kendoGrid");
		} else {
			var emptydata = [{
				"Ko Id": "",
				"Ko Date": "",
				"Ko By": "",
				"Narration": "",
				"Line Value": "",
				"Record Type": "",
				"Tran Date": "",
				"Loan No": "",
				"Cheque No": "",
				"Dataset Code": "",
				"Dataset Name": "",
				"Status": "",
				"Value Date": "",
				"Ko Amount": "",
				"Dr/Cr": "",
				"Tran Value": "",
				"Ko Reason": "",
				"Ko Remark": "",
				"Remark1": "",
				"Remark2": "",
				"Rule Name": "",
				"Reversal Flag": "",
				"Manual Matchoff Flag": "",
				"Ko Delete Date": "",
				"Ko Deleted By": "",
				"Exception Amount": "",
				"Recon Name": "",
				"Tran Id": "",
				"Base Amount": "",
				"Base Acc Mode": "",
				"Base Exception Value": "",
				"Supporting Record Id": "",
				"Job Id": "",
				"Ko Detail Id": "",
				"Supporting File Type": "",
			}];
			var index = 0;
			for (var key in emptydata[0]) {
				//var emptyfield = key.replace(/\s+/g, '_');
				var field;
				index = index + 1;
				field = "field" + index.toString();
				columns.push({
					field: field,
					title: key,
					attributes: { style: "text-align: left;" },
					filterable: false,
					width:100
				});
			}
			$.each(emptydata, function (i, e) {
				var entryObject = {};
				var index = 0;
				for (var key in e) {
					var field;
					index = index + 1;
					field = "field" + index.toString();
					//var field = key.replace(/\s+/g, '_');
					entryObject[field] = e[key];
				}
				rows.push(entryObject);
			});

			var configuration = {
				dataSource: {
					data: rows,
				},
				height: 349,
				navigatable: false,
				groupable: false,
				editable: false,
				sortable: false,
				scrollable: true,
				attributes: { style: "text-align: center;" },
				filterable: {
					extra: true,
					operators: {
						string: {
							contains: "Contains"
						}
					}
				},
				pageable: false,
				resizable: true,
				persistSelection: true,
				selectable: true,
				columns: columns
			};

			$("#example").remove();
			$('#undo_grid').append('<div id="example" style="position:relative;" class="k-content"><table id="undo_grid" style="position:relative;overflow:scroll;width:100%"></table></div>');
			var timeEditGrid = $("#undo_grid").kendoGrid(configuration).data("kendoGrid");
		}
		}

	function Proceed() {
		$.confirm({
			icon: 'fa fa-warning',
			title: 'Recon',
			autoClose: 'cancel|10000',
			theme: 'dark',
			animationSpeed: 700,
			content: 'Are you sure do you want to Undo this KO!',
			type: 'orange',
			buttons: {
				confirm: function () {
					$.confirm({
						title: 'Remarks',
						content: '' +
							'<form action="" class="formName">' +
							'<div class="form-group">' +
							'<label>Reason</label>' +
							'<input type="text" placeholder="Reason" class="name form-control" required />' +
							'</div>' +
							'</form>',
						buttons: {
							formSubmit: {
								text: 'Submit',
								btnClass: 'btn-blue',
								action: function () {
									var name = this.$content.find('.name').val();
									if (!name) {
										$.alert('Reason cannot be empty');
										return false;
									}
									KOusingGid(name);
								}
							},
							cancel: function () {
								//close
							},
						},

					});
				},
				cancel: function () {
					$.alert({
						icon: 'fa fa-success',
						title: 'Recon',
						theme: 'dark',
						content: 'Delete Canceled.!',
						type: 'blue',
						animationSpeed: 700,
					});
				},
			}
			//buttons: {
			//	confirm: function () {
			//		KOusingGid();
			//	},
			//	cancel: function () {
			//		$.alert({
			//			icon: 'fa fa-success',
			//			title: 'Recon',
			//			theme: 'dark',
			//			content: 'Delete Canceled.!',
			//			type: 'blue',
			//			animationSpeed: 700,
			//		});
			//	},
			//}
		});
	}


	function KOusingGid(reason) {
		var data = {};
		data.in_ko_gid = $("#Ko_id").val();
		data.in_undo_ko_reason = reason;
		data.in_user_code ="";
		if (data.in_ko_gid && data.in_undo_ko_reason) {
		$.ajax({
			type: "POST",
			url: '../knockoff/undoKO',
			dataType: 'json',
			async: false,
			data: JSON.stringify(data),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				debugger;
				if(response) {
					var res = JSON.parse(response);
					$.alert({
						title: 'Recon',
						content: res[0].out_msg,
						type: 'green',
					});
					grid_reconverion([]);
				} else {
					$.alert({
						title: 'Recon',
						content: "Something Went Wrong",
						type: 'green',
					});
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
		} else if (!data.in_ko_gid) {
			$.alert({
				title: 'Recon',
				content: 'KO id is missing',
				type: 'red',
			});
		} else if (!data.in_undo_ko_reason) {
			$.alert({
				title: 'Recon',
				content: 'KO reason is missing',
				type: 'red',
			});
		}
	}
</script>