@*@{
	Layout = "~/Views/Shared/_LayoutNew.cshtml";
}*@
<!Doctype html>
<html>
<head>
	<style type="text/css">
		.k-tooltip-content {
			white-space: nowrap !important;
			font-size: 12px !important;
		}

		.k-grid td {
			border-style: solid;
			border-width: 0 0 0 1px;
			padding: 0.4em 0.6em;
			overflow: hidden;
			line-height: 1.6em;
			vertical-align: middle;
			text-overflow: ellipsis;
		}

		.k-state-selected {
			color: coral !important;
		}

		.footer {
			position: fixed;
			left: 0;
			bottom: 0;
			width: 100%;
			background-color: #e4e4e4;
			color: white;
			text-align: center;
			z-index: 2;
			height: 30px;
		}

		.k-grid td {
			white-space: nowrap;
			background-color: #eceef1;
			border-color: inherit;
			/* text-align: center; */
		}

		#overlayy {
			background-color: transparent;
			z-index: 999;
			position: absolute;
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			display: none;
		}


		li {
			display: block;
		}

		.ms-options {
			min-height: 100px;
			max-height: 100px;
		}

		ul {
			padding-left: 0rem;
		}

		.navbar-nav > .home-menu .home-image {
			float: left;
			width: 25px;
			height: 25px;
			border-radius: 50%;
			margin-right: 10px;
			margin-top: -2px 0px;
			background-color: blue;
		}

		#loader {
			position: absolute;
			background: url('http://sampsonresume.com/labs/pIkfp.gif') no-repeat center center;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
		}

		div#spinner {
			width: 100%;
			height: 100%;
			top: 0px;
			left: 0px;
			position: fixed;
			display: block;
			opacity: 0.6;
			background: #aaaaaa url('~/content/themes/base/images/ui-bg_flat_0_aaaaaa_40x100.png');
			z-index: 1006;
			text-align: center;
			display: none;
		}

			div#spinner img {
				position: absolute;
				top: 40%;
				left: 42%;
				opacity: 4.5;
				z-index: 1007;
			}

			div#spinner span {
				font-family: Arial Tahoma;
				font-size: large;
				font-weight: bold;
				opacity: 4.5;
				margin-top: 100px;
				color: white;
			}

		.k-grid td {
			white-space: nowrap;
			border-style: solid;
			border-width: 1px 0px 0px 1px !important;
			padding: -3.6em 5.6em;
			overflow: hidden;
			line-height: -1.4em;
			vertical-align: middle;
			text-overflow: ellipsis;
			border-color: #80808040;
		}
		/*grid header should not be wrap*/
		.k-grid-header table {
			width: 100% !important;
		}

		.info-label {
			display: inline-block;
			cursor: pointer;
			color: blue;
		}

		.info-content {
			display: none;
			position: absolute;
			background-color: #f9f9f9;
			border: 1px solid #ccc;
			padding: 10px;
			z-index: 1;
		}

		.info-label:hover .info-content,
		.info-label.active .info-content {
			display: block;
		}

		.nav {
			/*display: flex;*/
			display: -webkit-box;
			flex-wrap: nowrap !important;
			padding-left: 0;
			margin-bottom: 0;
			list-style: none;
		}

		.popup-dialog .k-grid-content {
			overflow-x: hidden;
			height: 109px !important;
		}
	</style>

</head>
<body>
	<form method="post" class="form-horizontal" id="form" enctype="multipart/form-data">
		<div class="row" style="margin-top: -18px;margin-bottom: 10px;">
			<div class="col-sm-6">
				<div class="row">
					<div class="col-sm-4">
						<label for="organization" class="form-label">Rule Code</label>
						<input class="form-control" type="text" id="txtrulecode" value="" disabled>
					</div>
					<div class="col-sm-4">
						<label for="organization" class="form-label">Mode</label>
						<input class="form-control" type="text" id="Ruletxtmode" value="View" disabled>
					</div>
					<div class="col-sm-4">
						<label for="organization" class="form-label">Status</label><br>
						<input class="form-control" type="text" id="txtstatus" value="Active" disabled>
					</div>
				</div>
			</div>
			<div class="col-sm-5">
			</div>
			<div class="col-sm-1" style="margin-top:20px;">
				@*<center>
				<i class="bx bx-x cursor-pointer" data-bs-dismiss="modal" style="color: #000000;float:right; cursor:pointer;"></i>
				</center>*@
			</div>
		</div>
		<div class="box box-orange" style="height:auto">
			<div class="row" style="padding-right:5px">
				<div class="col-sm-3">
					<label for="" class="form-label">Rule Name&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
					<input class="form-control" id="ruleName" type="text" disabled>
					<input class="form-control" type="hidden" id="rulegid">
					<input class="form-control" type="hidden" id="recontype">
				</div>
				<div class="col-sm-3">
					<label for="" class="form-label"></label>
					Recon Name&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span>&nbsp;&nbsp;
					<select id="cmbreconname1" class="form-select form-control" disabled>
					</select>
				</div>
				<div class="col-md-2">
					<label for="" class="form-label">Period From&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
					<div>
						<input class="cusDate" data-role='datepicker' disabled id="period_from1" name="period_from1" data-value="2022-12-21" style="width:80%" />
						<span data-for='valid' class='k-invalid-msg'></span>
					</div>
				</div>
				<div class="col-sm-2" style="margin-left:-39px;">
					<label for="organization" class="form-label">
						<span>Period To</span>&nbsp;&nbsp;&nbsp;&nbsp;
						<input class="form-check-input" style="margin:-1px;" type="checkbox" value="false" disabled name="untillactive" onclick="checkactive()" id="untillactive" />&nbsp;&nbsp;
						<span style="font-size:12px;">Until Active</span>
					</label>
					<div>
						<input class="cusDate" data-role='datepicker' disabled id="period_to1" style="height:25px;width: 100%;" data-bind="" onkeypress="return date_validate(event)" /><span data-for='valid' class='k-invalid-msg'></span>
					</div>
				</div>
				<div class="col-md-1">
					<label for="" class="form-label" style="margin-top:-17px;margin-right: -6px;">Rule Order&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
					<input class="form-control" id="ruleorder" type="number" value="0" disabled>
				</div>
				<div class="col-md-1" style="padding-left:0;margin-left: 15px;">
					<label for="" class="form-label" style="margin-top:-17px;margin-right: -25px;">Probable Flag&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
					<select id="probableflag" class="form-select form-control" style=" width:120%;" disabled>
					</select>
				</div>
			</div>
			<div class="row" style="padding-right:5px">
				<div class="col-sm-2">
					<label for="" class="form-label">Rule Applied On&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
					<select id="RuleAppliedOn" class="form-select form-control" disabled style=" width: 80%;" onchange="RuleApplied()">
					</select>
				</div>
				<div class="col-sm-1" style="margin-left: -42px;">
					<label for="" class="form-label" style="margin-top:-17px;margin-right:-7px">Group Flag&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
					<select id="cmbgroupflag" class="form-select form-control" disabled style=" width: 177%;" onchange="groupflagchange()">
					</select>
				</div>
				<div class="col-sm-3" style="margin-left: 54px;margin-right: 28px;">
					<label id="sourceparentdataset" class="form-label">Source Dataset&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
					<select id="sourcedataset" class="form-select form-control" disabled style=" width: 100%;" onchange="sourcefieldchange()">
					</select>
				</div>
				<div class="col-sm-2" style="margin-left:-27px;">
					<label id="" class="form-label">Source Account Mode&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
					<select id="souaccmode" class="form-select form-control" disabled style=" width: 80%;" onchange="Sourcemodechange()">
					</select>
				</div>
				<div class="col-sm-2" style="margin-left:-39px;">
					<label id=comsupdataset class="form-label">Target Dataset</label>
					<select id="comdataset" class="form-select form-control" disabled style=" width: 100%;">
					</select>
				</div>
				<div class="col-sm-2" style="margin-right: -38px;">
					<label id="lblcomaccmode" class="form-label">Target Account Mode</label>
					<select id="comaccmode" class="form-select form-control" disabled style=" width: 120%;">
					</select>
				</div>
			</div>
			<div class="row">
				<div class="nav-align-top mb-3 mt-3">
					<ul class="nav nav-pills mb-2" role="tablist" style="font-size:12px;border-radius: 0.375rem; overflow-x: auto;">
						<li class="nav-item">
							<button type="button" id="ruleCondition"
									class="nav-link active"
									role="tab"
									data-bs-toggle="tab"
									data-bs-target="#navs-pills-FiedConfig"
									aria-controls="navs-pills-FiedConfig"
									aria-selected="true">
								Rule Condition
							</button>
						</li>
						<li class="nav-item">
							<button type="button" id="sourceidentifier"
									class="nav-link"
									role="tab"
									data-bs-toggle="tab"
									data-bs-target="#navs-pills-top-sourceidentifier"
									aria-controls="navs-pills-top-sourceidentifier"
									aria-selected="true">
								Source Identifier
							</button>
						</li>
						<li class="nav-item">
							<button type="button" id="comparisionidentifier"
									class="nav-link"
									role="tab"
									data-bs-toggle="tab"
									data-bs-target="#navs-pills-top-comparisionidentifier"
									aria-controls="navs-pills-top-comparisionidentifier"
									aria-selected="true">
								Target Identifier
							</button>
						</li>
						<li class="nav-item">
							<button type="button" id="grouping"
									class="nav-link"
									role="tab"
									data-bs-toggle="tab"
									data-bs-target="#navs-pills-top-grouping"
									aria-controls="navs-pills-top-grouping"
									aria-selected="false">
								Additional Grouping
								@*Grouping*@
							</button>
						</li>
						<li class="nav-item">
							<button type="button" id="aggregatefunction"
									class="nav-link"
									role="tab"
									data-bs-toggle="tab"
									data-bs-target="#navs-pills-top-aggregatefunction"
									aria-controls="navs-pills-top-aggregatefunction"
									aria-selected="true">
								Aggregate Function
							</button>
						</li>
						<li class="nav-item">
							<button type="button" id="aggregatecondition"
									class="nav-link"
									role="tab"
									data-bs-toggle="tab"
									data-bs-target="#navs-pills-top-aggregatecondition"
									aria-controls="navs-pills-top-aggregatecondition"
									aria-selected="true">
								Aggregate Condition
							</button>
						</li>
						<li class="nav-item">
							<button type="button" id="sourceorder"
									class="nav-link"
									role="tab"
									data-bs-toggle="tab"
									data-bs-target="#navs-pills-top-sourceorder"
									aria-controls="navs-pills-top-sourceorder"
									aria-selected="true">
								Source Processing Order
							</button>
						</li>
						<li class="nav-item">
							<button type="button" id="Comparisonorder"
									class="nav-link"
									role="tab"
									data-bs-toggle="tab"
									data-bs-target="#navs-pills-top-comparisonorder"
									aria-controls="navs-pills-top-comparisonorder"
									aria-selected="true">
								Target Processing Order
							</button>
						</li>
						<li class="nav-item">
							<button type="button"
									class="nav-link"
									role="tab"
									data-bs-toggle="tab"
									data-bs-target="#navs-pills-top-AddtionalConfiguration1"
									aria-controls="navs-pills-top-AddtionalConfiguration1"
									aria-selected="true">
								Addtional Configuration
							</button>
						</li>
					</ul>
					<div class="tab-content">
						<div class="tab-pane fade show active" id="navs-pills-FiedConfig" role="tabpanel" style="margin-top:-13px;">
							<div class="panel panel-default">
								<div class="panel-body">
									<div class="row" style="padding-bottom:3px;padding-right:5px;padding-top:10px;">
										@*<i data-bs-toggle="modal" onclick='getrulecondition(this)' value='create' class="fa fa-plus cursor-pointer" aria-hidden="true" style="color:green"></i>*@
										<div class="col-xs-12">
											<div class="popup-dialog">
												<div id="gd_rulecondition">
													<div id="grid_rulecondition">
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="tab-pane fade" id="navs-pills-top-sourceidentifier" role="tabpanel" style="margin-top:-13px;">
							<div class="panel panel-default">
								<div class="panel-body">
									<div class="row" style="padding-bottom:3px;padding-right:5px;padding-top:10px;">
										@*<i data-bs-toggle="modal" onclick='getidentifier(this)' value='create' class="fa fa-plus cursor-pointer" aria-hidden="true" style="color:green"></i>*@
										<div class="col-xs-12">
											<div class="popup-dialog">
												<div id="gd_sourceidentifier">
													<div id="grid_sourceidentifier">
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="tab-pane fade" id="navs-pills-top-comparisionidentifier" role="tabpanel" style="margin-top:-13px;">
							<div class="panel panel-default">
								<div class="panel-body">
									<div class="row" style="padding-bottom:3px;padding-right:5px;padding-top:10px;">
										@*<i data-bs-toggle="modal" onclick='getidentifier(this)' value='create' class="fa fa-plus cursor-pointer" aria-hidden="true" style="color:green"></i>*@
										<div class="col-xs-12">
											<div class="popup-dialog">
												<div id="gd_comparisionidentifier">
													<div id="grid_comparisionidentifier">
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="tab-pane fade" id="navs-pills-top-grouping" role="tabpanel" style="margin-top:-13px;">
							<div class="panel panel-default">
								<div class="row" style="padding-bottom:3px;padding-right:5px;padding-top:10px;">
									<div class="col-xs-12">
										<div class="popup-dialog">
											<div id="gd_grouping">
												<div id="grid_grouping">
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="tab-pane fade" id="navs-pills-top-aggregatefunction" role="tabpanel" style="margin-top:-13px;">
							<div class="panel panel-default">
								<div class="row" style="padding-bottom:3px;padding-right:5px;padding-top:10px;">
									<div class="col-xs-12">
										<div class="popup-dialog">
											<div id="gd_aggfunction">
												<div id="grid_aggfunction">
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="tab-pane fade" id="navs-pills-top-aggregatecondition" role="tabpanel" style="margin-top:-13px;">
							<div class="panel panel-default">
								<div class="row" style="padding-bottom:3px;padding-right:5px;padding-top:10px;">
									<div class="col-xs-12">
										<div class="popup-dialog">
											<div id="gd_aggcondition">
												<div id="grid_aggcondition">
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="tab-pane fade" id="navs-pills-top-sourceorder" role="tabpanel" style="margin-top:-13px;">
							<div class="panel panel-default">
								<div class="panel-body">
									<div class="row" style="padding-bottom:3px;padding-right:5px;padding-top:10px;">
										@*<i data-bs-toggle="modal" onclick='getidentifier(this)' value='create' class="fa fa-plus cursor-pointer" aria-hidden="true" style="color:green"></i>*@
										<div class="col-xs-12">
											<div class="popup-dialog">
												<div id="gd_sourceorder">
													<div id="grid_sourceorder">
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="tab-pane fade" id="navs-pills-top-comparisonorder" role="tabpanel" style="margin-top:-13px;">
							<div class="panel panel-default">
								<div class="panel-body">
									<div class="row" style="padding-bottom:3px;padding-right:5px;padding-top:10px;">
										@*<i data-bs-toggle="modal" onclick='getidentifier(this)' value='create' class="fa fa-plus cursor-pointer" aria-hidden="true" style="color:green"></i>*@
										<div class="col-xs-12">
											<div class="popup-dialog">
												<div id="gd_comparisonorder">
													<div id="grid_comparisonorder">
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="tab-pane fade" id="navs-pills-top-AddtionalConfiguration1" role="tabpanel" style="margin-top:-13px;">
							<div class="panel panel-default">
								<div class="panel-body" style="height:175px;padding:31px">
									<div class="row">
										<div class="col-sm-6">
											<div class="col-sm-4">
												<label for="" class="form-label">Rule Remark&nbsp;</label>
												<textarea id="ruleremark" name="ruleremark" rows="4" style="height: 93px;width: 455px;border-radius: 0.375rem;"></textarea>
											</div>
										</div>
										<div class="col-sm-6">
											<div class="col-sm-5" style="margin-left: -20px;padding-bottom: 7px;">
												<input type="checkbox" id="thersholdflag" onclick="thersflag()" disabled>
												<label for="vehicle1">
													Enable Rule level Threshold
												</label>
											</div>
											<div class="row" id="addconfig" style="padding-bottom:3px;padding-left:5px;padding-top:10px;padding-right:5px;border:1px solid;margin-left: -99px;">
												<div class="col-sm-4">
													<label for="" class="form-label">Partial Match&nbsp;</label>
													<div style="margin-left:2px;margin-top:5px">
														<input type="radio" id="partialmatch3" disabled name="partialmatch" value="Y" onclick="onpartialrule()">&nbsp;Yes &nbsp;
														<input type="radio" id="partialmatch4" disabled name="partialmatch" value="N" onclick="onpartialrule()" style="margin-left: 10px;">&nbsp;No&nbsp;
													</div>
												</div>
												<div class="col-sm-4">
													<label for="" class="form-label">Knockoff Threshold Value&nbsp;</label>
													<input class="form-control" disabled id="thersholdplus1" onpaste="return false;" type="text" maxlength="16" value="0" onkeypress='return isNumberKey(event)'>
													<input class="form-control" id="thersholdminus1" type="hidden" value="0">
												</div>
												<div class="col-sm-4">
													<label for="" class="form-label">Applied On&nbsp;</label>
													<select id="cmbthersholdvalue1" class="form-select form-control" disabled>
													</select>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-sm-4">
				</div>
				<div class="col-sm-4" style="margin-left:-190px;margin-top: -11px">
					<i class="btn btn-sm cancel_btn me-2" data-bs-dismiss="modal" style="color: #000000;float:right">Cancel</i>
				</div>
				<div class="col-sm-4">
				</div>
			</div>
		</div>
	</form>

</body>
</html>
<script type="text/javascript">

	function Reconload() {
		debugger;
		if (getlocalStorage("rule_detailsko") != undefined) {
			var data = getlocalStorage("rule_detailsko");
			//var cat = data.dataset_category;
			$("#Ruletxtmode").val('View');
			$("#txtrulecode").val(data.rule_code);
			$("#ruleName").val(data.rule_name);
			$("#cmbreconname1").val(data.recon_code);
			jQuery('#cmbreconname1').trigger("change");
			var reconcode = $("#cmbreconname1").val();
			var in_user_code = sessionStorage.getItem("usrname");
			$.ajax({
				type: "POST",
				url: '../Rulesetup/rulereconfetch',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_recon_code: data.recon_code, in_user_code: in_user_code }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					var res = JSON.parse(response);
					$("#recontype").val(res[0].recontype_code);
					recontypecondition();
				}
			});
			//dataset combo
			var reconcode = $("#cmbreconname1").val();
			var in_user_code = sessionStorage.getItem("usrname");
			$.ajax({
				type: "POST",
				url: '../Rulesetup/rulerecondatasetfetch',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_recon_code: reconcode, in_user_code: in_user_code }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					var res = JSON.parse(response);
					$("#sourcedataset").empty();
					$("#sourcedataset").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(res, function (index, item) {
						if (item.dataset_type != "S") {
							$("#sourcedataset").append($('<option>', {
								value: item.dataset_code,
								text: item.dataset_name
							}));
						}
					});
					$("#comdataset").empty();
					$("#comdataset").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(res, function (index, item) {
						if (item.dataset_type != "S") {
							$("#comdataset").append($('<option>', {
								value: item.dataset_code,
								text: item.dataset_name
							}));
						}
					});
				}
			});
			$("#txtstatus").val("Active");
			var in_user_code = sessionStorage.getItem("usrname");
			$.ajax({
				type: "POST",
				url: '../Rulesetup/rulefetch',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_rule_gid: data.rule_gid, in_user_code: in_user_code }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					if (response != null) {
						var res = JSON.parse(response);
						$("#RuleAppliedOn").val(res.RuleHeader[0].rule_apply_on);
						$("#sourcedataset").val(res.RuleHeader[0].source_dataset_code);
						RuleApplied();
						if (res.RuleHeader[0].threshold_flag == "Y") {
							$("#thersholdflag").prop("checked", true);
							$("#addconfig").show();
						} else {
							$("#thersholdflag").prop("checked", false);
							$("#addconfig").hide();
						}
						$("#comdataset").val(res.RuleHeader[0].comparison_dataset_code);
						$("#souaccmode").val(res.RuleHeader[0].source_acc_mode);
						$("#comaccmode").val(res.RuleHeader[0].comparison_acc_mode);
						$("#cmbgroupflag").val(res.RuleHeader[0].group_flag);
						$("#ruleorder").val(res.RuleHeader[0].ruleorder);
						$("#period_from1").val(res.RuleHeader[0].period_from);
						$("#period_to1").val(res.RuleHeader[0].period_to);
						$("#probableflag").val(res.RuleHeader[0].probable_match_flag);
						if (res.RuleHeader[0].rule_automatch_partial == "Y") {
							$("#partialmatch3").prop("checked", true);
						} else {
							$("#partialmatch4").prop("checked", true);
						}
						$("#thersholdplus1").val(res.RuleHeader[0].threshold_plus_value);
						$("#thersholdminus1").val(res.RuleHeader[0].threshold_minus_value);
						$("#cmbthersholdvalue1").val(res.RuleHeader[0].threshold_code);
						$("#ruleremark").val(res.RuleHeader[0].rule_remark);
						if (res.RuleHeader[0].until_active_flag == "Y") {
							$('#untillactive').attr('checked', true);
						}
						if (res.RuleCondition.length > 0) {
							$("#gd_rulecondition").empty();
							$("#gd_rulecondition").append("<div id='grid_rulecondition'></div>");
							grid_rulecondition(res.RuleCondition);
						}
						else {
							grid_rulecondition([]);
						}
						if (res.RuleGrouping.length > 0) {
							$("#gd_grouping").empty();
							$("#gd_grouping").append("<div id='grid_grouping'></div>");
							grid_grouping(res.RuleGrouping);
						}
						else {
							grid_grouping([]);
						}
						if (res.sourceidentifier.length > 0) {
							$("#gd_sourceidentifier").empty();
							$("#gd_sourceidentifier").append("<div id='grid_sourceidentifier'></div>");
							grid_sourceidentifier(res.sourceidentifier);
						}
						else {
							grid_sourceidentifier([]);
						}
						if (res.comparisionidentifier.length > 0) {
							$("#gd_comparisionidentifier").empty();
							$("#gd_comparisionidentifier").append("<div id='grid_comparisionidentifier'></div>");
							grid_comparisionidentifier(res.comparisionidentifier);
						}
						else {
							grid_comparisionidentifier([]);
						}
						if (res.RulefieldorderSource.length > 0) {
							$("#gd_sourceorder").empty();
							$("#gd_sourceorder").append("<div id='grid_sourceorder'></div>");
							grid_sourceorder(res.RulefieldorderSource);
						} else {
							grid_sourceorder([]);
						}
						if (res.Rulefieldordercomparison.length > 0) {
							$("#gd_comparisonorder").empty();
							$("#gd_comparisonorder").append("<div id='grid_comparisonorder'></div>");
							grid_comparisonorder(res.Rulefieldordercomparison);
						} else {
							grid_comparisonorder([]);
						}
						if (res.Ruleaggfunction.length > 0) {
							$("#gd_aggfunction").empty();
							$("#gd_aggfunction").append("<div id='grid_aggfunction'></div>");
							grid_aggfunction(res.Ruleaggfunction);
						} else {
							grid_aggfunction([]);
						}
						if (res.Ruleaggcondition.length > 0) {
							$("#gd_aggcondition").empty();
							$("#gd_aggcondition").append("<div id='grid_aggcondition'></div>");
							grid_aggcondition(res.Ruleaggcondition);
						} else {
							grid_aggcondition([]);
						}
					}
					else {

					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}

			});
		}
	}
	function getRuleGridComboList() {
		// probableflag flag
		var in_master_code = "QCD_YN";
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../Common/Qcdmaster',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_user_code: in_user_code, in_master_code: in_master_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				$("#probableflag").empty();
				$("#probableflag").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(response, function (index, item) {
					$("#probableflag").append($('<option>', {
						value: item.masterSyscode,
						text: item.masterName
					}));
				});

			}
		});
		// Dataset type
		var in_master_code = "QCD_RS_RULE_APPLLIED";
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../Common/Qcdmaster',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_user_code: in_user_code, in_master_code: in_master_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				$("#RuleAppliedOn").empty();
				$.each(response, function (index, item) {
					$("#RuleAppliedOn").append($('<option>', {
						value: item.masterSyscode,
						text: item.masterName
					}));
				});

			}
		});

		// group flag
		var in_master_code = "QCD_RULE_GRP";
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../Common/Qcdmaster',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_user_code: in_user_code, in_master_code: in_master_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				$("#cmbgroupflag").empty();
				$("#cmbgroupflag").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(response, function (index, item) {
					$("#cmbgroupflag").append($('<option>', {
						value: item.masterSyscode,
						text: item.masterName
					}));
				});
			}
		});
		// THERSOLD type
		var in_master_code = "QCD_TV";
		var in_user_code = sessionStorage.getItem("usrname");
		$("#cmbthersholdvalue1").empty();
		$("#cmbthersholdvalue1").append($('<option>', {
			value: "",
			text: "  Select  "
		}));
		$.ajax({
			type: "POST",
			url: '../Common/Qcdmaster',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_user_code: in_user_code, in_master_code: in_master_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				$.each(response, function (index, item) {
					$("#cmbthersholdvalue1").append($('<option>', {
						value: item.masterSyscode,
						text: item.masterName
					}));
				});
			}
		});
		//recon name
		var data = {};
		data.in_user_gid = 0;
		data.in_active_status = '';
		data.in_user_code = sessionStorage.getItem("usrname");
		var Context = data;
		$.ajax({
			type: "POST",
			url: '../Recon/Reconlistfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify(data),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				var res = JSON.parse(response);
				$("#cmbreconname1").empty();
				$("#cmbreconname1").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(res, function (index, item) {
					$("#cmbreconname1").append($('<option>', {
						value: item.recon_code,
						text: item.recon_name
					}));
				});
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
		Reconload();
		//sorce dataset
		var reconcode = $("#cmbreconname1").val();
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../Rulesetup/FieldAgainstRecon',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_recon_code: reconcode, in_user_code: in_user_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var res = JSON.parse(response);
					$("#cmbsourcefield").empty();
					$("#cmbsourcefield").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(res, function (index, item) {
						$("#cmbsourcefield").append($('<option>', {
							value: item.recon_field_desc,
							text: item.recon_field_name
						}).data('code', item.recon_field_type));
					});
					$("#cmbcomparisionfield").empty();
					$("#cmbcomparisionfield").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(res, function (index, item) {
						$("#cmbcomparisionfield").append($('<option>', {
							value: item.recon_field_desc,
							text: item.recon_field_name
						}).data('code', item.recon_field_type));
					});
				}
				else {
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
	}
	//-----------------------------------------------------          Rule condition ----------------------------------------------------------------
	function grid_rulecondition(data) {
		var source_field_desc_list = "";
		var extraction_criteria_list = "";
		var comparison_criteria_list = "";
		$("#grid_rulecondition").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 5,
				schema: {
					model: {
						fields: {
							open_parem: { type: "string" },
							rulecondition_gid: { type: "string", defaultValue: "0" },
							rulecondition_seqno: { type: "NUMBER", defaultValue: 0 },
							rule_code: { type: "string" },
							source_field_code: { type: "string", defaultValue: "" },
							source_field_desc: { type: "string", defaultValue: "" },
							comparison_field: { type: "string", defaultValue: "" },
							comparison_field_desc: { type: "string" },
							extraction_criteria: { type: "string" },
							extraction_criteria_code: { type: "string" },
							comparison_criteria: { type: "string" },
							comparison_criteria_code: { type: "string" },
							active_status: { type: "string" },
							active_status_desc: { type: "string" },
							close_param: { type: "string" },
							join_condition: { type: "string" },
						}
					}
				}
			},
			height: 185,
			groupable: false,
			//dataBinding: setDefaultValues,
			edit: OnEdit,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_rulecondition').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
			},
			sortable: false,
			selectable: "row",
			filterable: false,
			navigatable: true,
			pageable: true,
			resizable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			//toolbar: "<a class='k-grid-add' onclick='saveheader()' href='' > <span class='fa fa-plus' style = 'color:Black' > </span></a> ",
			columns: [
				{
					field: "rulecondition_seqno",
					title: "Seq No.",
					width: 50,
					attributes: { style: "text-align: right;" },
				},
				{
					title: "(", width: 20,
					template: '#=sel_checkboxrule(data)#'
				},
				{
					field: "rulecondition_gid",
					title: "rulecondition_gid",
					hidden: true,
				},
				{
					field: "source_field_code",
					title: "Source Field",
					width: 100,
					hidden: true,
				},
				{
					field: "source_field_desc",
					title: "Source Field",
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "source_field_code", "grid_rulecondition")
					},
					width: 120,
				},
				{
					field: "extraction_criteria_code",
					title: "Extraction Criteria",
					hidden: true,
				},
				{
					field: "extraction_criteria",
					title: "Extraction Criteria",
					editor: function (container, options) {
						combo_editor_man1(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "extraction_criteria", "grid_rulecondition", "SOURCE")
					},
					editable: true,
					width: 170,
				},
				{
					field: "comparison_field",
					title: "comparison_field",
					width: 100,
					hidden: true,
				},
				{
					field: "comparison_field_desc",
					title: "Comparison Field",
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "comparison_field", "grid_rulecondition")
					},
					width: 120,
				},
				{
					field: "comparison_criteria_code",
					title: "comparison_criteria_code",
					hidden: true,
				},
				{
					field: "comparison_criteria",
					title: "Comparison Criteria",
					editor: function (container, options) {
						combo_editor_man1(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "comparison_criteria", "grid_rulecondition", "COMPARISON")
					},
					width: 170,
				},
				{
					field: "active_status",
					title: "Status",
					hidden: true
				},
				{
					field: "active_status_desc",
					title: "Status",
					width: 80,
					hidden: true
				},
				{
					title: ")", width: 20,
					template: '#=sel_checkboxrule1(data)#'
				},

				{
					field: "join_condition",
					title: "Joins",
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "join_condition", "grid_rulecondition")
					},
					width: 40,
				}],
			editable: true,
		});
		source_field_desc_list = cmbsourcefield();
		comparison_field_desc_list = cmbsourcefield();
		join_condition_list = [{ code: '', desc: '' }, { code: 'AND', desc: 'AND' }, { code: 'OR', desc: 'OR' }];
	}
	var gridRowID = -1;
	function sel_checkboxrule(data) {
		gridRowID++;
		var isChecked = data.open_parentheses_flag;
		var con = "";
		if (isChecked == "true") {
			con = 'checked';
		}
		return '<input id="chk_sel_' + data.rulecondition_gid + '"disabled class="checkbox" type="checkbox" ' + con + ' /> ';
	}
	var gridRowID1 = -1;
	function sel_checkboxrule1(data) {
		gridRowID1++;
		var isChecked1 = data.close_parentheses_flag;
		var con = "";
		if (isChecked1 == "true") {
			con = 'checked';
		}
		return '<input id="chk_sel1_' + data.rulecondition_gid + '"disabled class="checkbox" type="checkbox" ' + con + ' /> ';
	}
	function OnEdit(e) {
		try {
			setDefaultValues(e);
		}
		catch (err) {
			javascript_log4j_root(arguments.callee.name, err);
		}
	}
	function color() {
		$("#grid_rulecondition").data("kendoGrid").dataItem($(event.target).closest("tr")).css('backgroundColor', '#ff3333');
	}
	function combo_editor_man1(container, cmbid, datasource, datafield, code_datafield, grid_id, Sdata) {
		//
		var arr = [];
		var cmb_var = $("#" + grid_id).data("kendoGrid");
		var selectedItem = cmb_var.dataItem(cmb_var.select());
		var sourcedata = Sdata;
		if (sourcedata == "SOURCE") {
			var codeValue = selectedItem.source_field_desc;
		} else {
			var codeValue = selectedItem.comparison_field_desc;
		}
		var in_recon_code = $("#cmbreconname1").val();
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../Rulesetup/rulefilterfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_condition_type: sourcedata, in_field_type: codeValue, in_recon_code: in_recon_code, in_user_code: in_user_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var res = JSON.parse(response);
					for (i = 0; res.length > i; i++) {
						var list = {};
						list.code = res[i].condition_desc;
						list.desc = res[i].condition_desc;
						arr.push(list);
					}
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
		$('<input  id="' + cmbid + '" data-text-field="desc" data-value-field="desc" data-bind="value:' + datafield + '" name ="' + datafield + '"/>').appendTo(container).kendoComboBox({
			autoBind: false,
			filter: "contains",
			dataSource: arr,
			change: function (e) {
				var cmb_var = $("#" + grid_id).data("kendoGrid");
				var selectedItem = cmb_var.dataItem(cmb_var.select());
				var combobox_data = $("#" + cmbid).data("kendoComboBox");
				if (datafield == "extraction_criteria") {
					if (datafield == "extraction_criteria" && selectedItem.extraction_criteria_input != undefined) {
						selectedItem[datafield] = selectedItem.extraction_criteria_input;
					} else {
						selectedItem[datafield] = combobox_data.dataItem(combobox_data.selectedIndex).desc;
					}
					selectedItem.extraction_criteria_input = undefined;
				}
				if (datafield == "comparison_criteria") {
					if (datafield == "comparison_criteria" && selectedItem.comparison_criteria_input != undefined) {
						selectedItem[datafield] = selectedItem.comparison_criteria_input;
					} else {
						selectedItem[datafield] = combobox_data.dataItem(combobox_data.selectedIndex).desc;
					}
					selectedItem.comparison_criteria_input = undefined;
				}
			},
		});
	}
	function cmbsourcefield() {
		//
		var arr1 = [];
		var reconcode = $("#cmbreconname1").val();
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../Rulesetup/FieldAgainstRecon',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_recon_code: reconcode, in_user_code: in_user_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var result = JSON.parse(response);
					for (i = 0; result.length > i; i++) {
						var list1 = {};
						list1.code = result[i].recon_field_name;
						list1.desc = result[i].recon_field_desc;
						arr1.push(list1);
					}
				}
			}
		});
		return arr1;
	}
	//-----------------------------------------------------   Rule condition  ----------------------------------------------------------------

	//-----------------------------------------------------     identifier    ----------------------------------------------------------------
	function grid_sourceidentifier(data) {
		var filter_criteria_list = "";
		var ident_criteria_list = "";
		$("#grid_sourceidentifier").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 5,
				schema: {
					model: {
						fields: {
							ruleselefilter_gid: { type: "string", defaultValue: "0" },
							ruleselefilter_seqno: { type: "number", defaultValue: "0" },
							filter_applied_on: { type: "string", defaultValue: "S" },
							filter_field_code: { type: "string" },
							filter_field: { type: "string" },
							filter_criteria: { type: "string" },
							ident_criteria: { type: "string" },
							ident_value: { type: "string" },
							active_status: { type: "string" },
							active_status_desc: { type: "string" },
							join_condition: { type: "string" },
						}
					}
				}
			},
			height: 185,
			groupable: false,
			dataBinding: setDefaultValues,
			edit: OnEdit,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_sourceidentifier').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
			},
			sortable: false,
			selectable: true,
			filterable: false,
			navigatable: true,
			pageable: true,
			resizable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			//toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
			columns: [
				{
					field: "ruleselefilter_seqno",
					title: "Seq No.",
					width: 40,
					attributes: { style: "text-align: right;" },
				},
				{
					title: "(", width: 20,
					template: '#=sel_checkboxrulesI(data)#'
				},
				{
					field: "ruleselefilter_gid",
					title: "ruleselefilter_gid",
					hidden: true,
				},
				{
					field: "dataset_name",
					title: "Filter Applied On",
					width: 100,
					hidden: true,
				},
				{
					field: "filter_applied_on",
					title: "Filter Applied On",
					width: 100,
					hidden: true,
				},
				{
					field: "filter_field_code",
					title: "Filter Applied On",
					width: 100,
					hidden: true,
				},
				{
					field: "filter_field",
					title: "Filter Field",
					width: 100,
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "filter_field_code", "grid_sourceidentifier")
					},
				},
				{
					field: "filter_criteria",
					title: "Filter Criteria",
					width: 100,
					editor: function (container, options) {
						combo_filter_field(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "filter_criteria", "grid_sourceidentifier", "SOURCE")
					},
				},
				{
					field: "ident_criteria",
					title: "Identifier Criteria",
					width: 100,
					editor: function (container, options) {
						combo_filter_field(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "ident_criteria", "grid_sourceidentifier", "COMPARISON")
					},
				},
				{
					field: "ident_value",
					title: "Identifier Value",
					width: 100,
				},
				{
					field: "active_status",
					title: "Status",
					hidden: true
				},
				{
					field: "active_status_desc",
					title: "Status",
					width: 80,
					hidden: true,
				},
				{
					title: ")", width: 20,
					template: '#=sel_checkboxrulesI1(data)#'
				},
				{
					field: "join_condition",
					title: "Joins",
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "join_condition", "grid_sourceidentifier")
					},
					width: 120,
				}],
			editable: true,
		});
		filter_field_list = cmbsourcefield();
		join_condition_list = [{ code: '', desc: '' }, { code: 'AND', desc: 'AND' }, { code: 'OR', desc: 'OR' }];

		function OnEdit(e) {
			try {
				setDefaultValues(e);
			}
			catch (err) {
				javascript_log4j_root(arguments.callee.name, err);
			}
		}
	}
	var gridRowID = -1;
	function sel_checkboxrulesI(data) {
		gridRowID++;
		var isChecked = data.open_parentheses_flag;
		var con = "";
		if (isChecked == "true") {
			con = 'checked';
		}
		return '<input id="chk_sel_' + data.ruleselefilter_gid + '"disabled class="checkbox" type="checkbox" ' + con + ' /> ';
	}
	var gridRowID1 = -1;
	function sel_checkboxrulesI1(data) {
		gridRowID1++;
		var isChecked1 = data.close_parentheses_flag;
		var con = "";
		if (isChecked1 == "true") {
			con = 'checked';
		}
		return '<input id="chk_sel1_' + data.ruleselefilter_gid + '"disabled class="checkbox" type="checkbox" ' + con + ' /> ';
	}
	function combo_filter_field(container, cmbid, datasource, datafield, code_datafield, grid_id, Sdata) {
		var arr = [];
		var cmb_var = $("#" + grid_id).data("kendoGrid");
		var selectedItem = cmb_var.dataItem(cmb_var.select());
		var sourcedata = Sdata;
		if (sourcedata == "SOURCE") {
			var codeValue = selectedItem.filter_field;
		} else {
			var codeValue = selectedItem.filter_field;
		}
		var in_recon_code = $("#cmbreconname1").val();
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../Rulesetup/rulefilterfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_condition_type: sourcedata, in_field_type: codeValue, in_recon_code: in_recon_code, in_user_code: in_user_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var res = JSON.parse(response);
					for (i = 0; res.length > i; i++) {
						var list = {};
						list.code = res[i].condition_desc;
						list.desc = res[i].condition_desc;
						arr.push(list);
					}
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});

		$('<input  id="' + cmbid + '" data-text-field="desc" data-value-field="desc" data-bind="value:' + datafield + '" name ="' + datafield + '"/>').appendTo(container).kendoComboBox({
			autoBind: false,
			filter: "contains",
			dataSource: arr,
			change: function (e) {
				var cmb_var = $("#" + grid_id).data("kendoGrid");
				var selectedItem = cmb_var.dataItem(cmb_var.select());
				var combobox_data = $("#" + cmbid).data("kendoComboBox");
				if (datafield == "filter_criteria") {
					if (datafield == "filter_criteria" && selectedItem.filter_criteria_input != undefined) {
						selectedItem[datafield] = selectedItem.filter_criteria_input;
					} else {
						selectedItem[datafield] = combobox_data.dataItem(combobox_data.selectedIndex).desc;
					}
					selectedItem.filter_criteria_input = undefined;
				}
				if (datafield == "ident_criteria") {
					if (datafield == "ident_criteria" && selectedItem.ident_criteria_input != undefined) {
						selectedItem[datafield] = selectedItem.ident_criteria_input;
					} else {
						selectedItem[datafield] = combobox_data.dataItem(combobox_data.selectedIndex).desc;
					}
					selectedItem.ident_criteria_input = undefined;
				}
			}
		});
	}
	function grid_comparisionidentifier(data) {
		var filter_criteria_list = "";
		var ident_criteria_list = "";
		$("#grid_comparisionidentifier").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 5,
				schema: {
					model: {
						fields: {
							ruleselefilter_gid: { type: "string", defaultValue: "0" },
							ruleselefilter_seqno: { type: "number", defaultValue: "0" },
							filter_applied_on: { type: "string", defaultValue: "C" },
							filter_field: { type: "string" },
							filter_field_code: { type: "string" },
							filter_criteria: { type: "string" },
							ident_criteria: { type: "string" },
							ident_value: { type: "string" },
							active_status: { type: "string" },
							active_status_desc: { type: "string" },
							join_condition: { type: "string" },
						}
					}
				}
			},
			height: 185,
			groupable: false,
			dataBinding: setDefaultValues,
			edit: OnEdit,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_comparisionidentifier').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
			},
			sortable: false,
			selectable: true,
			filterable: false,
			navigatable: true,
			pageable: true,
			resizable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			//toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
			columns: [
				{
					field: "ruleselefilter_seqno",
					title: "Seq No.",
					width: 40,
					attributes: { style: "text-align: right;" },
				},
				{
					title: "(", width: 20,
					template: '#=sel_checkboxruleCI(data)#'
				},
				{
					field: "ruleselefilter_gid",
					title: "ruleselefilter_gid",
					hidden: true,
				},
				{
					field: "dataset_name",
					title: "Filter Applied On",
					width: 100,
					hidden: true,
				},
				{
					field: "filter_applied_on",
					title: "Filter Applied On",
					width: 100,
					hidden: true,
				},
				{
					field: "filter_field_code",
					title: "filter_field_code",
					width: 100,
					hidden: true,
				},
				{
					field: "filter_field",
					title: "Filter Field",
					width: 100,
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "filter_field_code", "grid_comparisionidentifier")
					},
				},
				{
					field: "filter_criteria",
					title: "Filter Criteria",
					width: 100,
					editor: function (container, options) {
						combo_filter_field1(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "filter_criteria", "grid_comparisionidentifier", "SOURCE")
					},
				},
				{
					field: "ident_criteria",
					title: "Identifier Criteria",
					width: 100,
					editor: function (container, options) {
						combo_filter_field1(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "ident_criteria", "grid_comparisionidentifier", "COMPARISON")
					},
				},
				{
					field: "ident_value",
					title: "Identifier Value",
					width: 100,
				},
				{
					field: "active_status",
					title: "Status",
					hidden: true
				},
				{
					field: "active_status_desc",
					title: "Status",
					width: 80,
					hidden: true,
				},
				{
					title: ")", width: 20,
					template: '#=sel_checkboxruleCI1(data)#'
				},
				{
					field: "join_condition",
					title: "Joins",
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "join_condition", "grid_comparisionidentifier")
					},
					width: 120,
				}],
			editable: true,
		});
		filter_field_list = cmbsourcefield();
		join_condition_list = [{ code: '', desc: '' }, { code: 'AND', desc: 'AND' }, { code: 'OR', desc: 'OR' }];

		function OnEdit(e) {
			try {
				setDefaultValues(e);
			}
			catch (err) {
				javascript_log4j_root(arguments.callee.name, err);
			}
		}
	}
	var gridRowID = -1;
	function sel_checkboxruleCI(data) {
		gridRowID++;
		var isChecked = data.open_parentheses_flag;
		var con = "";
		if (isChecked == "true") {
			con = 'checked';
		}
		return '<input id="chk_sel_' + data.ruleselefilter_gid + '"disabled class="checkbox" type="checkbox" ' + con + ' /> ';
	}
	var gridRowID1 = -1;
	function sel_checkboxruleCI1(data) {
		gridRowID1++;
		var isChecked1 = data.close_parentheses_flag;
		var con = "";
		if (isChecked1 == "true") {
			con = 'checked';
		}
		return '<input id="chk_sel1_' + data.ruleselefilter_gid + '"disabled class="checkbox" type="checkbox" ' + con + ' /> ';
	}
	function combo_filter_field1(container, cmbid, datasource, datafield, code_datafield, grid_id, Sdata) {
		var arr = [];
		var cmb_var = $("#" + grid_id).data("kendoGrid");
		var selectedItem = cmb_var.dataItem(cmb_var.select());
		var sourcedata = Sdata;
		if (sourcedata == "SOURCE") {
			var codeValue = selectedItem.filter_field;
		} else {
			var codeValue = selectedItem.filter_field;
		}
		var in_recon_code = $("#cmbreconname1").val();
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../Rulesetup/rulefilterfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_condition_type: sourcedata, in_field_type: codeValue, in_recon_code: in_recon_code, in_user_code: in_user_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var res = JSON.parse(response);
					for (i = 0; res.length > i; i++) {
						var list = {};
						list.code = res[i].condition_desc;
						list.desc = res[i].condition_desc;
						arr.push(list);
					}
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});

		$('<input  id="' + cmbid + '" data-text-field="desc" data-value-field="desc" data-bind="value:' + datafield + '" name ="' + datafield + '"/>').appendTo(container).kendoComboBox({
			autoBind: false,
			filter: "contains",
			dataSource: arr,
			change: function (e) {
				var cmb_var = $("#" + grid_id).data("kendoGrid");
				var selectedItem = cmb_var.dataItem(cmb_var.select());
				var combobox_data = $("#" + cmbid).data("kendoComboBox");
				if (datafield == "filter_criteria") {
					if (datafield == "filter_criteria" && selectedItem.filter_criteria_input != undefined) {
						selectedItem[datafield] = selectedItem.filter_criteria_input;
					} else {
						selectedItem[datafield] = combobox_data.dataItem(combobox_data.selectedIndex).desc;
					}
					selectedItem.filter_criteria_input = undefined;
				}
				if (datafield == "ident_criteria") {
					if (datafield == "ident_criteria" && selectedItem.ident_criteria_input != undefined) {
						selectedItem[datafield] = selectedItem.ident_criteria_input;
					} else {
						selectedItem[datafield] = combobox_data.dataItem(combobox_data.selectedIndex).desc;
					}
					selectedItem.ident_criteria_input = undefined;
				}
			}
		});
	}
	//-----------------------------------------------------     identifier     ----------------------------------------------------------------
	//-----------------------------------------------------     grouping    ----------------------------------------------------------------
	function grid_grouping(data) {
		$("#grid_grouping").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 5,
				schema: {
					model: {
						fields: {
							rulegrpfield_gid: { type: "string", defaultValue: "0" },
							rulegrpfield_seqno: { type: "number", defaultValue: "0" },
							grp_field: { type: "string" },
							active_status: { type: "string" },
							active_status_desc: { type: "string" }
						}
					}
				}
			},
			height: 185,
			groupable: false,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_grouping').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
			},
			sortable: false,
			selectable: true,
			filterable: false,
			navigatable: true,
			resizable: true,
			pageable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			//toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
			columns: [
				{
					field: "rulegrpfield_gid",
					title: "rulegrpfield_gid",
					hidden: true,
				},
				{
					field: "rulegrpfield_seqno",
					title: "Seq No.",
					width: 30,
					attributes: { style: "text-align: right;" },
				},
				{
					field: "grp_field",
					title: "Comparison Group Field",
					width: 100,
					hidden: true,
				},
				{
					field: "recon_field_code",
					title: "recon_field_code",
					hidden: true,
				},
				{
					field: "recon_field_name",
					title: "Comparison Group Field",
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "recon_field_code", "grid_grouping")
					},
					width: 120,
				},
				{
					field: "active_status",
					title: "Status",
					hidden: true
				},
				{
					field: "active_status_desc",
					title: "Status",
					width: 80,
					hidden: true,
				}],
			editable: true,

		});
		recon_field_name_list = cmbsourcefield();
	}
	//-----------------------------------------------------     grouping    ----------------------------------------------------------------

	//-----------------------------------------------------     Source order    ----------------------------------------------------------------
	function grid_sourceorder(data) {
		var recorder_field_list = "";
		$("#grid_sourceorder").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 5,
				schema: {
					model: {
						fields: {
							rulerecorder_gid: { type: "string", defaultValue: "0" },
							rule_code: { type: "string" },
							recorder_applied_on: { type: "string" },
							recorder_seqno: { type: "number" },
							recorder_field: { type: "string" },
							active_status: { type: "string" },
							active_status_desc: { type: "string" }
						}
					}
				}
			},
			//toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
			height: 185,
			groupable: false,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_sourceorder').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
			},
			sortable: false,
			selectable: true,
			filterable: false,
			navigatable: true,
			pageable: true,
			resizable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			columns: [
				{
					field: "rulerecorder_gid",
					title: "rulerecorder_gid",
					hidden: true,
				},
				{
					field: "rule_code",
					title: "rule_code",
					width: 100,
					hidden: true,
				},
				{
					field: "recorder_applied_on",
					title: "recorder_applied_on",
					hidden: true,
				},
				{
					field: "recorder_field_code",
					title: "rule_code",
					width: 100,
					hidden: true,
				},
				{
					field: "recorder_field",
					title: "Source Field",
					width: 100,
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "recorder_field_code", "grid_sourceorder")
					},
				},
				{
					field: "recorder_seqno",
					title: "Order Field",
					width: 100,
				},
				{
					field: "active_status",
					title: "Status",
					hidden: true
				},
				{
					field: "active_status_desc",
					title: "Status",
					width: 80,
					hidden: true
				}],
			editable: true,

		});
		recorder_field_list = cmbsourcefield();
	}
	function grid_comparisonorder(data) {
		var recorder_field_list = "";
		$("#grid_comparisonorder").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 5,
				schema: {
					model: {
						fields: {
							rulerecorder_gid: { type: "string", defaultValue: "0" },
							rule_code: { type: "string" },
							recorder_applied_on: { type: "string" },
							recorder_seqno: { type: "number" },
							recorder_field: { type: "string" },
							active_status: { type: "string" },
							active_status_desc: { type: "string" }
						}
					}
				}
			},
			//toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
			height: 185,
			groupable: false,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_comparisonorder').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
			},
			sortable: false,
			selectable: true,
			filterable: false,
			navigatable: true,
			pageable: true,
			resizable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			columns: [
				{
					field: "rulerecorder_gid",
					title: "rulerecorder_gid",
					hidden: true,
				},
				{
					field: "rule_code",
					title: "rule_code",
					width: 100,
					hidden: true,
				},
				{
					field: "recorder_applied_on",
					title: "recorder_applied_on",
					hidden: true,
				},
				{
					field: "recorder_field_code",
					title: "rule_code",
					width: 100,
					hidden: true,
				},
				{
					field: "recorder_field",
					title: "Target Field",
					width: 100,
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "recorder_field_code", "grid_comparisonorder")
					},
				},
				{
					field: "recorder_seqno",
					title: "Order Field",
					width: 100,
				},
				{
					field: "active_status",
					title: "Status",
					hidden: true
				},
				{
					field: "active_status_desc",
					title: "Status",
					width: 80,
					hidden: true
				}],
			editable: true,

		});
		recorder_field_list = cmbsourcefield();
	}
	//-----------------------------------------------------     Source order    ----------------------------------------------------------------
	//-----------------------------------------------------     Agg function    ----------------------------------------------------------------
	function grid_aggfunction(data) {
		$("#grid_aggfunction").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 5,
				sort: [{ field: "ruleaggfield_seqno", dir: "asc" }],
				schema: {
					model: {
						fields: {
							ruleaggfield_gid: { type: "string", defaultValue: "0" },
							ruleaggfield_seqno: { type: "string", defaultValue: "0" },
							ruleaggfield_applied_on: { type: "string" },
							ruleagg_field: { type: "string" },
							ruleaggfield_desc: { type: "string" },
							recon_field: { type: "string" },
							ruleagg_function: { type: "string" },
							active_status: { type: "string" },
							active_status_desc: { type: "string" }
						}
					}
				}
			},
			height: 185,
			groupable: false,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_aggfunction').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
				if ($("#txtmode").val() == "View") {
					$(".k-grid-save").hide();
					$(".k-grid-delete").hide();
					$(".k-grid-add").hide();
				}
			},
			sortable: false,
			selectable: true,
			filterable: false,
			navigatable: true,
			resizable: true,
			pageable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			toolbar: "<a href='javascript:void(0)' onclick='addRowagg()' href=''><span class='fa fa-plus' style='color:white'></span></a>",
			columns: [
				{
					field: "ruleaggfield_gid",
					title: "ruleaggfield_gid",
					hidden: true,
				},
				{
					field: "ruleaggfield_seqno",
					title: "Seq No.",
					width: 40,
					attributes: { style: "text-align: right;" },
					editor: function (container, options) {
						item_rate(container, options.field, '9', '2');
					},
				},
				{
					field: "ruleaggfield_desc",
					title: "Aggregate Function Desc",
					width: 100,
				},
				{
					field: "ruleaggfield_applied_on_code",
					title: "ruleaggfield_applied_on_code",
					hidden: true,
				},
				{
					field: "ruleaggfield_applied_on",
					title: "Applied On",
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "ruleaggfield_applied_on_code", "grid_aggfunction")
					},
					width: 100,
				},
				{
					field: "recon_field_code",
					title: "recon_field_code",
					hidden: true,
				},
				{
					field: "recon_field",
					title: "Recon Field",
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "recon_field_code", "grid_aggfunction")
					},
					width: 100,
				},
				{
					field: "ruleagg_function",
					title: "Aggregate Function",
					width: 100,
				},
				{
					field: "active_status",
					title: "Status",
					hidden: true
				},
				{
					field: "active_status_desc",
					title: "Status",
					width: 80,
					hidden: true,
				}],
			editable: true,

		});
		recon_field_list = cmbsourcefield();
		ruleaggfield_applied_on_list = grpfield_applied_on();
	}

	function grpfield_applied_on() {
		var arr1 = [];
		var in_master_code = "QCD_Appiled_on";
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../Common/Qcdmaster',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_user_code: in_user_code, in_master_code: in_master_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (data) {
				var response = data;
				if (response != null) {
					for (i = 0; response.length > i; i++) {
						var list1 = {};
						list1.code = response[i].masterSyscode;
						list1.desc = response[i].masterName;
						arr1.push(list1);
					}
				}
			}
		});
		return arr1;
	}
	//-----------------------------------------------------     Agg function    ----------------------------------------------------------------
	//-----------------------------------------------------     Agg condition    ----------------------------------------------------------------
	var join_condition_list = "";
	var ruleagg_field_list = "";
	var ruleagg_value_list = "";
	var ruleagg_criteria_list = "";
	function grid_aggcondition(data) {
		$("#grid_aggcondition").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 5,
				sort: [{ field: "ruleaggcondition_seqno", dir: "asc" }],
				schema: {
					model: {
						fields: {
							ruleaggcondition_gid: { type: "string", defaultValue: "0" },
							ruleagg_applied_on: { type: "string", defaultValue: "0" },
							ruleagg_applied_on: { type: "string" },
							ruleagg_value: { type: "string" },
							ruleagg_value_code: { type: "string" },
							ruleagg_field_code: { type: "string" },
							ruleagg_field: { type: "string" },
							ruleagg_criteria: { type: "string" },
							active_status: { type: "string" },
							active_status_desc: { type: "string" },
							open_parentheses_flag: { type: "string", editable: false },
							close_parentheses_flag: { type: "string", editable: false },
						}
					}
				}
			},
			height: 185,
			groupable: false,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_aggfunction').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
				if ($("#txtmode").val() == "View") {
					$(".k-grid-save").hide();
					$(".k-grid-delete").hide();
					$(".k-grid-add").hide();
				}
			},
			sortable: false,
			selectable: true,
			filterable: false,
			navigatable: true,
			resizable: true,
			pageable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			toolbar: "<a href='javascript:void(0)' onclick='addRowaggcon()' href=''><span class='fa fa-plus' style='color:white'></span></a>",
			columns: [
				{
					field: "ruleaggcondition_gid",
					title: "ruleaggcondition_gid",
					hidden: true,
				},
				{
					field: "ruleaggcondition_seqno",
					title: "Seq No.",
					width: 40,
					attributes: { style: "text-align: right;" },
					editor: function (container, options) {
						item_rate(container, options.field, '9', '2');
					},
				},
				{
					field: "open_parentheses_flag",
					title: "(", width: 20,
					template: function (dataItem) {
						if (dataItem.themeaggcondition_gid > 0) {
							return '<input type="checkbox" ' + (dataItem.open_parentheses_flag == "Y" ? 'checked="checked"' : '') + ' class="chkbx7">';
						} else {
							return '<input type="checkbox" ' + (dataItem.open_parentheses_flag == "Y" ? 'checked="checked"' : '') + ' class="chkbx7">';
						}
					}
				},
				{
					field: "ruleagg_field_code",
					title: "ruleagg_field_code",
					hidden: true,
				},
				{
					field: "ruleagg_field",
					title: "Condition Field",
					editor: function (container, options) {
						combo_editor_condition(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "ruleagg_field_code", "grid_aggcondition")
					},
					width: 100,
				},
				{
					field: "ruleagg_criteria",
					title: "Condition Criteria",
					width: 100,
					editor: function (container, options) {
						combo_editor_conditionCriteria(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "ruleagg_criteria", "grid_aggcondition")
					},
				},
				{
					field: "ruleagg_value_code",
					title: "ruleagg_value_code",
					hidden: true,
				},
				{
					field: "ruleagg_value",
					title: "Comparison Field/Value",
					width: 100,
					editor: function (container, options) {
						combo_editor_conditionvalue(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "ruleagg_value_code", "grid_aggcondition")
					},
				},
				{
					field: "close_parentheses_flag",
					title: ")", width: 20,
					template: function (dataItem) {
						if (dataItem.themeaggcondition_gid > 0) {
							return '<input type="checkbox" ' + (dataItem.close_parentheses_flag == "Y" ? 'checked="checked"' : '') + ' class="chkbx8">';
						} else {
							return '<input type="checkbox" ' + (dataItem.close_parentheses_flag == "Y" ? 'checked="checked"' : '') + ' class="chkbx8">';
						}
					},
				},
				{
					field: "join_condition",
					title: "Joins",
					editor: function (container, options) {
						combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "join_condition", "grid_aggcondition")
					},
					width: 40,
				},
				{
					field: "active_status",
					title: "Status",
					hidden: true
				},
				{
					field: "active_status_desc",
					title: "Status",
					width: 80,
					hidden: true,
				}],
			editable: true,

		});
		join_condition_list = [{ code: '', desc: '' }, { code: 'AND', desc: 'AND' }, { code: 'OR', desc: 'OR' }];
	}
	$(function () {
		$('#grid_aggcondition').on('click', '.chkbx7', function () {
			var checked = $(this).is(':checked');
			var grid = $('#grid_aggcondition').data().kendoGrid;
			var dataItem = grid.dataItem($(this).closest('tr'));
			var row = $(this).closest('tr');
			if (checked == true) {
				dataItem._set('open_parentheses_flag', 'Y');
			}
			else {
				dataItem._set('open_parentheses_flag', 'N');
			}
		})
	})
	$(function () {
		$('#grid_aggcondition').on('click', '.chkbx8', function () {
			var checked = $(this).is(':checked');
			var grid = $('#grid_aggcondition').data().kendoGrid;
			var dataItem = grid.dataItem($(this).closest('tr'));
			var row = $(this).closest('tr');
			if (checked == true) {
				dataItem._set('close_parentheses_flag', 'Y');
			}
			else {
				dataItem._set('close_parentheses_flag', 'N');
			}
		})
	})
	function combo_editor_condition(container, cmbid, datasource, datafield, code_datafield, grid_id, Sdata) {
		var arr1 = [];
		var rule_code = $("#rulegid").val();
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../Rulesetup/rulefetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_rule_gid: rule_code, in_user_code: in_user_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var result = JSON.parse(response);
					if (result.Ruleaggfunction.length > 0) {
						for (i = 0; result.Ruleaggfunction.length > i; i++) {
							var list1 = {};
							list1.code = result.Ruleaggfunction[i].ruleagg_field;
							list1.desc = result.Ruleaggfunction[i].ruleaggfield_desc;
							arr1.push(list1);
						}
					}
				}
			}
		});
		$('<input  id="' + cmbid + '" data-text-field="desc" data-value-field="desc" data-bind="value:' + datafield + '" name ="' + datafield + '"/>').appendTo(container).kendoComboBox({
			autoBind: false,
			filter: "contains",
			dataSource: arr1,
			change: function (e) {
				var cmb_value = this.value();
				if (cmb_value && this.selectedIndex == -1) {
					this.value("");
				}
				//else{FF
				var cmb_var = $("#" + grid_id).data("kendoGrid");
				var selectedItem = cmb_var.dataItem(cmb_var.select());
				var combobox_data = $("#" + cmbid).data("kendoComboBox");
				if (combobox_data != undefined && combobox_data.selectedIndex == -1) {
					selectedItem[datafield] = "";
					selectedItem[code_datafield] = "";
				}
				else {
					selectedItem[datafield] = combobox_data.dataItem(combobox_data.selectedIndex).desc;
					selectedItem[code_datafield] = combobox_data.dataItem(combobox_data.selectedIndex).code;
				}
			}
		});
		$("<span class='k-invalid-msg' data-for='" + datafield + "'></span>").appendTo(container);
	}
	function combo_editor_conditionvalue(container, cmbid, datasource, datafield, code_datafield, grid_id, Sdata) {
		var arr1 = [];
		var rule_code = $("#rulegid").val();
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../Rulesetup/rulefetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_rule_gid: rule_code, in_user_code: in_user_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var result = JSON.parse(response);
					if (result.Ruleaggfunction.length > 0) {
						for (i = 0; result.Ruleaggfunction.length > i; i++) {
							var list1 = {};
							list1.code = result.Ruleaggfunction[i].ruleagg_field;
							list1.desc = result.Ruleaggfunction[i].ruleaggfield_desc;
							arr1.push(list1);
						}
					}
				}
			}
		});
		$('<input  id="' + cmbid + '" data-text-field="desc" data-value-field="desc" data-bind="value:' + datafield + '" name ="' + datafield + '"/>').appendTo(container).kendoComboBox({
			autoBind: false,
			filter: "contains",
			dataSource: arr1,
			change: function (e) {
				var cmb_value = this.value();
				if (cmb_value && this.selectedIndex == -1) {
					this.value("");
				}
				//else{FF
				var cmb_var = $("#" + grid_id).data("kendoGrid");
				var selectedItem = cmb_var.dataItem(cmb_var.select());
				var combobox_data = $("#" + cmbid).data("kendoComboBox");
				if (datafield == "ruleagg_value") {
					if (datafield == "ruleagg_value" && selectedItem.ruleagg_value_input != undefined) {
						selectedItem[datafield] = selectedItem.ruleagg_value_input;
					} else {
						selectedItem[datafield] = combobox_data.dataItem(combobox_data.selectedIndex).desc;
						selectedItem[code_datafield] = combobox_data.dataItem(combobox_data.selectedIndex).code;
					}
				}
			}
		});
		$("<span class='k-invalid-msg' data-for='" + datafield + "'></span>").appendTo(container);
	}
	function combo_editor_conditionCriteria(container, cmbid, datasource, datafield, code_datafield, grid_id, Sdata) {
		var arr1 = [];
		var cmb_var = $("#" + grid_id).data("kendoGrid");
		var selectedItem = cmb_var.dataItem(cmb_var.select());
		var themeagg_code = selectedItem.ruleagg_field_code;
		var sourcedata = "COMPARISON";
		var in_rule_code = $("#txtrulecode").val();
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../Rulesetup/getconditionfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_condition_type: sourcedata, in_field_type: themeagg_code, in_rule_code: in_rule_code, in_user_code: in_user_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var res = JSON.parse(response);
					for (i = 0; res.length > i; i++) {
						var list = {};
						list.code = res[i].condition_desc;
						list.desc = res[i].condition_desc;
						arr1.push(list);
					}
				}
			}
		});
		$('<input  id="' + cmbid + '" data-text-field="desc" data-value-field="desc" data-bind="value:' + datafield + '" name ="' + datafield + '"/>').appendTo(container).kendoComboBox({
			autoBind: false,
			filter: "contains",
			dataSource: arr1,
			change: function (e) {
				var cmb_value = this.value();
				if (cmb_value && this.selectedIndex == -1) {
					this.value("");
				}
				//else{FF
				var cmb_var = $("#" + grid_id).data("kendoGrid");
				var selectedItem = cmb_var.dataItem(cmb_var.select());
				var combobox_data = $("#" + cmbid).data("kendoComboBox");
				if (datafield == "ruleagg_criteria") {
					if (datafield == "ruleagg_criteria" && selectedItem.ruleagg_criteria_input != undefined) {
						selectedItem[datafield] = selectedItem.ruleagg_criteria_input;
					} else {
						selectedItem[datafield] = combobox_data.dataItem(combobox_data.selectedIndex).desc;
					}
					selectedItem.themeagg_criteria_input = undefined;
				}
			}
		});
		$("<span class='k-invalid-msg' data-for='" + datafield + "'></span>").appendTo(container);
	}
	//-----------------------------------------------------     Agg condition    ----------------------------------------------------------------
	function RuleApplied() {
		if ($("#RuleAppliedOn").val() == 'T') {
			$("#lblcomaccmode").text("Target Account mode").append("&nbsp;<span style='font - size: 12px; color: red; font - weight: bold; '>*</span>");
			$("#comsupdataset").text("Target Dataset").append("&nbsp;<span style='font - size: 12px; color: red; font - weight: bold; '>*</span>");

		} else if ($("#RuleAppliedOn").val() == 'S') {
			$("#comsupdataset").text("Supporting Dataset").append("&nbsp;<span style='font - size: 12px; color: red; font - weight: bold; '>*</span>");
			$("#lblcomaccmode").text("Supporting Account mode").append("&nbsp;<span style='font - size: 12px; color: red; font - weight: bold; '>*</span>");
			//dataset combo
			var reconcode = $("#cmbreconname1").val();
			var in_user_code = sessionStorage.getItem("usrname");
			$.ajax({
				type: "POST",
				url: '../Rulesetup/rulerecondatasetfetch',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_recon_code: reconcode, in_user_code: in_user_code }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					var res = JSON.parse(response);
					var sodata = $("#sourcedataset").val();
					$("#comdataset").empty();
					$("#comdataset").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(res, function (index, item) {
						if (item.dataset_type == "S") {
							$("#comdataset").append($('<option>', {
								value: item.dataset_code,
								text: item.dataset_name
							}));
						}
					});
				}
			});
		}
	}
	function recontypecondition() {
		var recontype = $("#recontype").val();
		if (recontype == "W" || recontype == 'B' || recontype == 'I') {
			// Source account mode
			var in_master_code = "QCD_RS_ACC_MODE";
			var in_user_code = sessionStorage.getItem("usrname");
			$.ajax({
				type: "POST",
				url: '../Common/Qcdmaster',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_user_code: in_user_code, in_master_code: in_master_code }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					$("#souaccmode").empty();
					$("#souaccmode").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(response, function (index, item) {
						if (item.masterShortCode == "S") {
							$("#souaccmode").append($('<option>', {
								value: item.masterSyscode,
								text: item.masterName
							}));
						}
					});
					$("#comaccmode").empty();
					$("#comaccmode").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(response, function (index, item) {
						if (item.masterSyscode != "NA") {
							$("#comaccmode").append($('<option>', {
								value: item.masterSyscode,
								text: item.masterName
							}));
						}
					});
				}
			});
		} else {
			var in_master_code = "QCD_RS_ACC_MODE";
			var in_user_code = sessionStorage.getItem("usrname");
			$.ajax({
				type: "POST",
				url: '../Common/Qcdmaster',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_user_code: in_user_code, in_master_code: in_master_code }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					$("#souaccmode").empty();
					$("#souaccmode").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(response, function (index, item) {
						if (item.masterSyscode == "NA") {
							$("#souaccmode").append($('<option>', {
								value: item.masterSyscode,
								text: item.masterName
							}));
						}
					});
					$("#comaccmode").empty();
					$("#comaccmode").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(response, function (index, item) {
						if (item.masterSyscode == "NA") {
							$("#comaccmode").append($('<option>', {
								value: item.masterSyscode,
								text: item.masterName
							}));
						}
					});
				}
			});
		}
	}
</script>
