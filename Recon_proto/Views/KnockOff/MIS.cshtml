@{
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
<!Doctype html>
<html>
<head>
    <title></title>
    <style>


        .k-grid td {
            border: unset !important;
            font-weight: 800;
            line-height: 1em;
            border-left: 1px solid #c5c5c5 !important;
        }

        .k-grid-header th.k-header, .k-filter-row th {
            font-weight: 700 !important;
        }
        .k-grid td {
            background-color: unset !important;
        }

        .selectedDataset {
            font-size: 13px;
            font-weight: 600;
            color: brown;
        }

  /*      .k-link:link, .k-link:visited, .k-nav-current.k-state-hover .k-link {
            color: #fff !important;
        }*/

        .nav-item.me-2.me-xl-50 {
            margin-right: 33rem !important;
        }

        .error_show {
            color: red;
            margin-left: 10px;
        }

        .k-grid.k-widget {
            height: 360px;
        }

        /*		.k-grid-header th.k-header > .k-link {
                                                    width: 100px;
                                                }*/

        .k-grid-header {
            font-weight: bold;
        }

        .k-state-active {
            display: none;
        }

        .k-content {
            font-weight: normal;
            font-size: 13px;
        }

        .k-widget.k-window {
            padding-top: 35px;
            min-width: 90px;
            min-height: 50px;
            width: 700px !important;
            height: 300px !important;
            top: 180.766px !important;
            /*left: 120px !important;*/
            z-index: 10003;
            left: 300px !important;
        }

        .action-button {
            width: 120px;
            background: #673AB7;
            font-weight: bold;
            color: white;
            border: 0 none;
            border-radius: 0px;
            cursor: pointer;
            padding: 10px 5px;
            margin: 10px 0px 10px 5px;
            float: right;
            border-radius: 20px;
        }

        .action-button-previous {
            width: 100px;
            background: #616161;
            font-weight: bold;
            color: white;
            border: 0 none;
            border-radius: 0px;
            cursor: pointer;
            padding: 10px 5px;
            margin: 10px 5px 10px 0px;
            float: right;
            border-radius: 20px;
        }

        .tooltip-container {
            position: relative;
            display: inline-block;
        }

        .info-icon {
            cursor: pointer;
        }

        .tooltip1 {
            display: none;
            position: absolute;
            background-color: lightslategray;
            color: #fff;
            padding: 10px;
            border-radius: 15px;
            white-space: nowrap;
            z-index: 1;
            top: 100%;
            margin-left: -95px;
            transform: translateX(-50%);
        }

        .tooltip-container:hover .tooltip1 {
            display: block;
        }
    </style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
    <div class="content-wrapper">
        <div class="container-xxl flex-grow-1 container-p-y">
            <div class="card-body" style="margin-top:-12px;height: 84%;">
                <div class="row" style="margin-top:10px;margin-bottom: 2%;">

                    <div class="col-sm-2">
                        <label for="" class="form-label">Period From&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
                        <div>
                            <input class="cusDate" #datepicker data-role='datepicker' id="period_from" name="period_from" onclick="Dateformat()" style="width:100%" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <label for="" class="form-label">Period To&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>

                        <div>
                            <input class="cusDate" data-role='datepicker' id="period_to" onclick="Dateformat()" style="height:25px;width: 100%;" data-bind="value:period_to" onkeypress="return date_validate(event)" /><span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label for="organization" class="form-label">Recon Name&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label><br>
                        <select id="reconname" class="form-select form-control"> </select>
                    </div>
                    <div class="col-md-3" style="margin-top: 2%;">
                        <button type="button" onclick="run()" class="btn btn-sm save_btn me-2" style="width:25%;margin-top:6px;">
                            Run
                        </button>
                    </div>
                </div>

                <div id="grid"></div>
            </div>
        </div>
    </div>


</body>
</html>
<script>
    var selected_dataset = '';
    $(document).ready(function () {
        $("#navhead").text("KnockOff MIS");
        kendodate_format();
        getreconlist();
        loadGrid();
    });

    function getreconlist() {
        debugger;
        var data = {};
        data.in_user_gid = 0;
        data.in_active_status = '';
        var Context = data;
        $.ajax({
            type: "POST",
            url: '../Recon/Reconlistfetch',
            dataType: 'json',
            async: false,
            data: JSON.stringify({ in_user_gid: Context.in_user_gid, in_active_status: Context.in_active_status }),
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                $("#reconname").empty();
                $("#reconname").append($('<option>', {
                    value: "",
                    text: "  Select  "
                }));
                $.each(response, function (index, item) {
                    $("#reconname").append($('<option>', {
                        value: item.recon_code,
                        text: item.recon_name
                    }));
                });
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }
        });
    }

    function run() {
        debugger;
        var in_recon_code = $("#reconname").val();
        var period_from = $("#period_from").val();
        var ts = period_from.split("/");
        var pr = ts[2] + "-" + ts[1] + "-" + ts[0];
        var period_to = $("#period_to").val();
        var ts1 = period_to.split("/");
        var pr1 = ts1[2] + "-" + ts1[1] + "-" + ts1[0];

        $.ajax({
            type: "POST",
            url: '../KnockOff/runkosum',
            dataType: 'json',
            async: false,
            data: JSON.stringify({ in_recon_code: in_recon_code, in_period_from: pr, in_period_to: pr1, in_ip_addr: '', in_user_code: '' }),
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if(response) {
                    var res = JSON.parse(response)
                    if (res.Table.length > 0) {
                        loadGrid(res.Table);
                    } else {
                        loadGrid([]);
                        $.alert({
                            title: 'Recon',
                            content: response,
                            type: 'red',
                        });
                    }
                } else {
                    $.alert({
                        title: 'Recon',
                        content: "Something Went Wrong..!",
                        type: 'red',
                    });
                }

            },
            error: function (er) {
                debugger;
                alert(er)
                console.log(er)
            }
        });
    }

    //function defaultgrid(){
    //		try {
    //		$("#grid").kendoGrid({
    //				dataSource: {
    //					data: [],
    //					pageSize: 10,
    //					schema: {
    //						model: {
    //							fields: {
    //								row_label: { type: "string" },
    //								dr_count: { type: "string" },
    //								dr_value: { type: "string" },
    //								cr_value: { type: "string" },
    //								total_count: { type: "string" },
    //								total_value: { type: "string" },
    //								back_color: { type: "string" },
    //								fore_color: { type: "string" },
    //							}
    //						}
    //					}
    //				},
    //				height: 330,
    //				groupable: false,
    //				dataBound: function (e) {
    //					resultData = e.sender._data;
    //					var rows = $('#grid').data('kendoGrid').tbody.children();
    //					setColor(rows, resultData);
    //				},
    //				pageable: {
    //					refresh: false,
    //					pageSizes: true,
    //					buttonCount: 5
    //				},
    //				sortable: true,
    //				selectable: true,
    //				filterable: false,
    //				navigatable: true,
    //				columns: [{
    //					field: "row_label",
    //					title: "Row Label",
    //				},
    //				{
    //					field: "dr_count",
    //					title: "Dr Count",
    //				},
    //				{
    //					field: "dr_value",
    //					title: "Dr Value",
    //				},
    //				{
    //					field: "cr_count",
    //					title: "Cr Count",
    //				},
    //				{
    //					field: "cr_value",
    //					title: "Cr Value",
    //				},
    //				{
    //					field: "total_count",
    //					title: "Total Count",
    //				},
    //				{
    //					field: "total_value",
    //					title: "Total Value",
    //				},
    //				{
    //					field: "backcolor",
    //					title: "Backcolor",
    //					width: 100,
    //				},
    //				{
    //					field: "forecolor",
    //					title: "Forecolor",
    //				},
    //				],
    //				editable: false,

    //			});
    //		}
    //		catch (err) {
    //			console.log(err)

    //		}

    //}

    function loadGrid(data) {

        debugger;
        var columns = [];
        var rows = [];
        if (data) {
            for (var key in data[0]) {
                var field = key.replace(/\s+/g, '_');
                var propType = typeof data[0][key];
                var bool = false;
                var txtalign = "";
                var widthval = "";
                if (field == "forecolor" || field == "backcolor"){
                    bool = true;
                } if(field== "Row_Labels") {
                    txtalign = "left";
                    widthval = 250;
                } else {
                    txtalign = "right"
                    widthval: 100;
                }
                columns.push({
                    field: field,
                    title: key,
                    type: propType,
                    attributes: { style: "text-align:"+ txtalign },
                    filterable: false,
                    hidden: bool,
                    width:widthval
                });
            }
            $.each(data, function (i, e) {
                var entryObject = {};
                for (var key in e) {
                    var field = key.replace(/\s+/g, '_');
                    entryObject[field] = e[key];
                }
                rows.push(entryObject);
            });

            var configuration = {
                dataSource: {
                    data: rows,
                },
                height: 400,
                navigatable: false,
                groupable: false,
                editable: false,
                sortable: false,
                scrollable: true,
                attributes: { style: "text-align: center;" },
                filterable: {
                    extra: true,
                    operators: {
                        string: {
                            contains: "Contains"
                        }
                    }
                },
                pageable: false,
                resizable: true,
                persistSelection: true,
                selectable: true,
                columns: columns,
                dataBound: function (e) {
                    var grid = this; // "this" refers to the Kendo Grid

                    grid.tbody.find("tr").each(function (index) {
                        var rowData = grid.dataItem(this); // Get the data item for the current row
                        $(this).css("background-color", rowData.backcolor);
                        $(this).css("color", rowData.forecolor);
                        //}
                    });
                }
            };

            $("#example").remove();
            $('#grid').append('<div id="example" style="position:relative;" class="k-content"><table id="grid1" style="position:relative;overflow:scroll;width:100%"></table></div>');
            var timeEditGrid = $("#grid1").kendoGrid(configuration).data("kendoGrid");
        } else {
            var emptydata = [{
                "Row Labels": "",
                "Dr Count": "",
                "Dr Value": "",
                "Cr Count": "",
                "Cr Value": "",
                "Total Count": "",
                "Total Value": "",
            }];
            for (var key in emptydata[0]) {
                var emptyfield = key.replace(/\s+/g, '_');
                columns.push({
                    field: emptyfield,
                    title: key,
                    attributes: { style: "text-align: left;" },
                    filterable: false,
                });
            }
            $.each(emptydata, function (i, e) {
                var entryObject = {};
                for (var key in e) {
                    var field = key.replace(/\s+/g, '_');
                    entryObject[field] = e[key];
                }
                rows.push(entryObject);
            });

            var configuration = {
                dataSource: {
                    data: rows,
                },
                height: 349,
                navigatable: false,
                groupable: false,
                editable: false,
                sortable: false,
                scrollable: true,
                attributes: { style: "text-align: center;" },
                filterable: {
                    extra: true,
                    operators: {
                        string: {
                            contains: "Contains"
                        }
                    }
                },
                pageable: false,
                resizable: true,
                persistSelection: true,
                selectable: true,
                columns: columns
            };

            $("#example").remove();
            $('#grid').append('<div id="example" style="position:relative;" class="k-content"><table id="grid1" style="position:relative;overflow:scroll;width:100%"></table></div>');
            var timeEditGrid = $("#grid1").kendoGrid(configuration).data("kendoGrid");
        }



    }
</script>