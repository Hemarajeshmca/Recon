@{
	ViewData["Title"] = "ReconList";
	Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
<!Doctype html>
<html>
<head>
	<title></title>
	<style>
		.nav-item.me-2.me-xl-50 {
			margin-right: 33rem !important;
		}

		.error_show {
			color: red;
			margin-left: 10px;
		}

		.k-grid.k-widget {
			height: 360px;
		}

		.k-grid-header th.k-header > .k-link {
			width: 100px;
		}

		.k-grid-header {
			font-weight: bold;
		}

		.k-state-active {
			display: none;
		}

		.k-content {
			font-weight: normal;
			font-size: 13px;
		}

		.k-widget.k-window {
			padding-top: 35px;
			min-width: 90px;
			min-height: 50px;
			width: 700px !important;
			height: 300px !important;
			top: 180.766px !important;
			/*left: 120px !important;*/
			z-index: 10003;
			left: 300px !important;
		}
	</style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
	<div class="content-wrapper">
		<div class="container-xxl flex-grow-1 container-p-y">
			<div class="card-body" style="margin-top:-1%;height: 82%;">
				<div class="row">
					<div class="col-xs-12">
						<a href='' onclick='getSerializedRows()' data-bs-toggle='modal'>
							<i class="fa fa-plus cursor-pointer" aria-hidden="true" style="color:green;font-size:15px;"></i>
						</a>
						<div id="grid_reconlist"> </div>
					</div>
				</div>
			</div>
		</div>
	</div>
</body>
</html>

<script>
	$(document).ready(function () {
		$("#navhead").text("Recon");
		setlocalStorage("ls_pageList", "");
		grid_reconlist_details([]);
		var data = {};
		data.in_user_gid = 0;
		data.in_active_status = '';
		var Context = data;
		$.ajax({
			type: "POST",
			url: '../Recon/Reconlistfetch',
			dataType: 'json',
			data: JSON.stringify({ in_user_gid: Context.in_user_gid, in_active_status: Context.in_active_status }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					grid_reconlist_details(response);
				}
				else {
					grid_reconlist_details([]);
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}

		});

	});

	function grid_reconlist_details(data) {
		try {
			$("#grid_reconlist").kendoGrid({
				dataSource: {
					data: data,
					pageSize: 10,
					schema: {
						model: {
							fields: {
								recon_gid: { type: "string" },
								recon_code: { type: "string" },
								recon_name: { type: "string" },
								recontype_code: { type: "string" },
								recontype_desc: { type: "string" },
								period_from: { type: "string" },
								period_to: { type: "string" },
								status: { type: "string" }
							}
						}
					}
				},
				height: 450,
				groupable: false,
				dataBound: function (e) {
					resultData = e.sender._data;
					var rows = $('#grid_reconlist').data('kendoGrid').tbody.children();
					setColor(rows, resultData);
				},
				pageable: {
					refresh: false,
					pageSizes: true,
					buttonCount: 5
				},
				sortable: true,
				selectable: true,
				filterable: true,
				navigatable: true,
				change: selectRow,
				columns: [{
					command: [
						{
							name: "edit",
							id: "btn_Edit",
							template: "<a href='' onclick='getSerializedSelectedRows(this)' value='edit' data-bs-toggle='modal'><img src = '../Assets/images/editicons.png'></a>&nbsp;&nbsp;&nbsp;",
						},
						{
							name: "view",
							id: "View",
							template: "<a href=''onclick='getSerializedSelectedRows(this)' value='view' data-bs-toggle='modal'><img src = '../Assets/images/viewicons.png'></a>&nbsp;&nbsp;&nbsp;",
						},
						{
							name: "Delete",
							id: "Delete",
							template: "<a href='' onclick='myDeleteJs()' data-bs-toggle='modal'><img src = '../Assets/images/del.png'></a>&nbsp;&nbsp;&nbsp;",
						},
					],
					title: "Action&nbsp;",
					width: "60px",
				},
				{
					field: "recon_gid",
					title: "Row id",
					width: 10,
					hidden: true,
				},

				{
					field: "recon_code",
					title: "Recon Code",
					width: 100,
				},
				{
					field: "recon_name",
					title: "Recon Name",
					width: 100,
				},
				{
					field: "recontype_code",
					title: "Recon Type Code",
					width: 10,
					hidden: true,
				},
				{
					field: "recontype_desc",
					title: "Recon Type",
					width: 100,
				},
				{
					field: "period_from",
					title: "Period From",
					width: 75,
				},
				{
					field: "period_to",
					title: "Period To",
					width: 75,
				},

				{
					field: "active_status_desc",
					title: "Status",
					width: 70
				},
				{
					field: "In_mode_flag",
					title: "Mode",
					width: 10,
					hidden: true
				},
				{
					field: "until_active_flag",
					title: "until_active_flag",
					width: 10,
					hidden: true,
				},
				{
					field: "active_status",
					title: "Status",
					width: 10,
					hidden: true
				}],
				editable: false,

			});
		}
		catch (err) {
			console.log(err)

		}
	}
	function getSerializedRows() {
		btn_onClick('Create');
		document.location = "../Recon/ReconView";
	}
	function getSerializedSelectedRows(mode) {
		try {
			if (getlocalStorage("ls_pageList") != undefined || getlocalStorage("ls_pageList") != "") {
				var items = getlocalStorage("ls_pageList");
				if (items.length == 0) {
					kendoAlert("Please select records");
				}
				else {
					if ($(mode).attr('value') == "edit") {
						btn_onClick("Edit");
						document.location = '../Recon/ReconView';
					}
					else if (mode == "view") {
						btn_onClick('View');
						document.location = "../Recon/ReconView";
					}
				}
			}
		}
		catch (err) {

		}
	}
	function selectRow() {
		try {
			var grid = $("#grid_reconlist").data("kendoGrid");
			var selectedItem = grid.dataItem(grid.select());
			setlocalStorage("ls_pageList", selectedItem);
		}
		catch (err) {

		}
	}
	function myDeleteJs() {
		var grid = $("#grid_reconlist").data("kendoGrid");
		var model = grid.dataItem($(event.target).closest("tr"));
		var recon_gid = model.recon_gid;
		$.confirm({
			icon: 'fa fa-warning',
			title: 'Recon',
			autoClose: 'cancel|10000',
			theme: 'dark',
			animationSpeed: 700,
			content: 'Are you sure do you want to delete this record!',
			type: 'orange',
			buttons: {
				confirm: function () {
					$.confirm({
						title: 'Delete Reason',
						content: '' +
							'<form action="" class="formName">' +
							'<div class="form-group">' +
							'<label>Reason</label>' +
							'<input type="text" placeholder="Reason" class="name form-control" required />' +
							'</div>' +
							'</form>',
						buttons: {
							formSubmit: {
								text: 'Submit',
								btnClass: 'btn-blue',
								action: function () {
									var name = this.$content.find('.name').val();
									if (!name) {
										$.alert('Reason cannot be empty');
										return false;
									}
									var reconcode = "";
									var cmbrecontype = "";
									var ReconName = "";
									var pr = "1901-01-01";
									var in_until_active_flag = "";
									var pr1 = "1901-01-01";
									var action = "DELETE";
									var action_by = "vijay"
									var status = "";
									
									var in_recon_automatch_partial = "";									
									var in_recon_date_flag = "";
									var in_recon_date_field = "";									
									var in_recon_value_flag = "";
									var in_recon_value_field=  "";									
									var in_threshold_plus_value = 0;
									var in_threshold_minus_value = 0;
									$.ajax({
										type: "POST",
										url: '../Recon/Reconheadersave',
										dataType: 'json',
										data: JSON.stringify({
											in_recon_gid: recon_gid, in_recon_code: reconcode, in_recon_name: ReconName, in_recontype_code: cmbrecontype, in_action: action, in_action_by: action_by, in_period_from: pr, in_period_to: pr1, in_active_status: status, in_recon_automatch_partial: in_recon_automatch_partial, in_until_active_flag: in_until_active_flag, in_recon_date_flag: in_recon_date_flag, in_recon_date_field: in_recon_date_field, in_recon_value_flag: in_recon_value_flag, in_recon_value_field: in_recon_value_field, in_threshold_plus_value: in_threshold_plus_value, in_threshold_minus_value: in_threshold_minus_value, in_active_reason: name
										}),
										contentType: 'application/json; charset=utf-8',
										success: function (response) {
											$.alert({
												icon: 'fa fa-success',
												title: 'Recon',
												theme: 'dark',
												content: response.out_msg,
												type: 'green',
												animationSpeed: 700,
											});
										}
									})
								}
							},
							cancel: function () {
								//close
							},
						},

					});
				},
				cancel: function () {
					$.alert({
						icon: 'fa fa-success',
						title: 'Recon',
						theme: 'dark',
						content: 'Delete Canceled.!',
						type: 'blue',
						animationSpeed: 700,
					});
				},
			}
		});
	}
</script>



