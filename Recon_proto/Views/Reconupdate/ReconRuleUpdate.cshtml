@{
    ViewBag.title = "Recon Rule Update";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}

<!Doctype html>
<html>
<head>
    <title></title>

    <style>
        .selectedRule {
            font-size: 13px;
            font-weight: 600;
            color: brown;
        }

        .nav-item.me-2.me-xl-50 {
            margin-right: 28rem !important;
        }

    </style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
    <div class="content-wrapper">
        <div class="container-xxl flex-grow-1 container-p-y">
            <div class="card-body" style="margin-top:-1%;height: 82%;">

                <div class="row" style="margin-top:-19px">
                    <div class="col-sm-4" style="margin-bottom:5px;">
                        <label for="" class="form-label">Base Recon Name&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
                        <select id="cmbreconname" class="form-select form-control" onchange="gridlist()">
                        </select>
                    </div>
                    <div class="col-sm-4">
                        <button type="button" class="btn btn-sm btn-success me-2" onclick='newClone()' style="padding: 4px 25px;margin-top: 30px;"> Dataset Map</button>
                    </div>
                </div>
                <div class="row">
                    @*<a href='' onclick='newClone()' data-bs-toggle='modal' id="btn_new">
                        <i class="fa fa-plus cursor-pointer" aria-hidden="true" style="color:green;font-size:15px;"></i>
                    </a>*@
                    <div class="col-xs-12">
                        <div id="gd_rulelist">
                            <div id="grid_rulelist"> </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="infomodal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                </div>
                <div class="modal-body" style="margin-top: -26px;">
                    <div class="row">
                        <div class="col-sm-4">
                        </div>
                        <div class="col-sm-4">
                            <h4 style="font-size: 15px;text-align: center;color: #1a9950;font-weight: 600;">Recon Rule Update</h4>
                        </div>
                        <div class="col-sm-4">
                            <i class="bx bx-x cursor-pointer" data-bs-dismiss="modal" style="color: #000000;float:right"></i>
                        </div>
                    </div>
                    <hr style="margin-top:-1px; width:100%;">
                    <div class="container">
                        <div class="row">
                            <div class="selectedRule col-md-6" id="selected_rule_name"></div>
                            <div class="selectedRule col-md-6" id="selected_recon_name"></div>
                        </div>
                        <div class="row" style="margin-top: 20px;">
                            <div class="col-md-6">
                              <label for="" class="form-label">Update Recon&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
                               @*  <select id="cmbupdatereconname" class="form-select form-control" onchange="updatedatasetRecon()">
                                </select> *@

                                 <input id="updatereconname" style="width:65%" />
                                <input class="form-control" type="hidden" id="selectedRule">
                            </div>
                        </div>
                        <div class="row" style="margin-top:15px;">                            
                                <div id="gd_mappeddataset">
                                    <div id="grid_mappeddataset"> </div>
                                </div>                            
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4"> </div>
                    <div class="col-sm-4" style="margin-bottom:30px;float: right;">
                        <center>
                            <button type="button" class="btn btn-sm btn-success me-2" onclick="updateRecon()" style="padding: 4px 25px;"> Update</button>
                            <button type="submit" class="btn btn-sm btn-success me-2" data-bs-dismiss="modal" style="background: red;border-color: red;width:27%" onclick="rr1()">Close</button>
                        </center>
                    </div>
                    <div class="col-sm-4"> </div>
                </div>
            </div>
        </div>
    </div>


    <div class="modal" id="ReconRuledetail">
        <div class="modal-dialog modal-xl">
            <div class="modal-content" style="height:585px;">
                <div class="modal-header">
                </div>
                <div class="modal-body" style="margin-top: -26px;">
                    <div class="row">
                        <div class="col-sm-4">
                        </div>
                        <div class="col-sm-4">
                            <h4 style="font-size: 15px;text-align: center;color: #1a9950;font-weight: 600;">Rule Detail</h4>
                        </div>
                        <div class="col-sm-4">
                            <i class="bx bx-x cursor-pointer" data-bs-dismiss="modal" style="color: #000000;float:right"></i>
                        </div>
                    </div>
                    <hr style="margin-top:-1px; width:100%;">
                    <div class="container" style="padding:0px !important;">
                        @await Html.PartialAsync("_UpdateRuleviewdetail")
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="addNewRuleClone">
        <div class="modal-dialog modal-xl">
            <div class="modal-content" style="height:585px;">
                <div class="modal-header">
                </div>
                <div class="modal-body" style="margin-top: -26px;">
                    <div class="row">
                        <div class="col-sm-4">
                        </div>
                        <div class="col-sm-4">
                            <h4 style="font-size: 15px;text-align: center;color: #1a9950;font-weight: 600;">Dataset Map</h4>
                        </div>
                        <div class="col-sm-4">
                            <i onclick="closeModel()" class="bx bx-x cursor-pointer" data-bs-dismiss="modal" style="color: #000000;float:right"></i>
                        </div>
                    </div>
                    <hr style="margin-top:-1px; width:100%;">
                    <div class="container" style="padding:0px !important;">
                        @await Html.PartialAsync("_addNewRuleClone")
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
<script type="text/javascript">
    var ruleList = [];
    var reconarray = [];
    $(document).ready(function () {
        $("#navhead").text("Recon Rule Update");
        kendodate_format();
        grid_rulelist([]);
        gridreconlist();
    });

    function gridreconlist() {
        var data = {};
        data.in_user_gid = 0;
        data.in_active_status = '';
        data.in_user_code = sessionStorage.getItem("usrname");
        var Context = data;
        $.ajax({
            type: "POST",
            url: '../Recon/Reconlistfetch',
            dataType: 'json',
            data: JSON.stringify(data),
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var res = JSON.parse(response);
                $("#cmbreconname").empty();
                $("#cmbreconname").append($('<option>', {
                    value: "",
                    text: "  Select  "
                }));
                $.each(res, function (index, item) {
                    if (item.active_status == "Y") {
                        $("#cmbreconname").append($('<option>', {
                            value: item.recon_code,
                            text: item.recon_name
                        }));
                    }
                });
                // target dataset
                $("#target_reconname").empty();
                $("#target_reconname").append($('<option>', {
                    value: "",
                    text: "  Select  "
                }));
                $.each(res, function (index, item) {
                    if (item.active_status == "Y") {
                        $("#target_reconname").append($('<option>', {
                            value: item.recon_code,
                            text: item.recon_name
                        }));
                    }
                });
                // selected Recon
                $("#selected_reconName").empty();
                $("#selected_reconName").append($('<option>', {
                    value: "",
                    text: "  Select  "
                }));
                $.each(res, function (index, item) {
                    if (item.active_status == "Y") {
                        $("#selected_reconName").append($('<option>', {
                            value: item.recon_code,
                            text: item.recon_name
                        }));
                    }
                });

                // update Recon 
                $("#cmbupdatereconname").empty();
                $("#cmbupdatereconname").append($('<option>', {
                    value: "",
                    text: "  Select  "
                }));
                $.each(res, function (index, item) {
                    if (item.active_status == "Y") {
                        $("#cmbupdatereconname").append($('<option>', {
                            value: item.recon_code,
                            text: item.recon_name
                        }));
                    }
                });

                if (sessionStorage.getItem("reconcode") != null) {
                    $("#cmbreconname").val(sessionStorage.getItem("reconcode"));
                    jQuery('#cmbreconname').trigger("change");
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
    
    
    }

    function getSerializedRows() {
        btn_onClick('Create');
        document.location = "../Reports/ReportTempletedetail";
    }

    function gridlist() {
        if ($("#cmbreconname").val() != '') {
            sessionStorage.setItem("reconcode", $("#cmbreconname").val());
            sessionStorage.setItem("reconname", $("#cmbreconname :selected").text());
            setcon();
        }
        var data = {};
        data.in_recon_code = $("#cmbreconname").val();
        data.in_user_code = sessionStorage.getItem("usrname");
        if (data.in_recon_code) {
            $.ajax({
                type: "POST",
                url: '../Rulesetup/Rulesetuplistfetch',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(data),
                success: function (response) {
                    if (response != " " && response != null && response != "{}" && response != "[]") {
                        var res = JSON.parse(response)
                        $("#gd_rulelist").empty();
                        $("#gd_rulelist").append("<div id='grid_rulelist'></div>");
                        var activeItems = res.filter(item => item.active_status == 'Y');
                        grid_rulelist(activeItems);
                    }
                    else {
                        grid_rulelist([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }
            });
        } else {
            grid_rulelist([]);
        }
    }

    function grid_rulelist(data) {
        try {
            $("#grid_rulelist").kendoGrid({
                dataSource: {
                    data: data,
                    pageSize: 15,
                    schema: {
                        model: {
                            fields: {
                                rule_gid: { type: "string" },
                                rule_code: { type: "string" },
                                rule_name: { type: "string" },
                                rule_order: { type: "string" },
                                rule_apply_on_desc: { type: "string" },
                                source_dataset_desc: { type: "string" },
                                comparison_dataset_desc: { type: "string" },
                                group_flag_desc: { type: "string" },
                                active_status_desc: { type: "string" }
                            }
                        }
                    }
                },
                height: 420,
                groupable: false,
                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_rulelist').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                pageable: {
                    refresh: false,
                    pageSizes: [10, 15, 20, 25, 50],
                    buttonCount: 5
                },
                sortable: true,
                selectable: true,
                filterable: true,
                navigatable: true,
                change: selectRow,
                resizable: true,
                columns: [{
                    command: [
                        {
                            name: "edit",
                            id: "btn_Edit",
                            template: "<a href='' onclick='getSerializedSelectedRows(this)' class='k-grid-process' value='edit' data-bs-toggle='modal'><img style='height: 16px;width: 16px; cursor: pointer;' src = '../Assets/images/login-refresh.png' title='Update'></a>&nbsp;&nbsp;&nbsp;",
                        },
                        {
                            name: "view",
                            id: "View",
                            template: "<a href=''onclick='getSerializedSelectedRows(this)' class='k-grid-view' value='view' data-bs-toggle='modal'><img title='View' style='cursor: pointer;' src = '../Assets/images/viewicons.png'></a>&nbsp;&nbsp;&nbsp;",
                        },
                    ],
                    title: "Action&nbsp;",
                    width: "40px",
                    attributes: { style: "text-align: center;" },
                },
                {
                    field: "rule_gid",
                    title: "Row id",
                    width: 100,
                    hidden: true,
                },

                {
                    field: "rule_code",
                    title: "Rule Code",
                    width: 80,
                },
                {
                    field: "rule_name",
                    title: "Rule Name",
                    width: 100,
                },
                {
                    field: "source_dataset_desc",
                    title: "source_dataset_desc",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "comparison_dataset_desc",
                    title: "comparison_dataset_desc",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "rule_apply_on_desc",
                    title: "Rule Applied On",
                    width: 100,
                },
                {
                    field: "rule_order",
                    title: "Rule Order",
                    width: 80,
                    attributes: { style: "text-align: right;" },
                    filterable: {
                        ui: "numericInput",
                        extra: false,
                    },
                },
                {
                    field: "group_flag_desc",
                    title: "Group Flag",
                    width: 100,
                },
                {
                    field: "active_status_desc",
                    title: "Status",
                    width: 50,
                    resizable: false,
                    filterable: {
                        ui: priorityFilter,
                        extra: false,
                        operators: {
                            string: {
                                eq: "Is equal to",
                                neq: "Not equal to"
                            }
                        },
                    },
                }],
                editable: false,
            });
        }
        catch (err) {
            console.log(err);
        }
    }

    function selectRow() {
        try {
            var grid = $("#grid_rulelist").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            $("#selectedRule").val(selectedItem.rule_code);
        }
        catch (err) {

        }
    }

    function priorityFilter(element) {
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: "--Select Value--"
        });
    }

    function viewRuleDetails() {
        if ($("#updaterulename").val()) {
            event.preventDefault();
            var selectedItem = ruleList.filter(item => item.rule_code == $("#updaterulename").val());
            setlocalStorage("rule_details", selectedItem[0]);
            btn_onClick('Edit');
            getRuleGridComboList();
            cmbsourcefield();
            $("#ReconRuledetail").on("click", function (event) {
                event.stopPropagation();
            });
            $("#ReconRuledetail").modal('show');
        } else {
            $.alert({
                title: 'Recon',
                content: "Please Select Updated Rule .!",
                type: 'green',
            });
        }

    }

    function getSerializedSelectedRows(mode) {
        try {
            var grid = $("#grid_rulelist").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            $('#selected_rule_name').text('Selected Rule:' + selectedItem.rule_name);
            $('#selected_recon_name').text('Selected Recon:' + selectedItem.recon_name);
            if ($(mode).attr('value') == "edit") {
                clearCheckboxes();
                getupdateRuleList();
                // getdatasetagainstrecon();
                $("#updatereconname").val("");
                $("#updaterulename").val("");
                $("#infomodal").modal("show");
            } else if ($(mode).attr('value') == "view") {
                event.preventDefault();
                var grid = $("#grid_rulelist").data("kendoGrid");
                var selectedItem = grid.dataItem(grid.select());
                setlocalStorage("rule_details", selectedItem);
                btn_onClick('Edit');
                getRuleGridComboList();
                cmbsourcefield();
                $("#ReconRuledetail").on("click", function (event) {
                    event.stopPropagation();
                });
                $("#ReconRuledetail").modal('show');
            }
        }
        catch (err) {
        }
    }

    function rr1() {
        $("#updatereconname").val("");
        $("#updaterulename").val("");
        $("#selectedRule").val("");
        $("#infomodal").modal("hide");
    }

    function updateRecon() {
        // var grid = $("#grid_mappeddataset").data("kendoGrid");
        // var colfilterData = $("#grid_mappeddataset").data().kendoGrid.dataSource.view();
        // var concatData = "";
        // for (var i = 0; i < colfilterData.length; i++) {
        //     var j = i + 1;
        //     var dataItem = colfilterData[i];
        //     if (dataItem.comparison_field != "" && dataItem.comparison_field != undefined) {
        //         concatData += $("#cmbupdatereconname").val() + "#" + dataItem.dataset_code + "#" + dataItem.comparison_field + "$"
        //     } else {
        //         $.alert({
        //             title: 'Recon',
        //             content: 'Target Dataset is missing for ' + j + ' row, Please map the dataset and try again.!',
        //             type: 'red',
        //         });
        //         return;
        //     }
        // }
        var grid = $("#grid_rulelist").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        var Attribid = [];
        var arrstring = "";
        var cbs = document.getElementsByName("cb");
        for (var i = 0; i < cbs.length; i++) {
            if (cbs[i].checked) {
                var item = cbs[i].value;
                Attribid.push(item);
            }
        }
        arrString = Attribid.join("$");
        if (arrString == "") {
            $.alert({
                title: 'Recon',
                content: "Please Select Update Recon Name .!",
                type: 'red',
            });
            return;
        }
        var data = {};
        data.in_base_recon_code = $("#cmbreconname").val();
        data.in_base_rule_code = $("#selectedRule").val();
        data.in_update_recon_code = "$" + arrString;
        data.in_update_rule_code = "";
        data.in_user_code = sessionStorage.getItem("usrname");
        if (arrString != "") {
            $.ajax({
                type: "POST",
                url: '../Reconupdate/ReconUpdateRule',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(data),
                success: function (response) {
                    if (response != " " && response != null && response != "{}" && response != "[]") {
                        var res = JSON.parse(response);
                        if (res[0]["out_result"] == 1) {
                            $.alert({
                                title: 'Recon',
                                content: res[0]["out_msg"],
                                type: 'green',
                            });
                            rr1();
                        } else {
                            $.alert({
                                title: 'Recon',
                                content: res[0]["out_msg"],
                                type: 'red',
                            });
                        }
                    } else {

                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }
            });
        } else if (arrString == "") {
            $.alert({
                title: 'Recon',
                content: "Please Select Update Recon .!",
                type: 'red',
            });

        } 
        
        // else if (!data.in_update_rule_code) {
        //     $.alert({
        //         title: 'Recon',
        //         content: "Please Select Update Rule .!",
        //         type: 'red',
        //     });
        // }
    }

    function clearCheckboxes() {
        var checkboxes = document.getElementsByName("cb");
        for (var i = 0; i < checkboxes.length; i++) {
            checkboxes[i].checked = false;
        }
    }


    var dropdown = "";
    function getupdateRuleList() {
        var grid = $("#grid_rulelist").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        var data = {};
        data.in_rule_name = selectedItem.rule_name;
        $.ajax({
            type: "POST",
            url: '../Reconupdate/ReconagainstRule',
            dataType: 'json',
            data: JSON.stringify(data),
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var res = JSON.parse(response);
                reconarray = res;
                var arr = [];
                var list2 = {};
                list2.value = "";
                list2.text = "ALL";
                arr.push(list2);
                for (i = 0; res.length > i; i++) {
                    var list1 = {};
                    if (res[i]["active_status"] == 'Y') {
                        list1.value = res[i].recon_code;
                        list1.text = res[i].recon_name;
                        arr.push(list1);
                    }
                }
                dropdown = $("#updatereconname").kendoDropDownList({
                    dataTextField: "text",
                    dataValueField: "value",
                    template: $("#CheckboxTemplate").html(),
                    dataSource: arr,
                    placeholder: "Select...",
                    select: function (e) {
                        e.preventDefault();
                    }
                }).data("kendoDropDownList");

                dropdown.list.find(".check-input,.check-item").bind("click", function (e) {
                    var $item = $(this);
                    var $input;

                    if ($item.hasClass("check-item")) {
                        $input = $item.children(".check-input");
                        $input.prop("checked", !$input.is(':checked'));
                    }
                    else
                        $input = $item;
                    if ($input.val() == "")
                        dropdown.list.find(".check-input").prop("checked", $input.is(':checked'));

                    updateDropDown()

                    e.stopImmediatePropagation();
                });
                updateDropDown();
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }
        });
    }

    function updateDropDown() {
        var items = [];
        dropdown.list.find(".check-input").each(function () {
            var $input = $(this);
            if ($input.val() != "" && $input.is(':checked'))
                items.push($input.next().text());
        });
        dropdown.text(items.toString());
    }

    function newClone() {
        if ($("#cmbreconname").val()) {
            getdatasetagainstrecon();
            $("#selected_reconName").val(sessionStorage.getItem("reconcode"));
            jQuery('#selected_reconName').trigger("change");
            $("#addNewRuleClone").modal('show');
        } else {
            $.alert({
                title: 'Recon',
                content: 'Please Select Recon ..!',
                type: 'red',
            });
        }
    }

    function getdatasetagainstrecon() {
        var reconcode = $("#cmbreconname").val();
        var target_recon_code = $("#target_reconname").val();
        var in_user_code = sessionStorage.getItem("usrname");
        $.ajax({
            type: "POST",
            url: '../Reconupdate/datasetlistmapped',
            dataType: 'json',
            async: false,
            data: JSON.stringify({ in_recon_code: reconcode, in_target_recon_code: target_recon_code }),
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var res = JSON.parse(response);
               var result = res.filter(item => item.dataset_type != 'S');
                griddataset(result);
            }
        });
    }

    function griddataset(data) {
        var source_field_desc_list = "";
        var extraction_criteria_list = "";
        var comparison_criteria_list = "";
        $("#grid_dataset").kendoGrid({
            dataSource: {
                data: data,
                pageSize: 5,
                schema: {
                    model: {
                        fields: {
                            dataset_code: { type: "string", editable: false },
                            dataset_name: { type: "string", editable: false },
                            dataset_type: { type: "string", editable: false },
                            dataset_type_desc: { type: "string", editable: false },
                            parent_dataset_code: { type: "string", editable: false },
                            parent_dataset_name: { type: "string", editable: false },
                            comparison_field_desc: { type: "string", defaultValue: "", editable: true },
                            comparison_field: { type: "string", editable: false },
                        }
                    }
                }
            },
            height: 300,
            groupable: false,
            dataBound: function (e) {
                resultData = e.sender._data;
                var rows = $('#grid_dataset').data('kendoGrid').tbody.children();
                setColor(rows, resultData);
            },
            pageable: {
                refresh: false,
                pageSizes: [5, 10, 15, 20],
                buttonCount: 5
            },
            sortable: true,
            selectable: true,
            filterable: true,
            navigatable: true,
            resizable: true,
            columns: [
                {
                    field: "dataset_code",
                    title: "Dataset Code",
                    width: 40,
                    editable: false,
                    hidden: true,
                },
                {
                    field: "dataset_name",
                    title: "Source Dataset",
                    width: 80,
                    editable: false,
                },
                {
                    field: "dataset_type_desc",
                    title: "Dataset Type",
                    width: 45,
                    editable: false,
                },
                {
                    field: "parent_dataset_code",
                    title: "parent_dataset_code",
                    width: 50,
                    editable: false,
                    hidden: true,
                },
                {
                    field: "parent_dataset_name",
                    title: "Source Parent Datset",
                    width: 60,
                    editable: false,
                    hidden: true,
                },
                {
                    field: "comparison_field",
                    title: "comparison_field",
                    width: 100,
                    hidden: true,
                    editable: false,
                },
                {
                    field: "comparison_field_desc",
                    title: "Target Dataset",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "comparison_field", "grid_dataset")
                    },
                    width: 80,
                    editable: true,
                }, {
                    field: "dataset_type_desc",
                    title: "Target Dataset Type",
                    width: 45,
                    editable: false,
                }],
            editable: true,
        });
        var target_recon_code = $("#target_reconname").val();
        comparison_field_desc_list = getdatasetlist(target_recon_code);
    }

    function getdatasetlist(recon_code) {
        var arr1 = [];
        var data = {};
        data.in_recon_code = recon_code;
        data.in_user_code = sessionStorage.getItem("usrname");
        $.ajax({
            type: "POST",
            url: '../Datasetfile/datasetAgainstRecon',
            dataType: 'json',
            async: false,
            data: JSON.stringify(data),
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                if(response.length > 0){
                    for (i = 0; response.length > i; i++) {
                        var list1 = {};
                        list1.code = response[i].dataset_code;
                        list1.desc = response[i].dataset_name;
                        arr1.push(list1);
                    }
                }
            }
        });
        return arr1;
    }

    function closeModel(){
        $("#addNewRuleClone").modal('hide');
        $("#target_reconname").val("");
    }

    function updatedatasetRecon() {
        var reconcode = $("#cmbreconname").val();
        var target_recon_code = $("#cmbupdatereconname").val();
        var in_user_code = sessionStorage.getItem("usrname");
        $.ajax({
            type: "POST",
            url: '../Reconupdate/datasetlistmapped',
            dataType: 'json',
            async: false,
            data: JSON.stringify({ in_recon_code: reconcode, in_target_recon_code: target_recon_code }),
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var res = JSON.parse(response);
                var result = res.filter(item => item.dataset_type != 'S');
                updategriddataset(result);
            }
        });
    }

    function updategriddataset(data) {
        var source_field_desc_list = "";
        var extraction_criteria_list = "";
        var comparison_criteria_list = "";
        $("#grid_mappeddataset").kendoGrid({
            dataSource: {
                data: data,
                pageSize: 5,
                schema: {
                    model: {
                        fields: {
                            dataset_code: { type: "string", editable: false },
                            dataset_name: { type: "string", editable: false },
                            dataset_type: { type: "string", editable: false },
                            dataset_type_desc: { type: "string", editable: false },
                            parent_dataset_code: { type: "string", editable: false },
                            parent_dataset_name: { type: "string", editable: false },
                            comparison_field_desc: { type: "string", defaultValue: "", editable: false },
                            comparison_field: { type: "string", editable: false },
                        }
                    }
                }
            },
            height: 300,
            groupable: false,
            dataBound: function (e) {
                resultData = e.sender._data;
                var rows = $('#grid_dataset').data('kendoGrid').tbody.children();
                setColor(rows, resultData);
            },
            pageable: {
                refresh: false,
                pageSizes: [5, 10, 15, 20],
                buttonCount: 5
            },
            sortable: true,
            selectable: true,
            filterable: true,
            navigatable: true,
            resizable: true,
            columns: [
                {
                    field: "dataset_code",
                    title: "Dataset Code",
                    width: 40,
                    editable: false,
                    hidden: true,
                },
                {
                    field: "dataset_name",
                    title: "Source Dataset",
                    width: 80,
                    editable: false,
                },
                {
                    field: "dataset_type_desc",
                    title: "Dataset Type",
                    width: 45,
                    editable: false,
                },
                {
                    field: "parent_dataset_code",
                    title: "parent_dataset_code",
                    width: 50,
                    editable: false,
                    hidden: true,
                },
                {
                    field: "parent_dataset_name",
                    title: "Source Parent Datset",
                    width: 60,
                    editable: false,
                    hidden: true,
                },
                {
                    field: "comparison_field",
                    title: "comparison_field",
                    width: 100,
                    hidden: true,
                    editable: false,
                },
                {
                    field: "comparison_field_desc",
                    title: "Target Dataset",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "comparison_field", "gd_mappeddataset")
                    },
                    width: 80,
                    editable: false,
                }, {
                    field: "dataset_type_desc",
                    title: "Target Dataset Type",
                    width: 45,
                    editable: false,
                }],
            editable: false,
        });
        //var update_recon_code = $("#cmbupdatereconname").val();
        //comparison_field_desc_list = getdatasetlist(update_recon_code);
    }
   </script>
<script type="text/x-kendo-template" id="CheckboxTemplate">
    <li unselectable="on" class="k-item nowrap check-item">
        <input type="checkbox"  name="cb" value="#= value #" class="check-input"  />
        <span >#= text #</span>
    </li>
</script>

