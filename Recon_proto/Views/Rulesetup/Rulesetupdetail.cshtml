@{
	Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
<!Doctype html>
<html>
<head>
	<title></title>
	<style>
		.editable-dropdown {
			position: relative;
		}

		#dropdown-list {
			list-style: none;
			display: none;
			position: absolute;
			top: 100%;
			left: 0;
			width: 100%;
			border: 1px solid #ccc;
			background-color: #fff;
			z-index: 1;
		}

			#dropdown-list li {
				padding: 5px;
				cursor: pointer;
			}

		#editable-input {
			width: 100%;
		}

		.nav-item.me-2.me-xl-50 {
			margin-right: 33rem !important;
		}

		.error_show {
			color: red;
			margin-left: 10px;
		}

		.k-grid.k-widget {
			height: 360px;
		}

		.k-grid-header {
			font-weight: bold;
		}

		.k-state-active {
			display: none;
		}

		.k-content {
			font-weight: normal;
			font-size: 13px;
		}

		.k-widget.k-window {
			padding-top: 35px;
			min-width: 90px;
			min-height: 50px;
			width: 700px !important;
			height: 300px !important;
			top: 180.766px !important;
			/*left: 120px !important;*/
			z-index: 10003;
			left: 300px !important;
		}

		.action-button {
			width: 120px;
			background: #673AB7;
			font-weight: bold;
			color: white;
			border: 0 none;
			border-radius: 0px;
			cursor: pointer;
			padding: 10px 5px;
			margin: 10px 0px 10px 5px;
			float: right;
			border-radius: 20px;
		}

		.action-button-previous {
			width: 100px;
			background: #616161;
			font-weight: bold;
			color: white;
			border: 0 none;
			border-radius: 0px;
			cursor: pointer;
			padding: 10px 5px;
			margin: 10px 5px 10px 0px;
			float: right;
			border-radius: 20px;
		}
	</style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
	<div class="content-wrapper">
		<div class="container-xxl flex-grow-1 container-p-y">
			<div class="card-body" style="margin-top:-12px;height: 84%;">
				<form method="post" class="form-horizontal" id="form" enctype="multipart/form-data">
					<div class="row" style="margin-top: -18px;margin-bottom: 10px;">
						<div class="col-sm-6">
							<div class="row">
								<div class="col-sm-4">
									<label for="organization" class="form-label">Rule Code</label>
									<input class="form-control" type="text" id="txtrulecode" value="">
								</div>
								<div class="col-sm-4">
									<label for="organization" class="form-label">Mode</label>
									<input class="form-control" type="text" id="txtmode" value="Create" disabled>
								</div>
								<div class="col-sm-4">
									<label for="organization" class="form-label">Status</label><br>
									<input class="form-control" type="text" id="txtstatus" value="Active" disabled>
								</div>
							</div>
						</div>
						<div class="col-sm-5">
						</div>
						<div class="col-sm-1" style="margin-top:20px;">
							<center>
								<a href="../Rulesetup/Rulesetup"><img style="cursor:pointer;" src="~/Content/images/toplist.png"></a>&nbsp;&nbsp;&nbsp;&nbsp;
							</center>
						</div>
					</div>
					<div class="box box-orange" style="height:auto">
						<div class="row" style="padding-bottom:5px;margin-top:5px;padding-right:5px">
							<div class="col-sm-4">
								<label for="" class="form-label">Rule Name&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
								<input class="form-control" id="ruleName" type="text">
								<input class="form-control" type="hidden" id="rulegid">
							</div>
							<div class="col-sm-4">
								<label for="" class="form-label">Recon Name&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
								<select id="cmbreconname" class="form-select form-control" onchange="reconchange()">
								</select>
							</div>
							<div class="col-sm-2">
								<label for="" class="form-label">Period From&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
								<div>
									<input class="cusDate" data-role='datepicker' id="period_from" name="period_from" data-value="2022-12-21" onclick="Dateformat()" style="width:100%" />
									<span data-for='valid' class='k-invalid-msg'></span>
								</div>
							</div>
							<div class="col-sm-2">
								<label for="organization" class="form-label">
									<span>Period To</span>&nbsp;&nbsp;&nbsp;&nbsp;
									<input class="form-check-input" style="margin: 0px;" type="checkbox" value="false" name="untillactive" onclick="checkactive()" id="untillactive" />&nbsp;&nbsp;
									<span style="font-size:14px;">Until Active</span>
								</label>
								<div>
									<input class="cusDate" data-role='datepicker' id="period_to" onclick="Dateformat()" style="height:25px;width: 100%;" data-bind="" onkeypress="return date_validate(event)" /><span data-for='valid' class='k-invalid-msg'></span>
								</div>
							</div>
						</div>
						<div class="row" style="padding-bottom:5px;margin-top:5px;padding-right:5px">
							<div class="col-sm-2">
								<label for="" class="form-label">Rule Applied On&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
								<select id="RuleAppliedOn" class="form-select form-control" style=" width: 80%;" onchange="RuleApplied()">
								</select>
							</div>
							<div class="col-sm-2" style="margin-left: -53px;margin-right: 56px;">
								<label id="sourceparentdataset" class="form-label"></label>
								<select id="sourcedataset" class="form-select form-control" style=" width: 126%;" onchange="sourcefieldchange()">
								</select>
							</div>
							<div class="col-sm-2">
								<label id=comsupdataset class="form-label"></label>
								<select id="comdataset" class="form-select form-control" style=" width: 126%;">
								</select>
							</div>
							<div class="col-sm-2" style="margin-left: 36px;margin-right: -38px;">
								<label id="souparaccmode" class="form-label"></label>
								<select id="Accmode" class="form-select form-control" style=" width: 80%;">
								</select>
							</div>
							<div class="col-sm-2">
								<label for="" class="form-label">Reversal Flag&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
								<div style="margin-left:2px;margin-top:5px">
									<input type="radio" id="Reversal1" name="Reversal" value="Y">&nbsp;&nbsp;Yes&nbsp;
									<input type="radio" id="Reversal2" style="margin-left: 10px;" name="Reversal" value="N">&nbsp;&nbsp;No&nbsp;
									<input type="radio" id="Reversal3" style="margin-left: 10px;" name="Reversal" value="O">&nbsp;&nbsp;N/A&nbsp;
								</div>
							</div>
							<div class="col-sm-2" style="margin-left: -3px;">
								<label for="" class="form-label">Group Flag&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
								<div style="margin-left:2px;margin-top:5px">
									<input type="radio" id="groupflag1" name="Groupflag" value="Y" onclick="flag()">&nbsp;&nbsp;Yes&nbsp;
									<input type="radio" id="groupflag2" style="margin-left: 10px;" name="Groupflag" onclick="flag()" value="N">&nbsp;&nbsp;No&nbsp;
								</div>
							</div>
						</div>

						<div class="row">
							<div class="nav-align-top mb-3 mt-3">
								<ul class="nav nav-pills mb-2" role="tablist">
									<li class="nav-item">
										<button type="button" id="ruleCondition"
												class="nav-link"
												role="tab"
												data-bs-toggle="tab"
												data-bs-target="#navs-pills-FiedConfig"
												aria-controls="navs-pills-FiedConfig"
												aria-selected="true">
											Rule Condition
										</button>
									</li>
									<li class="nav-item">
										<button type="button" id="grouping"
												class="nav-link"
												role="tab"
												data-bs-toggle="tab"
												data-bs-target="#navs-pills-top-grouping"
												aria-controls="navs-pills-top-grouping"
												aria-selected="false">
											Grouping
										</button>
									</li>
									<li class="nav-item">
										<button type="button" id="identifier"
												class="nav-link"
												role="tab"
												data-bs-toggle="tab"
												data-bs-target="#navs-pills-top-identifier"
												aria-controls="navs-pills-top-identifier"
												aria-selected="true">
											Identifier
										</button>
									</li>
								</ul>
								<div class="tab-content">
									<div class="tab-pane fade show active" id="navs-pills-FiedConfig" role="tabpanel" style="margin-top:-25px;">
										<div class="panel panel-default">
											<div class="panel-body">
												<div class="row" style="padding-bottom:3px;padding-right:30px;padding-top:10px;">
													<i data-bs-toggle="modal" onclick='getrulecondition(this)' value='create' class="fa fa-plus cursor-pointer" aria-hidden="true" style="color:green"></i>
													<div class="col-xs-12">
														<div id="grid_rulecondition">
														</div>
													</div>
												</div>
											</div>
											<div class="modal" id="rulecon" tabindex="-1" aria-hidden="true">
												<div class="modal-dialog modal-lg" role="document">
													<div class="modal-content">
														<div class="modal-header">
														</div>
														<div class="modal-body" style="margin-top: -26px;">
															<div class="row">
																<div class="col-sm-4">
																</div>
																<div class="col-sm-4">
																	<h4 style="font-size: 15px;text-align: center;color: #1a9950;font-weight: 600;">New</h4>
																</div>
																<div class="col-sm-4">
																	<i class="bx bx-x cursor-pointer" data-bs-dismiss="modal" style="color: #000000;float:right"></i>
																</div>
															</div>
															<hr style="margin-top:-1px; width:100%;">
															<div class="container">
																<div class="row" style="padding-bottom:5px;margin-top:5px;padding-left:30px;padding-right:5px">
																	<div class="col-sm-6">
																		<label for="" class="form-label">Source Dataset</label>
																		<input class="form-control" id="sourcedataset1" type="text" disabled>
																		<input class="form-control" id="rulecondtion_gid" type="hidden" disabled>
																		<input class="form-control" id="txtmoderulecon" value="Create" type="hidden" disabled>
																	</div>
																	<div class="col-sm-6">
																		<label for="" class="form-label">Comparison Dataset</label>
																		<input class="form-control" id="comparisondataset1" type="text" disabled>
																	</div>
																</div>
																<div class="row" style="padding-bottom:5px;margin-top:5px;padding-left:30px;padding-right:5px">
																	<div class="col-sm-6">
																		<label for="" class="form-label">Source Field</label>
																		<select id="cmbsourcefield" class="form-select form-control" onchange="sourcefield()">
																		</select>
																	</div>
																	<div class="col-sm-6">
																		<label for="" class="form-label">Comparison Field</label>
																		<select id="cmbcomparisionfield" class="form-select form-control" onchange="comparefield()">
																		</select>
																	</div>
																</div>
																<div class="row" style="padding-bottom:8px;padding-top:8px;padding-left:30px;padding-right:5px">
																	<div class="col-sm-6">
																		<label for="" class="form-label">Extraction Criteria </label>
																		@*<input type="text" id="editableDropdownInput" placeholder="Type here" oninput="filterDropdown()">*@
																		<select id="cmbextractcriteria" class="form-select form-control">
																		</select>
																	</div>
																	<div class="col-sm-6">
																		<label for="" class="form-label">Comparision Criteria  </label>
																		<select id="cmbcomparecriteria" class="form-select form-control">
																		</select>
																	</div>
																</div>
																<div class="row" style="padding-bottom:8px;padding-top:8px;padding-left:30px;padding-right:5px">
																	<div class="col-sm-4">
																	</div>
																	<div class="col-sm-4">
																	</div>
																	<div class="col-sm-4">
																		<label for="" class="form-label"></label>
																		<center>
																			<button type="button" class="btn btn-sm btn-success me-2" style="background: #38b55a;border-color: #38b55a;width:40%" onclick="saverulecondition()">Save</button>&nbsp;&nbsp;&nbsp;
																			<button type="submit" class="btn btn-sm btn-success me-2" data-bs-dismiss="modal" style="background: red;border-color: red;width:40%" onclick="rr1()">Cancel</button>
																		</center>
																	</div>
																</div>
															</div>
														</div>
													</div>
												</div>
											</div>
										</div>
									</div>
									<div class="tab-pane fade" id="navs-pills-top-grouping" role="tabpanel" style="margin-top:-25px;">
										<div class="panel panel-default">
											<div class="row" style="padding-bottom:5px;margin-top:5px;padding-right:5px">
												<div class="col-sm-4">
													<label for="" class="form-label">Group Method</label>
													<div style="margin-left:2px;margin-top:5px">
														<input type="radio" id="GM1" name="Groupmethod" value="C">&nbsp;&nbsp;Contra&nbsp;
														<input type="radio" id="GM2" style="margin-left: 10px;" name="Groupmethod" value="B">&nbsp;&nbsp;Mirror&nbsp;
														<input type="radio" id="GM3" name="Groupmethod" value="A">&nbsp;&nbsp;Contra & Mirror&nbsp;
													</div>
												</div>
												<div class="col-sm-4">
													<label for="" class="form-label">Group Many-To-Many</label>
													<div style="margin-left:2px;margin-top:5px">
														<input type="radio" id="GMM1" name="Grouptomany" value="Y">&nbsp;&nbsp;Yes&nbsp;
														<input type="radio" id="GMM2" style="margin-left: 10px;" name="Grouptomany" value="N">&nbsp;&nbsp;No&nbsp;
													</div>
												</div>
											</div>
											<div class="row" style="padding-bottom:3px;padding-right:30px;padding-top:10px;">
												<i data-bs-toggle="modal" onclick='getgrouping(this)' value='create' class="fa fa-plus cursor-pointer" aria-hidden="true" style="color:green"></i>
												<div class="col-xs-12">
													<div id="grid_grouping">
													</div>
												</div>
											</div>
											<div class="modal" id="newtargetgrouping" tabindex="-1" aria-hidden="true">
												<div class="modal-dialog modal-lg" role="document">
													<div class="modal-content">
														<div class="modal-header">
														</div>
														<div class="modal-body" style="margin-top: -26px;">
															<div class="row">
																<div class="col-sm-4">
																</div>
																<div class="col-sm-4">
																	<h4 style="font-size: 15px;text-align: center;color: #1a9950;font-weight: 600;">New</h4>
																</div>
																<div class="col-sm-4">
																	<i class="bx bx-x cursor-pointer" data-bs-dismiss="modal" style="color: #000000;float:right"></i>
																</div>
															</div>
															<hr style="margin-top:-1px; width:100%;">
															<div class="container">
																<div class="row" style="padding-bottom:5px;margin-top:5px;padding-left:10px;padding-right:10px">
																	<div class="col-sm-8">
																		<label for="" class="form-label">Comparison Group Field</label>
																		<select id="cmbcomgrpfield" class="form-select form-control">
																		</select>
																		<input type="hidden" id="rulegrpfield_gid" />
																		<input class="form-control" id="txtmodegroup" value="Create" type="hidden" disabled>
																	</div>
																	<div class="col-sm-4" style="margin-top: 4%;">
																		<button type="button" class="btn btn-sm btn-success me-2" style="background: #38b55a;border-color: #38b55a;width:40%" onclick="savegrouping()">Save</button>&nbsp;&nbsp;&nbsp;
																		<button type="submit" class="btn btn-sm btn-success me-2" data-bs-dismiss="modal" style="background: red;border-color: red;width:40%" onclick="rr6()">Cancel</button>
																	</div>
																</div>
															</div>
														</div>
													</div>
												</div>
											</div>
										</div>
									</div>
									<div class="tab-pane fade" id="navs-pills-top-identifier" role="tabpanel" style="margin-top:-10px;">
										<div class="panel panel-default">
											<div class="panel-body">
												<div class="row" style="padding-bottom:3px;padding-right:30px;padding-top:10px;">
													<i data-bs-toggle="modal" onclick='getidentifier(this)' value='create' class="fa fa-plus cursor-pointer" aria-hidden="true" style="color:green"></i>
													<div class="col-xs-12">
														<div id="grid_identifier">
														</div>
													</div>
												</div>
											</div>
										</div>
										<div class="modal" id="newidentifier" tabindex="-1" aria-hidden="true">
											<div class="modal-dialog modal-lg" role="document">
												<div class="modal-content">
													<div class="modal-header">
													</div>
													<div class="modal-body" style="margin-top: -26px;">
														<div class="row">
															<div class="col-sm-4">
															</div>
															<div class="col-sm-4">
																<h4 style="font-size: 15px;text-align: center;color: #1a9950;font-weight: 600;">New</h4>
															</div>
															<div class="col-sm-4">
																<i class="bx bx-x cursor-pointer" data-bs-dismiss="modal" style="color: #000000;float:right"></i>
															</div>
														</div>
														<hr style="margin-top:-1px; width:100%;">
														<div class="container">
															<div class="row" style="padding-bottom:5px;margin-top:5px">
																<div class="col-sm-8">
																	<label for="" class="form-label">Filter Apply On</label>
																	<select id="filterapplyon" class="form-select form-control">
																	</select>
																	<input class="form-control" id="ruleselefilter_gid" type="hidden" disabled>
																	<input class="form-control" id="txtmodeidentifier" value="Create" type="hidden" disabled>
																</div>
																<div class="col-sm-4">
																	<label for="" class="form-label">Filter Name</label>
																	<select id="cmbfiltername" class="form-select form-control" onchange="filtername()">
																	</select>
																</div>
															</div>
															<div class="row" style="padding-bottom:5px;margin-top:5px;">
																<div class="col-sm-4">
																	<label for="" class="form-label">Extraction Criteria</label>
																	<select id="extractcriteria" class="form-select form-control">
																	</select>
																</div>

																<div class="col-sm-4">
																	<label for="" class="form-label">Identifier Criteria</label>
																	<select id="identifiercriteria" class="form-select form-control">
																	</select>
																</div>
																<div class="col-sm-4">
																	<label for="" class="form-label">Identifier Value</label>
																	<input class="form-control" id="identifiervalue" type="text" value="">
																</div>
															</div>
															<div class="row" style="padding-bottom:5px;margin-top:5px;">
																<div class="col-sm-4">
																</div>
																<div class="col-sm-4">
																</div>
																<div class="col-sm-4" style="margin-top:3%;">
																	<button type="submit" class="btn btn-sm btn-success me-2" style="background: green ;border-color: Green;width:40%" onclick="saveIdentifier()">Save</button>&nbsp;&nbsp;&nbsp;
																	<button type="submit" class="btn btn-sm btn-success me-2" data-bs-dismiss="modal" style="background: red;border-color: red;width:40%" onclick="rr3()">Cancel</button>
																</div>
															</div>
														</div>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="row" style="padding-bottom:3px;padding-left:5px;padding-right:5px">
							<div class="col-sm-4"></div>
							<div class="col-sm-4" style="text-align:center">
								<button type="button" class="btn btn-sm save_btn me-2" onclick="saveheader()">Submit</button>&nbsp;&nbsp;&nbsp;
								<a href="../Recon/ReconList" class="btn btn-sm cancel_btn me-2">Cancel</a>
							</div>
							<div class="col-sm-4"></div>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>
</body>
</html>
<script type="text/javascript">
	$(document).ready(function () {
		$("#navhead").text("Rule Setup");
		kendodate_format();
		grid_rulecondition([]);
		getGridComboList();
		grid_grouping([]);
		grid_identifier([]);
	});
	function filterDropdown() {
		// Get the input and select elements
		const input = document.getElementById('editableDropdownInput');
		const select = document.getElementById('cmbextractcriteria');

		// Get the user's input
		const inputText = input.value.toLowerCase();

		// Loop through the options and hide/show based on the input
		const options = select.getElementsByTagName('option');
		for (let option of options) {
			const optionText = option.value.toLowerCase();
			if (optionText.includes(inputText)) {
				option.style.display = 'block';
			} else {
				option.style.display = 'none';
			}
		}
	}
	
	function RuleApplied() {
		if ($("#RuleAppliedOn").val() == 'T') {
			$("#sourceparentdataset").text("Source Dataset").append("&nbsp;<span style='font - size: 12px; color: red; font - weight: bold; '>*</span>")
			$("#comsupdataset").text("Comparison Dataset").append("&nbsp;<span style='font - size: 12px; color: red; font - weight: bold; '>*</span>")
			$("#souparaccmode").text("Source Account mode").append("&nbsp;<span style='font - size: 12px; color: red; font - weight: bold; '>*</span>")
			var reconcode = $("#cmbreconname").val();
			$.ajax({
				type: "POST",
				url: '/Rulesetup/rulerecondatasetfetch',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_recon_code: reconcode }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					var res = JSON.parse(response);
					$("#sourcedataset").empty();
					$("#sourcedataset").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(res, function (index, item) {
						if (item.dataset_type != "S") {
							$("#sourcedataset").append($('<option>', {
								value: item.dataset_code,
								text: item.dataset_name
							}));
						}
					});
					$("#comdataset").empty();
					$("#comdataset").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(res, function (index, item) {
						if (item.dataset_type != "S") {
							$("#comdataset").append($('<option>', {
								value: item.dataset_code,
								text: item.dataset_name
							}));
							$("#comdataset").prop('disabled', false);
						}
					});
				}
			})
	} else if ($("#RuleAppliedOn").val() == 'S') {
		$("#sourceparentdataset").text("Supporting Dataset").append("&nbsp;<span style='font - size: 12px; color: red; font - weight: bold; '>*</span>")
		$("#comsupdataset").text("Parent Dataset").append("&nbsp;<span style='font - size: 12px; color: red; font - weight: bold; '>*</span>")
		$("#souparaccmode").text("Parent Account mode").append("&nbsp;<span style='font - size: 12px; color: red; font - weight: bold; '>*</span>")
		var reconcode = $("#cmbreconname").val();
		$.ajax({
			type: "POST",
			url: '/Rulesetup/rulerecondatasetfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_recon_code: reconcode }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				var res = JSON.parse(response);
				$("#sourcedataset").empty();
				$("#sourcedataset").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(res, function (index, item) {
					if (item.dataset_type == "S") {
						$("#sourcedataset").append($('<option>', {
							value: item.dataset_code,
							text: item.dataset_name
						}));
					}
				});
				$("#comdataset").empty();
				$("#comdataset").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(res, function (index, item) {
					$("#comdataset").append($('<option>', {
						value: item.dataset_code,
						text: item.dataset_name
					}));
					$("#comdataset").prop('disabled', true)
				});
			}
		});
	}
		}
	function flag() {
		var flag = $('input[name="Groupflag"]:checked').val()
		if (flag == "Y") {
			$("#grouping").show();
		} else {
			$("#grouping").hide();
		}
	}
	function rr1() {
		$("#newdebit").hide();
	}
	function rrbase() {
		$("#collapseOne").show();
	}
	function rrbase1() {
		$("#collapseOne").hide();
	}
	function reconchange() {
		//dataset combo
		var reconcode = $("#cmbreconname").val();
		$.ajax({
			type: "POST",
			url: '/Rulesetup/rulerecondatasetfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_recon_code: reconcode }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				var res = JSON.parse(response);
				$("#sourcedataset").empty();
				$("#sourcedataset").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(res, function (index, item) {
					if (item.dataset_type != "S") {
						$("#sourcedataset").append($('<option>', {
							value: item.dataset_code,
							text: item.dataset_name
						}));
					}
				});
				$("#comdataset").empty();
				$("#comdataset").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(res, function (index, item) {
					if (item.dataset_type != "S") {
						$("#comdataset").append($('<option>', {
							value: item.dataset_code,
							text: item.dataset_name
						}));
					}
				});
				$("#filterapplyon").empty();
				$("#filterapplyon").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(res, function (index, item) {
					$("#filterapplyon").append($('<option>', {
						value: item.dataset_code,
						text: item.dataset_name
					}));
				});
			}
		});
	}
	function load() {
		if (getlocalStorage('btn_clk_val') == "Create") {
			$("#txtmode").val(getlocalStorage('btn_clk_val'));
			$("#txtstatus").val("Active");
			$("#groupflag2").prop("checked", true);
			flag();
			$("#Reversal3").prop("checked", true);
			$("#GM1").prop("checked", true);
			$("#GMM2").prop("checked", true);
		}
		else if (getlocalStorage('btn_clk_val') == "View" || getlocalStorage('btn_clk_val') == "Edit") {
			if (getlocalStorage("ls_pageList") != undefined) {
				var data = getlocalStorage("ls_pageList");
				var cat = data.dataset_category;
				$("#txtmode").val(getlocalStorage('btn_clk_val'));
				$("#txtrulecode").val(data.rule_code);
				$("#ruleName").val(data.rule_name);
				$("#cmbreconname").val(data.recon_code);
				jQuery('#cmbreconname').trigger("change");
				$("#txtstatus").val(data.active_status_desc);
				$("#rulegid").val(data.rule_gid);
				$.ajax({
					type: "POST",
					url: '/Rulesetup/rulefetch',
					dataType: 'json',
					data: JSON.stringify({ in_rule_code: data.rule_code }),
					contentType: 'application/json; charset=utf-8',
					success: function (response) {
						if (response != null) {
							var res = JSON.parse(response);
							$("#RuleAppliedOn").val(res.RuleHeader[0].rule_apply_on);
							$("#sourcedataset").val(res.RuleHeader[0].source_dataset_code);
							$("#comdataset").val(res.RuleHeader[0].comparison_dataset_code);
							$("#Accmode").val(res.RuleHeader[0].source_acc_mode);
							if (res.RuleHeader[0].reversal_flag == "Y") {
								$("#Reversal1").prop("checked", true);
							} else if (res.RuleHeader[0].reversal_flag == "N") {
								$("#Reversal2").prop("checked", true);
							} else if (res.RuleHeader[0].reversal_flag == "O") {
								$("#Reversal3").prop("checked", true);
							}
							if (res.RuleHeader[0].group_flag == "Y") {
								$("#groupflag1").prop("checked", true);
							} else {
								$("#groupflag2").prop("checked", true);
							}
							if (res.RuleCondition.length > 0) {
								grid_rulecondition(res.RuleCondition);
							}
							if (res.RuleGrouping.length > 0) {
								grid_grouping(res.RuleGrouping)
								if (res.RuleGrouping[0].group_method_flag == "C") {
									$("#GM1").prop("checked", true);
								} else if (res.RuleGrouping[0].group_method_flag == "B") {
									$("#GM2").prop("checked", true);
								} else if (res.RuleGrouping[0].group_method_flag == "A") {
									$("#GM3").prop("checked", true);
								}
								if (res.RuleGrouping[0].manytomany_match_flag == "Y") {
									$("#GMM1").prop("checked", true);
								} else if (res.RuleGrouping[0].manytomany_match_flag == "N") {
									$("#GMM2").prop("checked", true);
								}
							}
							if (res.RuleIdentifier.length > 0) {
								grid_identifier(res.RuleIdentifier);
							}
						}
						else {

						}
					},
					error: function (er) {
						alert(er)
						console.log(er)
					}

				});
			}
		}
	}
	function checkactive() {
		debugger;
		if ($("input:checkbox[id='untillactive']").is(":checked") == true) {
			$("#period_to").val('');
			//$("#period_to").removeAttr('disabled', true);
			$("#period_to").prop("disabled", true);
			$('#period_to').unbind('click');
		}
		else {

			$("#period_to").removeAttr('disabled', false);
		}
	}
	function getfetch() {
		var rulecode = $("#txtrulecode").val();
		$.ajax({
			type: "POST",
			url: '/Rulesetup/rulefetch',
			dataType: 'json',
			data: JSON.stringify({ in_rule_code: rulecode }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var res = JSON.parse(response);
					$("#RuleAppliedOn").val(res.RuleHeader[0].rule_apply_on);
					$("#sourcedataset").val(res.RuleHeader[0].source_dataset_code);
					$("#comdataset").val(res.RuleHeader[0].comparison_dataset_code);
					$("#Accmode").val(res.RuleHeader[0].source_acc_mode);
					if (res.RuleHeader[0].reversal_flag == "Y") {
						$("#Reversal1").prop("checked", true);
					} else if (res.RuleHeader[0].reversal_flag == "N") {
						$("#Reversal2").prop("checked", true);
					} else if (res.RuleHeader[0].reversal_flag == "O") {
						$("#Reversal3").prop("checked", true);
					}
					if (res.RuleHeader[0].group_flag == "Y") {
						$("#groupflag1").prop("checked", true);
					} else {
						$("#groupflag2").prop("checked", true);
					}
					if (res.RuleCondition.length > 0) {
						grid_rulecondition(res.RuleCondition);
					} else {
						grid_rulecondition([]);
					}
					if (res.RuleGrouping.length > 0) {
						grid_grouping(res.RuleGrouping)
						if (res.RuleGrouping[0].group_method_flag == "C") {
							$("#GM1").prop("checked", true);
						} else if (res.RuleGrouping[0].group_method_flag == "B") {
							$("#GM2").prop("checked", true);
						} else if (res.RuleGrouping[0].group_method_flag == "A") {
							$("#GM3").prop("checked", true);
						}
						if (res.RuleGrouping[0].manytomany_match_flag == "Y") {
							$("#GMM1").prop("checked", true);
						} else if (res.RuleGrouping[0].manytomany_match_flag == "N") {
							$("#GMM2").prop("checked", true);
						}
					} else {
						grid_grouping([]);
					}
					if (res.RuleIdentifier.length > 0) {
						grid_identifier(res.RuleIdentifier);
					} else {
						grid_identifier([]);
					}
				}
				else {

				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}

		});
	}
	function getGridComboList() {
		// Dataset type
		var in_master_code = "QCD_RS_RULE_APPLLIED";
		var in_user_code = "sundar";
		$.ajax({
			type: "POST",
			url: '/Common/Qcdmaster',
			dataType: 'json',
			data: JSON.stringify({ in_user_code: in_user_code, in_master_code: in_master_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				$("#RuleAppliedOn").empty();
				$.each(response, function (index, item) {
					$("#RuleAppliedOn").append($('<option>', {
						value: item.masterSyscode,
						text: item.masterName
					}));
				});
				RuleApplied();
			}
		});

		// Dataset type
		var in_master_code = "QCD_RS_ACC_MODE";
		var in_user_code = "sundar";
		$.ajax({
			type: "POST",
			url: '/Common/Qcdmaster',
			dataType: 'json',
			data: JSON.stringify({ in_user_code: in_user_code, in_master_code: in_master_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				$("#Accmode").empty();
				$("#Accmode").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(response, function (index, item) {
					$("#Accmode").append($('<option>', {
						value: item.masterSyscode,
						text: item.masterName
					}));
				});
			}
		});
		//recon name
		var data = {};
		data.in_user_gid = 0;
		data.in_active_status = '';
		var Context = data;
		$.ajax({
			type: "POST",
			url: '/Recon/Reconlistfetch',
			dataType: 'json',
			data: JSON.stringify({ in_user_gid: Context.in_user_gid, in_active_status: Context.in_active_status }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				$("#cmbreconname").empty();
				$("#cmbreconname").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(response, function (index, item) {
					$("#cmbreconname").append($('<option>', {
						value: item.recon_code,
						text: item.recon_name
					}));
				});
				load();
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}

		});
	}
	function saveheader() {
		try {
			var in_rule_code = $("#txtrulecode").val();
			var ruleName = $("#ruleName").val();
			var cmbreconname = $("#cmbreconname").val();
			var period_from = $("#period_from").val();
			var ts = period_from.split("/");
			var pr = ts[2] + "-" + ts[1] + "-" + ts[0];
			var in_until_active_flag = "";
			if ($('#untillactive').is(":checked")) {
				in_until_active_flag = "Y"
				var pr1 = "";
			} else {
				in_until_active_flag = "N"
				var period_to = $("#period_to").val();
				var ts1 = period_to.split("/");
				var pr1 = ts1[2] + "-" + ts1[1] + "-" + ts1[0];
			}
			var in_source_dataset_code = "";
			var in_comparison_dataset_code = "";
			var in_source_acc_mode = "";
			var in_parent_dataset_code = "";
			var in_support_dataset_code = "";
			var in_parent_acc_mode = "";
			var in_applyrule_on = $("#RuleAppliedOn").val();
			if (in_applyrule_on == 'T') {
				in_source_dataset_code = $("#sourcedataset").val();
				in_comparison_dataset_code = $("#comdataset").val();
				in_source_acc_mode = $("#Accmode").val();
			} else {
				in_parent_dataset_code = $("#sourcedataset").val();
				in_support_dataset_code = $("#comdataset").val();
				in_parent_acc_mode = $("#Accmode").val();
			}
			var action = "";
			if ($("#txtmode").val() == "Create") {
				action = "INSERT"
			} else if ($("#txtmode").val() == "Edit") {
				action = "UPDATE"
			}
			var action_by = "vijay"
			var rulegid = $("#rulegid").val();
			if (rulegid == "") {
				rulegid = 0;
			}
			var status = 0;
			if ($("#txtstatus").val() == "Active") {
				status = "Y"
			} else {
				status = "N"
			}
			var Reversal = $("input[name='Reversal']:checked").val();
			var Groupflag = $("input[name='Groupflag']:checked").val();
			$.ajax({
				type: "POST",
				url: '/Rulesetup/Ruleheader',
				dataType: 'json',
				data: JSON.stringify({
					in_rule_gid: rulegid, in_rule_code: in_rule_code, in_rule_name: ruleName, in_recon_code: cmbreconname, in_period_from: pr,
					in_period_to: pr1, in_until_active_flag: in_until_active_flag, in_applyrule_on: in_applyrule_on,
					in_source_dataset_code: in_source_dataset_code, in_comparison_dataset_code: in_comparison_dataset_code, in_source_acc_mode: in_source_acc_mode,
					in_parent_dataset_code: in_parent_dataset_code, in_support_dataset_code: in_support_dataset_code, in_parent_acc_mode: in_parent_acc_mode,
					in_reversal_flag: Reversal, in_group_flag: Groupflag, in_action: action, in_action_by: action_by, in_active_status: status
				}),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					debugger;
					if (response != null) {
						$.alert({
							title: 'Recon',
							content: response.out_msg,
							type: 'green',
						});
					}
					else {

					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}
			});
		}
		catch (e) {
			console.log(e)
		}
	}
	function grid_rulecondition(data) {
		$("#grid_rulecondition").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 5,
				schema: {
					model: {
						fields: {
							rulecondition_gid: { type: "string" },
							rule_code: { type: "string" },
							source_field: { type: "string" },
							comparison_field: { type: "string" },
							extraction_criteria: { type: "string" },
							comparison_criteria: { type: "string" },
							active_status: { type: "string" },
							active_status_desc: { type: "string" }
						}
					}
				}
			},
			height: 172,
			groupable: false,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_rulecondition').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
			},
			sortable: true,
			selectable: true,
			filterable: true,
			navigatable: true,
			pageable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			columns: [{
				command: [
					{
						name: "edit",
						id: "Edit",
						template: "<a href='' onclick='getrulecondition(this)' value='edit' data-bs-toggle='modal'><img src = '../Assets/images/editicons.png'></a>&nbsp;&nbsp;&nbsp;",
					},
					{
						name: "Delete",
						id: "Delete",
						template: "<a href='' onclick='myDeleteJsrulecondition()' data-bs-toggle='modal'><img src = '../Assets/images/del.png' href='../DataSet/DataSetForm'></a>&nbsp;&nbsp;&nbsp;"
					},
				], title: "Action&nbsp;", width: "40px",
			},
			{
				field: "rulecondition_gid",
				title: "rulecondition_gid",
				hidden: true,
			},
			{
				field: "source_field",
				title: "Source Field",
				width: 100,
				hidden: true,
			},
			{
				field: "source_field_desc",
				title: "Source Field",
				width: 100,
			},

			{
				field: "extraction_criteria",
				title: "Extraction criteria",
				width: 100,
			},
			{
				field: "comparison_field_desc",
				title: "Comparison Field",
				width: 100,
			},
			{
				field: "comparison_field",
				title: "Comparison Field",
				width: 100,
				hidden: true,
			},
			{
				field: "comparison_criteria",
				title: "Comparison criteria",
				width: 100,
			},
			{
				field: "active_status",
				title: "Status",
				hidden: true
			},
			{
				field: "active_status_desc",
				title: "Status",
				width: 80,
			}],
			editable: false,

		});
	}
	function getrulecondition(mode) {
		if ($(mode).attr('value') == "create") {
			$("#sourcedataset1").val($("#sourcedataset").find(":selected").text());
			$("#comparisondataset1").val($("#comdataset").find(":selected").text());
			$("#rulecon").modal('show');
			var reconcode = $("#cmbreconname").val();
			$.ajax({
				type: "POST",
				url: '/Rulesetup/FieldAgainstRecon',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_recon_code: reconcode }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					if (response != null) {
						var res = JSON.parse(response);
						$("#cmbsourcefield").empty();
						$("#cmbsourcefield").append($('<option>', {
							value: "",
							text: "  Select  "
						}));
						$.each(res, function (index, item) {
							$("#cmbsourcefield").append($('<option>', {
								value: item.recon_field_desc,
								text: item.recon_field_name
							}).data('code', item.recon_field_type));
						});
						$("#cmbcomparisionfield").empty();
						$("#cmbcomparisionfield").append($('<option>', {
							value: "",
							text: "  Select  "
						}));
						$.each(res, function (index, item) {
							$("#cmbcomparisionfield").append($('<option>', {
								value: item.recon_field_desc,
								text: item.recon_field_name
							}).data('code', item.recon_field_type));
						});
					}
					else {
					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}
			});

		} else if ($(mode).attr('value') == "edit") {

			$("#sourcedataset1").val($("#sourcedataset").find(":selected").text());
			$("#comparisondataset1").val($("#comdataset").find(":selected").text());
			$("#rulecon").modal('show');
			var reconcode = $("#cmbreconname").val();
			$.ajax({
				type: "POST",
				url: '/Rulesetup/FieldAgainstRecon',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_recon_code: reconcode }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					if (response != null) {
						var res = JSON.parse(response);
						$("#cmbsourcefield").empty();
						$("#cmbsourcefield").append($('<option>', {
							value: "",
							text: "  Select  "
						}));
						$.each(res, function (index, item) {
							$("#cmbsourcefield").append($('<option>', {
								value: item.recon_field_desc,
								text: item.recon_field_name
							}).data('code', item.recon_field_type));
						});
						$("#cmbcomparisionfield").empty();
						$("#cmbcomparisionfield").append($('<option>', {
							value: "",
							text: "  Select  "
						}));
						$.each(res, function (index, item) {
							$("#cmbcomparisionfield").append($('<option>', {
								value: item.recon_field_desc,
								text: item.recon_field_name
							}).data('code', item.recon_field_type));
						});
					}
					else {
					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}
			});
			var grid = $("#grid_rulecondition").data("kendoGrid");
			var selectedItem = grid.dataItem(grid.select());
			$("#cmbsourcefield").val(selectedItem.source_field);
			$("#cmbcomparisionfield").val(selectedItem.comparison_field);
			jQuery('#cmbsourcefield').trigger("change");
			jQuery('#cmbcomparisionfield').trigger("change");
			$("#txtmoderulecon").val("Edit");
			$("#cmbextractcriteria").val(selectedItem.extraction_criteria);
			$("#cmbcomparecriteria").val(selectedItem.comparison_criteria);
			$("#rulecondtion_gid").val(selectedItem.rulecondition_gid);
		}
	}
	function sourcefield() {
		var data1 = $("#cmbsourcefield").find(":selected");
		var codeValue = data1.data('code');
		var sourcedata = 'SOURCE';
		$.ajax({
			type: "POST",
			url: '/Rulesetup/rulefilterfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_condition_type: sourcedata, in_field_type: codeValue }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var res = JSON.parse(response);
					$("#cmbextractcriteria").empty();
					$("#cmbextractcriteria").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(res, function (index, item) {
						$("#cmbextractcriteria").append($('<option>', {
							value: item.condition_desc,
							text: item.condition_desc
						}));
					});
				}
				else {
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
	}
	function comparefield() {
		var data1 = $("#cmbcomparisionfield").find(":selected");
		var codeValue = data1.data('code');
		var sourcedata = 'COMPARISON';
		$.ajax({
			type: "POST",
			url: '/Rulesetup/rulefilterfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_condition_type: sourcedata, in_field_type: codeValue }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var res = JSON.parse(response);
					$("#cmbcomparecriteria").empty();
					$("#cmbcomparecriteria").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(res, function (index, item) {
						$("#cmbcomparecriteria").append($('<option>', {
							value: item.condition_desc,
							text: item.condition_desc
						}));
					});
				}
				else {
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
	}
	function saverulecondition() {
		try {
			var in_rule_code = $("#txtrulecode").val();
			var in_source_field = $("#cmbsourcefield").val();
			var in_comparison_field = $("#cmbcomparisionfield").val();
			var in_extraction_criteria = $("#cmbextractcriteria").val();
			var in_comparison_criteria = $("#cmbcomparecriteria").val();
			var action = "";
			if ($("#txtmoderulecon").val() == "Create") {
				action = "INSERT"
			} else if ($("#txtmoderulecon").val() == "Edit") {
				action = "UPDATE"
			}
			var action_by = "vijay"
			var rulecondtion_gid = $("#rulecondtion_gid").val();
			if (rulecondtion_gid == "") {
				rulecondtion_gid = 0;
			}
			var status = 0;
			if ($("#txtstatus").val() == "Active") {
				status = "Y"
			} else {
				status = "N"
			}
			$.ajax({
				type: "POST",
				url: '/Rulesetup/ruleconditionsave',
				dataType: 'json',
				data: JSON.stringify({
					in_rulecondition_gid: rulecondtion_gid, in_rule_code: in_rule_code, in_source_field: in_source_field, in_comparison_field: in_comparison_field,
					in_extraction_criteria: in_extraction_criteria, in_comparison_criteria: in_comparison_criteria, in_action: action, in_action_by: action_by, in_active_status: status
				}),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					debugger;
					if (response != null) {
						$.alert({
							title: 'Recon',
							content: response.out_msg,
							type: 'green',
						});
					}
					else {

					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}

			});
		}
		catch (e) {
			console.log(e)
		}
	}
	function grid_grouping(data) {
		$("#grid_grouping").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 5,
				schema: {
					model: {
						fields: {
							rulegrpfield_gid: { type: "string" },
							grp_field: { type: "string" },
							active_status: { type: "string" },
							active_status_desc: { type: "string" }
						}
					}
				}
			},
			height: 172,
			groupable: false,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_grouping').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
			},
			sortable: true,
			selectable: true,
			filterable: true,
			navigatable: true,
			pageable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			columns: [{
				command: [
					{
						name: "edit",
						id: "Edit",
						template: "<a href='' onclick='getgrouping(this)' value='edit' data-bs-toggle='modal'><img src = '../Assets/images/editicons.png'></a>&nbsp;&nbsp;&nbsp;",
					},
					{
						name: "Delete",
						id: "Delete",
						template: "<a href='' onclick='myDeleteJsgrouping()' data-bs-toggle='modal'><img src = '../Assets/images/del.png' href='../DataSet/DataSetForm'></a>&nbsp;&nbsp;&nbsp;"
					},
				], title: "Action&nbsp;", width: "40px",
			},
			{
				field: "rulegrpfield_gid",
				title: "rulegrpfield_gid",
				hidden: true,
			},
			{
				field: "grp_field",
				title: "Comparison Group Field",
				width: 100,
				hidden: true,
			},
			{
				field: "recon_field_name",
				title: "Comparison Group Field",
				width: 100,
			},
			{
				field: "active_status",
				title: "Status",
				hidden: true
			},
			{
				field: "active_status_desc",
				title: "Status",
				width: 80,
			}],
			editable: false,

		});
	}
	function getgrouping(mode) {
		if ($(mode).attr('value') == "create") {
			$("#newtargetgrouping").modal('show');
			var reconcode = $("#cmbreconname").val();
			$.ajax({
				type: "POST",
				url: '/Rulesetup/FieldAgainstRecon',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_recon_code: reconcode }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					if (response != null) {
						var res = JSON.parse(response);
						$("#cmbcomgrpfield").empty();
						$("#cmbcomgrpfield").append($('<option>', {
							value: "",
							text: "  Select  "
						}));
						$.each(res, function (index, item) {
							$("#cmbcomgrpfield").append($('<option>', {
								value: item.recon_field_desc,
								text: item.recon_field_name
							}).data('code', item.recon_field_type));
						});
					}
					else {
					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}
			});
		} else if ($(mode).attr('value') == "edit") {
			var reconcode = $("#cmbreconname").val();
			$.ajax({
				type: "POST",
				url: '/Rulesetup/FieldAgainstRecon',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_recon_code: reconcode }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					if (response != null) {
						var res = JSON.parse(response);
						$("#cmbcomgrpfield").empty();
						$("#cmbcomgrpfield").append($('<option>', {
							value: "",
							text: "  Select  "
						}));
						$.each(res, function (index, item) {
							$("#cmbcomgrpfield").append($('<option>', {
								value: item.recon_field_desc,
								text: item.recon_field_name
							}).data('code', item.recon_field_type));
						});
						$("#txtmodegroup").val("Edit");
					}
					else {
					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}
			});
			var grid = $("#grid_grouping").data("kendoGrid");
			var selectedItem = grid.dataItem(grid.select());
			$("#newtargetgrouping").modal('show');
			$("#cmbcomgrpfield").val(selectedItem.grp_field)
		}
	}
	function savegrouping() {
		try {
			var in_rule_code = $("#txtrulecode").val();
			var rulegid = parseInt($("#rulegid").val());
			var cmbcomgrpfield = $("#cmbcomgrpfield").val();
			var in_group_method_flag = $("input[name='Groupmethod']:checked").val();
			var in_manytomany_match_flag = $("input[name='Grouptomany']:checked").val();
			var action = "";
			if ($("#txtmodegroup").val() == "Create") {
				action = "INSERT"
			} else if ($("#txtmodegroup").val() == "Edit") {
				action = "UPDATE"
			}
			var action_by = "vijay"
			var rulegrpfield_gid = $("#rulegrpfield_gid").val();
			if (rulegrpfield_gid == "") {
				rulegrpfield_gid = 0;
			}
			var status = 0;
			if ($("#txtstatus").val() == "Active") {
				status = "Y"
			} else {
				status = "N"
			}
			$.ajax({
				type: "POST",
				url: '/Rulesetup/rulegroupsave',
				dataType: 'json',
				data: JSON.stringify({
					in_rulegrpfield_gid: rulegrpfield_gid, in_rule_code: in_rule_code, in_rule_gid: rulegid,
					in_group_method_flag: in_group_method_flag, in_manytomany_match_flag: in_manytomany_match_flag,
					in_grp_field: cmbcomgrpfield, in_action: action, in_action_by: action_by, in_active_status: status
				}),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					debugger;
					if (response != null) {
						$.alert({
							title: 'Recon',
							content: response.out_msg,
							type: 'green',
						});
					}
					else {

					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}

			});
		}
		catch (e) {
			console.log(e)
		}
	}
	function grid_identifier(data) {
		$("#grid_identifier").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 5,
				schema: {
					model: {
						fields: {
							ruleselefilter_gid: { type: "string" },
							filter_applied_on: { type: "string" },
							filter_field: { type: "string" },
							filter_criteria: { type: "string" },
							ident_criteria: { type: "string" },
							ident_value: { type: "string" },
							active_status: { type: "string" },
							active_status_desc: { type: "string" }
						}
					}
				}
			},
			height: 172,
			groupable: false,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_identifier').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
			},
			sortable: true,
			selectable: true,
			filterable: true,
			navigatable: true,
			pageable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			columns: [{
				command: [
					{
						name: "edit",
						id: "Edit",
						template: "<a href='' onclick='getidentifier(this)' value='edit' data-bs-toggle='modal'><img src = '../Assets/images/editicons.png'></a>&nbsp;&nbsp;&nbsp;",
					},
					{
						name: "Delete",
						id: "Delete",
						template: "<a href='' onclick='myDeleteJsidentifier()' data-bs-toggle='modal'><img src = '../Assets/images/del.png' href='../DataSet/DataSetForm'></a>&nbsp;&nbsp;&nbsp;"
					},
				], title: "Action&nbsp;", width: "40px",
			},
			{
				field: "ruleselefilter_gid",
				title: "ruleselefilter_gid",
				hidden: true,
			},
			{
				field: "dataset_name",
				title: "Filter Applied On",
				width: 100,
			},
			{
				field: "filter_applied_on",
				title: "Filter Applied On",
				width: 100,
				hidden: true,
			},
			{
				field: "filter_field",
				title: "Filter Field",
				width: 100,
			},
			{
				field: "filter_criteria",
				title: "Filter Criteria",
				width: 100,
			},
			{
				field: "ident_criteria",
				title: "Identifier Criteria",
				width: 100,
			},
			{
				field: "ident_value",
				title: "Identifier Value",
				width: 100,
			},
			{
				field: "active_status",
				title: "Status",
				hidden: true
			},
			{
				field: "active_status_desc",
				title: "Status",
				width: 80,
			}],
			editable: false,

		});
	}
	function getidentifier(mode) {
		if ($(mode).attr('value') == "create") {
			$("#newidentifier").modal('show');
			var reconcode = $("#cmbreconname").val();
			$.ajax({
				type: "POST",
				url: '/Rulesetup/FieldAgainstRecon',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_recon_code: reconcode }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					if (response != null) {
						var res = JSON.parse(response);
						$("#cmbfiltername").empty();
						$("#cmbfiltername").append($('<option>', {
							value: "",
							text: "  Select  "
						}));
						$.each(res, function (index, item) {
							$("#cmbfiltername").append($('<option>', {
								value: item.recon_field_desc,
								text: item.recon_field_name
							}).data('code', item.recon_field_type));
						});
					}
					else {
					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}
			});
		} else if ($(mode).attr('value') == "edit") {
			$("#newidentifier").modal('show');
			var reconcode = $("#cmbreconname").val();
			$.ajax({
				type: "POST",
				url: '/Rulesetup/FieldAgainstRecon',
				dataType: 'json',
				async: false,
				data: JSON.stringify({ in_recon_code: reconcode }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					if (response != null) {
						var res = JSON.parse(response);
						$("#cmbfiltername").empty();
						$("#cmbfiltername").append($('<option>', {
							value: "",
							text: "  Select  "
						}));
						$.each(res, function (index, item) {
							$("#cmbfiltername").append($('<option>', {
								value: item.recon_field_desc,
								text: item.recon_field_name
							}).data('code', item.recon_field_type));
						});
					}
					else {
					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}
			});
			var grid = $("#grid_identifier").data("kendoGrid");
			var selectedItem = grid.dataItem(grid.select());
			$("#cmbfiltername").val(selectedItem.filter_field);
			jQuery('#cmbfiltername').trigger("change");
			$("#filterapplyon").val(selectedItem.filter_applied_on);
			$("#txtmodeidentifier").val("Edit");
			$("#extractcriteria").val(selectedItem.filter_criteria);
			$("#identifiercriteria").val(selectedItem.ident_criteria);
			$("#identifiervalue").val(selectedItem.ident_value);
			$("#ruleselefilter_gid").val(selectedItem.ruleselefilter_gid);
		}
	}
	function filtername() {
		var data1 = $("#cmbfiltername").find(":selected");
		var codeValue = data1.data('code');
		var sourcedata = 'SOURCE';
		$.ajax({
			type: "POST",
			url: '/Rulesetup/rulefilterfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_condition_type: sourcedata, in_field_type: codeValue }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var res = JSON.parse(response);
					$("#extractcriteria").empty();
					$("#extractcriteria").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(res, function (index, item) {
						$("#extractcriteria").append($('<option>', {
							value: item.condition_desc,
							text: item.condition_desc
						}));
					});
				}
				else {
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
		var data1 = $("#cmbfiltername").find(":selected");
		var codeValue = data1.data('code');
		var sourcedata = 'COMPARISON';
		$.ajax({
			type: "POST",
			url: '/Rulesetup/rulefilterfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_condition_type: sourcedata, in_field_type: codeValue }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response != null) {
					var res = JSON.parse(response);
					$("#identifiercriteria").empty();
					$("#identifiercriteria").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(res, function (index, item) {
						$("#identifiercriteria").append($('<option>', {
							value: item.condition_desc,
							text: item.condition_desc
						}));
					});
				}
				else {
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
	}
	function saveIdentifier() {
		try {
			var in_rule_code = $("#txtrulecode").val();
			var filterapplyon = $("#filterapplyon").val();
			var cmbfiltername = $("#cmbfiltername").val();
			var extractcriteria = $("#extractcriteria").val();
			var identifiercriteria = $("#identifiercriteria").val();
			var identifiervalue = $("#identifiervalue").val();

			var action = "";
			if ($("#txtmodeidentifier").val() == "Create") {
				action = "INSERT"
			} else if ($("#txtmoderulecon").val() == "Edit") {
				action = "UPDATE"
			}
			var action_by = "vijay"
			var ruleselefilter_gid = $("#ruleselefilter_gid").val();
			if (ruleselefilter_gid == "") {
				ruleselefilter_gid = 0;
			}
			var status = 0;
			if ($("#txtstatus").val() == "Active") {
				status = "Y"
			} else {
				status = "N"
			}
			$.ajax({
				type: "POST",
				url: '/Rulesetup/ruleIdentifiersave',
				dataType: 'json',
				data: JSON.stringify({
					in_ruleselefilter_gid: ruleselefilter_gid, in_rule_code: in_rule_code, in_filter_applied_on: filterapplyon,
					in_filter_field: cmbfiltername, in_filter_criteria: extractcriteria, in_ident_value: identifiervalue,
					in_ident_criteria: identifiercriteria, in_action: action, in_user_code: action_by, in_active_status: status
				}),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					debugger;
					if (response != null) {
						$.alert({
							title: 'Recon',
							content: response.out_msg,
							type: 'green',
						});
					}
					else {

					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}

			});
		}
		catch (e) {
			console.log(e)
		}
	}
	function myDeleteJsrulecondition() {
		var grid = $("#grid_rulecondition").data("kendoGrid");
		var model = grid.dataItem($(event.target).closest("tr"));
		var rulecondition_gid = parseInt(model.rulecondition_gid);
		$.confirm({
			icon: 'fa fa-warning',
			title: 'Recon',
			autoClose: 'cancel|10000',
			theme: 'dark',
			animationSpeed: 700,
			content: 'Are you sure do you want to delete this record!',
			type: 'orange',
			buttons: {
				confirm: function () {
					var in_rule_code = "";
					var in_source_field = "";
					var in_comparison_field = "";
					var in_extraction_criteria = "";
					var in_comparison_criteria = "";
					var action = "Delete";
					var action_by = "vijay";
					var status = "";

					$.ajax({
						type: "POST",
						url: '/Rulesetup/ruleconditionsave',
						dataType: 'json',
						data: JSON.stringify({
							in_rulecondition_gid: rulecondition_gid, in_rule_code: in_rule_code, in_source_field: in_source_field, in_comparison_field: in_comparison_field,
							in_extraction_criteria: in_extraction_criteria, in_comparison_criteria: in_comparison_criteria, in_action: action, in_action_by: action_by, in_active_status: status
						}),
						contentType: 'application/json; charset=utf-8',
						success: function (response) {
							if (response.out_result == "1") {
								$.alert({
									icon: 'fa fa-success',
									title: 'Recon',
									theme: 'dark',
									content: response.out_msg,
									type: 'green',
									animationSpeed: 700,
								});
								getfetch();
							} else {
								$.alert({
									title: 'Recon',
									content: response.out_msg,
									type: 'red',
								});
							}
						}
					})
				},
				cancel: function () {
					$.alert({
						icon: 'fa fa-success',
						title: 'Recon',
						theme: 'dark',
						content: 'Delete Canceled.!',
						type: 'blue',
						animationSpeed: 700,
					});
				},
			}
		});
	}
	function myDeleteJsgrouping() {
		var grid = $("#grid_grouping").data("kendoGrid");
		var model = grid.dataItem($(event.target).closest("tr"));
		var rulegrpfield_gid = parseInt(model.rulegrpfield_gid);
		$.confirm({
			icon: 'fa fa-warning',
			title: 'Recon',
			autoClose: 'cancel|10000',
			theme: 'dark',
			animationSpeed: 700,
			content: 'Are you sure do you want to delete this record!',
			type: 'orange',
			buttons: {
				confirm: function () {
					var in_rule_code = "";
					var rulegid = 0;
					var cmbcomgrpfield = "";
					var in_group_method_flag = "";
					var in_manytomany_match_flag = "";
					var action = "DELETE";
					var action_by = "vijay"
					var status = "";
					$.ajax({
						type: "POST",
						url: '/Rulesetup/rulegroupsave',
						dataType: 'json',
						data: JSON.stringify({
							in_rulegrpfield_gid: rulegrpfield_gid, in_rule_code: in_rule_code, in_rule_gid: rulegid,
							in_group_method_flag: in_group_method_flag, in_manytomany_match_flag: in_manytomany_match_flag,
							in_grp_field: cmbcomgrpfield, in_action: action, in_action_by: action_by, in_active_status: status
						}),
						contentType: 'application/json; charset=utf-8',
						success: function (response) {
							if (response.out_result == "1") {
								$.alert({
									icon: 'fa fa-success',
									title: 'Recon',
									theme: 'dark',
									content: response.out_msg,
									type: 'green',
									animationSpeed: 700,
								});
								getfetch();
							} else {
								$.alert({
									title: 'Recon',
									content: response.out_msg,
									type: 'red',
								});
							}
						}
					})
				},
				cancel: function () {
					$.alert({
						icon: 'fa fa-success',
						title: 'Recon',
						theme: 'dark',
						content: 'Delete Canceled.!',
						type: 'blue',
						animationSpeed: 700,
					});
				},
			}
		});
	}
	function myDeleteJsidentifier() {
		var grid = $("#grid_identifier").data("kendoGrid");
		var model = grid.dataItem($(event.target).closest("tr"));

		$.confirm({
			icon: 'fa fa-warning',
			title: 'Recon',
			autoClose: 'cancel|10000',
			theme: 'dark',
			animationSpeed: 700,
			content: 'Are you sure do you want to delete this record!',
			type: 'orange',
			buttons: {
				confirm: function () {
					var in_rule_code = "";
					var filterapplyon = "";
					var cmbfiltername = "";
					var extractcriteria = "";
					var identifiercriteria = "";
					var identifiervalue = "";
					var action = "DELETE";
					var action_by = "vijay"
					var ruleselefilter_gid = parseInt(model.ruleselefilter_gid);
					var status = "";
					$.ajax({
						type: "POST",
						url: '/Rulesetup/ruleIdentifiersave',
						dataType: 'json',
						data: JSON.stringify({
							in_ruleselefilter_gid: ruleselefilter_gid, in_rule_code: in_rule_code, in_filter_applied_on: filterapplyon,
							in_filter_field: cmbfiltername, in_filter_criteria: extractcriteria, in_ident_value: identifiervalue,
							in_ident_criteria: identifiercriteria, in_action: action, in_user_code: action_by, in_active_status: status
						}),
						contentType: 'application/json; charset=utf-8',
						success: function (response) {
							if (response.out_result == "1") {
								$.alert({
									icon: 'fa fa-success',
									title: 'Recon',
									theme: 'dark',
									content: response.out_msg,
									type: 'green',
									animationSpeed: 700,
								});
								getfetch();
							} else {
								$.alert({
									title: 'Recon',
									content: response.out_msg,
									type: 'red',
								});
							}
						}
					})
				},
				cancel: function () {
					$.alert({
						icon: 'fa fa-success',
						title: 'Recon',
						theme: 'dark',
						content: 'Delete Canceled.!',
						type: 'blue',
						animationSpeed: 700,
					});
				},
			}
		});
	}
	function sourcefieldchange() {
		var reconcode = $("#cmbreconname").val();
		$.ajax({
			type: "POST",
			url: '/Rulesetup/rulerecondatasetfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify({ in_recon_code: reconcode }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				var res = JSON.parse(response);
				$.each(res, function (index, item) {
					if (item.dataset_type == "S" && $("#sourcedataset").val()) {
						$("#comdataset").val(item.parent_dataset_code);
					}
				});
			}
		});
	}
</script>
