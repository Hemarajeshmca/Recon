@{
	Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
<!Doctype html>
<html>
<head>
	<title></title>
	<style>
		.selectedDataset{
			font-size: 13px;
			font-weight: 600;
			color: brown;
		}

		.k-link:link, .k-link:visited, .k-nav-current.k-state-hover .k-link {
			color: #fff !important;
		}

		.nav-item.me-2.me-xl-50 {
			margin-right: 33rem !important;
		}

		.error_show {
			color: red;
			margin-left: 10px;
		}

		.k-grid.k-widget {
			height: 360px;
		}

/*		.k-grid-header th.k-header > .k-link {
			width: 100px;
		}*/

		.k-grid-header {
			font-weight: bold;
		}

		.k-state-active {
			display: none;
		}

		.k-content {
			font-weight: normal;
			font-size: 13px;
		}

		.k-widget.k-window {
			padding-top: 35px;
			min-width: 90px;
			min-height: 50px;
			width: 700px !important;
			height: 300px !important;
			top: 180.766px !important;
			/*left: 120px !important;*/
			z-index: 10003;
			left: 300px !important;
		}

		.action-button {
			width: 120px;
			background: #673AB7;
			font-weight: bold;
			color: white;
			border: 0 none;
			border-radius: 0px;
			cursor: pointer;
			padding: 10px 5px;
			margin: 10px 0px 10px 5px;
			float: right;
			border-radius: 20px;
		}

		.action-button-previous {
			width: 100px;
			background: #616161;
			font-weight: bold;
			color: white;
			border: 0 none;
			border-radius: 0px;
			cursor: pointer;
			padding: 10px 5px;
			margin: 10px 5px 10px 0px;
			float: right;
			border-radius: 20px;
		}

		.tooltip-container {
			position: relative;
			display: inline-block;
		}

		.info-icon {
			cursor: pointer;
		}

		.tooltip1 {
			display: none;
			position: absolute;
			background-color: lightslategray;
			color: #fff;
			padding: 10px;
			border-radius: 15px;
			white-space: nowrap;
			z-index: 1;
			top: 100%;
			margin-left: -95px;
			transform: translateX(-50%);
		}

		.tooltip-container:hover .tooltip1 {
			display: block;
		}
	</style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
	<div class="content-wrapper">
		<div class="container-xxl flex-grow-1 container-p-y">
			<div class="card-body" style="margin-top:-12px;height: 84%;">
				<div class="row">
					<div class="nav-align-top mb-3 mt-3">
						<ul class="nav nav-pills mb-2" role="tablist">
							<li class="nav-item">
								<button type="button" id="Datasetlist" disabled
										class="nav-link active"
										role="tab"
										data-bs-toggle="tab"
										data-bs-target="#navs-pills-Datasetlist"
										aria-controls="navs-pills-Datasetlist"
										aria-selected="true">
									Dataset list
								</button>
							</li>
							<li class="nav-item">
								<button type="button" id="DatasetProgress" disabled
										class="nav-link"
										role="tab"
										data-bs-toggle="tab"
										data-bs-target="#navs-pills-DatasetProgress"
										aria-controls="navs-pills-DatasetProgress"
										aria-selected="true">
									Dataset Progress
								</button>
							</li>
						</ul>
						<div class="tab-content" style="box-shadow:none; padding:20px 0px;">
							<div class="tab-pane fade show active" id="navs-pills-Datasetlist" role="tabpanel" >
								<div class="panel panel-default">
									<div class="panel-body" style="padding-left: 20px;padding-right: 20px;">
									<div id="grid_dataset"> </div>
									</div>
									<div class="row">
										<div class="col-sm-4"></div>
										<div class="col-sm-4"></div>
										<div class="col-sm-4">
											<input type="button" name="next" class="next action-button" value="Next" onclick="validateNextdataset();" />											
										</div>
									</div>
								</div>
							</div>
							<div class="tab-pane fade" id="navs-pills-DatasetProgress" role="tabpanel" >
								<div class="panel panel-default">
									<div class="panel-body" style="padding-left: 20px;padding-right: 20px;">
										<div class="selectedDataset" id="selected_dataset_name"></div>
											<div class="row" style="padding-bottom:5px;margin-top:5px;padding-left:30px;padding-right:5px">
												<div class="col-sm-4">
												<label for="" class="form-label">Pipeline<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
													<select id="Pipeline" class="form-select form-control"> </select>
												</div>
												<div class="col-sm-4">
													<form id="theuploadformempff">
														<div class="form-group">
														<label for="Filename" class="form-label">Choose Excel<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
														<input type="file" class="form-control input-lg browse btn btn-primary input-lg" accept=".xlsx" name="File_Import" id="File_Import" style="width: 90%;height: 30px;">
															<label class="col-md-6 control-label" id="FileName" hidden></label>
														</div>
													</form>
												</div>
												<div class="col-sm-2" style="margin-top:29px">
													<label class="form-label"></label>
												<input type="button" onclick="start()" style="background: #175650;border-color: #175650;width:40%; color:#fff;" name="Start" class="btn btn-sm btn-success me-2" value="Start" />
													
												</div>
											</div>
										</div>
									</div>
									<input type="button" name="previous" class="previous action-button-previous" value="Previous" onclick="validatePrevdp();" />
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
	<div class="modal fade" id="infomodal" tabindex="-1" aria-hidden="true">
		<div class="modal-dialog modal-lg" role="document">
			<div class="modal-content">
				<div class="modal-header">
				</div>
				<div class="modal-body" style="margin-top: -26px;">
					<div class="row">
						<div class="col-sm-4">
						</div>
						<div class="col-sm-4">
							<h4 style="font-size: 15px;text-align: center;color: #1a9950;font-weight: 600;">Info</h4>
						</div>
						<div class="col-sm-4">
							<i class="bx bx-x cursor-pointer" data-bs-dismiss="modal" style="color: #000000;float:right"></i>
						</div>
					</div>
					<hr style="margin-top:-1px; width:100%;">
					<div class="container">

						<p><strong>Job Description&nbsp;&nbsp;:&nbsp;</strong><span id="job_desc"></span></p>
						<p><strong>Job Initiated Date-Time&nbsp;&nbsp;:&nbsp;</strong><span id="initated_datetime"></span></p>
						<p><strong>Job Completed Date-Time&nbsp;&nbsp;:&nbsp;</strong><span id="completed_datetime"></span></p>
						<p><strong>Job Initiated By&nbsp;&nbsp;:&nbsp;</strong><span id="initatedby"></span></p>
						<p><strong>Job Status&nbsp;&nbsp;:&nbsp;</strong> <span id="status"></span></p>
						<p><strong>Job Remark&nbsp;&nbsp;:&nbsp;</strong><span id="remarks"></span></p>
					
						</div>
					</div>
					<div class="row">
					<div class="col-sm-4"> </div>
					
					<div class="col-sm-4" style="margin-bottom:30px;float: right;">
						<center><button type="submit" class="btn btn-sm btn-success me-2" data-bs-dismiss="modal" style="background: red;border-color: red;width:40%" onclick="rr1()">Close</button></center>
					</div>
					<div class="col-sm-4"> </div>
				</div>
				</div>
			</div>
		</div>
	
</body>
</html>
<script>
	var selected_dataset = '';
	$(document).ready(function () {
		$("#navhead").text("Dataset Import");
		gridlist();
	});

	function gridlist() {
		grid_dataset_details([]);
		var data = {};
		data.in_user_gid = 0;
		data.in_active_status = '';
		var Context = data;
		$.ajax({
			type: "POST",
			url: '../DataSet/Datasetlistfetch',
			dataType: 'json',
			data: JSON.stringify({ in_user_gid: Context.in_user_gid, in_active_status: Context.in_active_status }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				if (response.length > 0) {
					debugger;
					const activeData = response.filter(item => item.active_status === "Y");

					grid_dataset_details(activeData);
				}
				else {
					grid_dataset_details([]);
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}

		});
	}

	var status_Priority = [];
	function grid_dataset_details(data) {
		try {
			$.each(data, function (index, value) {
				var flag = false;
				$.each(status_Priority, function (sindex, svalue) {
					if (svalue == value.active_status_desc) {
						flag = true;
					}
				});
				if (flag == false) {
					status_Priority.push(value.active_status_desc);
				}
			});
			$("#grid_dataset").kendoGrid({
				dataSource: {
					data: data,
					pageSize: 15,
					schema: {
						model: {
							fields: {
								dataset_id: { type: "string" },
								datasetCode: { type: "string" },
								dataset_name: { type: "string" },
								dataset_category: { type: "string" },
								active_status: { type: "string" },
								active_status_desc: { type: "string" },
								sl_no: {type: "string"},
								last_sync_date: { type: "string" },
								last_sync_status: { type: "string" }
							}
						}
					}
				},
				height: 365,
				groupable: false,
				dataBound: function (e) {
					resultData = e.sender._data;
					var rows = $('#grid_dataset').data('kendoGrid').tbody.children();
					setColor(rows, resultData);
				},
				pageable: {
					refresh: false,
					pageSizes: true,
					buttonCount: 5
				},
				sortable: true,
				selectable: true,
				filterable: true,
				navigatable: true,
				columns: [
				{
					field: "name",
					title: "Action",
					template: "<input id='dataset_selected' onclick='rowselected(this)' name='dataset_code' type='radio'/>",
					width: 40,
					filterable: false,
						attributes: {
							style: "text-align: center;"
						}
				},
				{
					field: "sl_no",
					title: "Sl No",
					width:60,
					attributes: {
						style: "text-align: right;"
					},
					hidden:true,
				},
				{
					field: "dataset_id",
					title: "Row id",
					width: 100,
					hidden: true,
				},

				{
					field: "datasetCode",
					title: "Dataset Code",
					width: 100,
					hidden: true
				},
				{
					field: "dataset_name",
					title: "Dataset Name",
					width: 150,
				},
				{
					field: "dataset_category",
					title: "Category",
					width: 100,
				},
				{
					field: "active_status",
					title: "Status",
					width: 80,
					hidden: true
				},
				{
					field: "active_status_desc",
					title: "Status",
					width: 80,
				},
				{
					field: "last_sync_date",
					title: "Last sync Date",
					width: 100
				},
				{
					field: "last_sync_status",
					title: "Last sync Status",
					width: 100
				},
				{
					field: "In_mode_flag",
					title: "Mode",
					hidden: true
				},{
						field: "Info",
						title: "",
						template: "<a href='' style='cursor:pointer;' onclick='openInfoModel(this)' value='edit' data-bs-toggle='modal'><img src = '../Assets/images/topnotes.png'></a>&nbsp;&nbsp;&nbsp;",
						width:50,
						filterable: false,
						attributes: {
							style: "text-align: center;"
						}

				}],
				editable: false,
			});
			
		}
		catch (err) {
			console.log(err)

		}
	}

	function validateNextdataset(){
		var grid = $("#grid_dataset").data("kendoGrid");
		var checkedrows = $("#dataset_selected:checked", grid.tbody).closest("tr");
		var objpplmapupdlist = [];
		var dropdownid = "";
		for (var i = 0; i < checkedrows.length; i++) {
			selected_dataset = grid.dataItem(checkedrows[i]);
		}
		if (selected_dataset) {
			$("#Datasetlist").removeClass('nav-link active');
			$("#Datasetlist").toggleClass('nav-link');
			$("#navs-pills-DatasetProgress").toggleClass('tab-pane fade active in');
			$("#navs-pills-Datasetlist").toggleClass('tab-pane fade');
			$("#DatasetProgress").removeClass('nav-link');
			$("#DatasetProgress").toggleClass('nav-link active');
			$("#navs-pills-Datasetlist").hide();
			$("#navs-pills-DatasetProgress").show();
			$('#selected_dataset_name').text('Selected Dataset :' + selected_dataset.dataset_name);
			getpipelinelist(selected_dataset.datasetCode);
		} else {
			$.alert({
				title: 'Recon',
				content: "Dataset code not selected",
				type: 'red',
			});
		}

	}

	function rowselected(val){
		debugger;
		console.log(`val`, $("#dataset_selected").val());
	}

	function validatePrevdp(){
		$("#DatasetProgress").removeClass('nav-link active');
		$("#DatasetProgress").toggleClass('nav-link');
		$("#navs-pills-Datasetlist").toggleClass('tab-pane fade active in');
		$("#navs-pills-DatasetProgress").toggleClass('tab-pane fade');
		$("#Datasetlist").removeClass('nav-link');
		$("#Datasetlist").toggleClass('nav-link active');
		$("#navs-pills-DatasetProgress").hide();
		$("#navs-pills-Datasetlist").show();
		$("#FileName").val("");
		$("#File_Import").val("");
		$("#Pipeline").val("");
	}

	function rr1() {
		$("#infomodal").hide();
	}

	function getpipelinelist(dataset_code) {
		debugger;
		$.ajax({
			type: "POST",
			url: '../DataSet/getPipelinelist',
			dataType: 'json',
			data: JSON.stringify({ in_target_dataset_code: dataset_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				debugger;
				if (response) {
					$("#Pipeline").empty();
					$("#Pipeline").append($('<option>', {
						value: "",
						text: "  Select  "
					}));
					$.each(response, function (index, item) {
						$("#Pipeline").append($('<option>', {
							value: item.pipeline_code,
							text: item.pipeline_name
						}));
					});
				} else {

				}
				
			}
		});
	}

	// code to hit API directly
	function start1() {
		debugger;
		var baseurl = '@ViewBag.baseurl';
		var fileName = '';
		var fileType = '';
		var pipeline_code = $("#Pipeline").val();
		var filepath = $("#File_Import").val();
		var fileInput = document.getElementById('File_Import');
		var formData = new FormData();
		formData.append('pipeline_code', pipeline_code);

		if (fileInput.files.length > 0) {
			formData.append('file', fileInput.files[0]);
			fileType = fileInput.files[0].type;
		}
		formData.append('initiated_by', 'Hema');
		$.ajax({
			url: baseurl+'Pipeline/NewScheduler_new',
			type: 'POST',
			data: formData,
			processData: false,
			contentType: false,
			success: function (response) {
			}
		});
	}

	function start() {
		debugger;
		var fileName = '';
		var fileType = '';
		var fileInput = '';
		var pipeline_code = $("#Pipeline").val();
		var filepath = $("#File_Import").val();
		fileInput = document.getElementById('File_Import');
		var formData = new FormData();
		formData.append('pipeline_code', pipeline_code);

		if (fileInput.files.length > 0) {
			formData.append('file', fileInput.files[0]);
			fileType = fileInput.files[0].name;
		}
		formData.append('initiated_by', 'Hema');
		if (pipeline_code && filepath && fileInput && fileType.endsWith('.xlsx')) {
			
			$.alert({
				title: 'Recon',
				content: "Job Initiated Kindly check the Job Status in Utility",
				type: 'green',
			});		
			//window.location.href = "../Datasetfile/Datasetconversion";
			$.ajax({
				url: '../Datasetfile/datasetfile',
				type: 'POST',
				data: formData,
				processData: false,
				contentType: false,
				//success: function (response) {
				//	debugger;
				//	if (!response) {
				//		$.alert({
				//			title: 'Recon',
				//			content: "Something went wrong",
				//			type: 'red',
				//		});
				//	} else {
				//		var res = JSON.parse(response)
				//		$.alert({
				//			title: 'Recon',
				//			content: res[0].out_msg,
				//			type: 'green',
				//		});
				//		$("#FileName").val("");
				//		$("#File_Import").val("");
				//		$("#Pipeline").val("");
				//	}
				//}
			});
		} 
		else if (!pipeline_code) {
						$.alert({
							title: 'Recon',
							content: "Pipeline code is missing",
							type: 'red',
						});
		} 
		else if (!filepath) {
			$.alert({
				title: 'Recon',
				content: "File path is missing",
				type: 'red',
			});

		} else if (!fileInput) {
			$.alert({
				title: 'Recon',
				content: "File is missing",
				type: 'red',
			});
		} else if (!fileType.endsWith('.xlsx')) {
			$.alert({
				title: 'Recon',
				content: "Incorrect File type",
				type: 'red',
			});
			$("#File_Import").val("");
			$("#FileName").val("");
		}
		hideProgress();
	}

	function openInfoModel() {
		debugger;
		var grid = $("#grid_dataset").data("kendoGrid");
		var selectedItem = grid.dataItem(grid.select());
		document.getElementById('job_desc').innerHTML = selectedItem.dataset_name;
		document.getElementById('initated_datetime').innerHTML = selectedItem.lastsync_datetime;
		document.getElementById('completed_datetime').innerHTML = selectedItem.lastsync_datetime;
		document.getElementById('initatedby').innerHTML = selectedItem.in_user_code;
		document.getElementById('status').innerHTML = selectedItem.active_status_desc;
		document.getElementById('remarks').innerHTML = selectedItem.active_status_desc;
		$("#infomodal").modal("show");
	}

	function rowselected(val) {
		$("#infomodal").modal("hide");
	}

</script>
