@{
	Layout = "~/Views/Shared/_LayoutNew.cshtml";
}

<!Doctype html>
<html>
<head>
	<title></title>
	<style>
		.nav-item.me-2.me-xl-50 {
			margin-right: 33rem !important;
		}

		.table:not(.table-dark) th {
			color: #fff !important;
		}
	</style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
	<div class="content-wrapper">
		<div class="container-xxl flex-grow-1 container-p-y">
			<div class="card-body" style="margin-top:-1%;">
				<div class="row" style="margin-top:10px;margin-bottom: 2%;">

				
					<div class="col-md-3">
						<label for="organization" class="form-label">Recon Name</label><br>
						<select id="reconname" class="form-select form-control"> </select>
					</div>
					<div class="col-md-3" style="margin-top: 2%;">
						<button type="button" onclick="generateReport()" class="btn btn-sm save_btn me-2" style="margin-top: 7px">
							Generate Report
						</button> &nbsp;&nbsp;
						
					</div>
					<div class="col-md-3">
					</div>
					<div class="col-md-3">
					</div>

				</div>


				<div class="accordion" id="accordionExample">
					<div class="accordion-item">
						<h2 class="accordion-header" id="headingOne">
							<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
								Attribute Search
							</button>
						</h2>
						<div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
							<div class="accordion-body">
								<div class="row">


									<div class="col-md-3">
										<select id="report_name" onchange="getreportparamlist($('#report_name').val())" class="form-select form-control"> </select>
									</div>
									<div class="col-md-3">
										<select id="report_param" class="form-select form-control"> </select>
									</div>
									<div class="col-md-3">
										<button id="addRowBtn" type="button" onclick="addbtn()" class="btn btn-sm save_btn me-2" style="margin-top: 7px">
											ADD
										</button>
									</div>
									<div class="col-md-3">
									</div>

								</div>

								<div class="row" style="margin-left:0%;width:101%;margin-top:5px;overflow:auto;">
									<table id="submissionTable" class="table table-bordered" style="display:none;width:100%;overflow:auto;">
										<thead>
											<tr style="background-color: rgb(135,46,123);margin-left:1%;">
												<th style="text-align:center;width: 2%;">(</th>

												<th class="box-title" style="width: 5%;">Attributes</th>
												<th style="width: 8%;">Constraints</th>
												<th style="width:5%">Value</th>

												<th style="text-align:center;width: 2%;">)</th>
												<th style="width: 3%;">Joins</th>

												<th style="width:3%">Action</th>
											</tr>
										</thead>

									</table>
								</div>

								@*<div class="row">
									<div id="grid"></div>

								</div>*@

							</div>
						</div>
					</div>
				
				</div>

			</div>
		</div>
	</div>
</body>
</html>	
<script type="text/javascript">
	var counter = 1;
	var clicks = 0;
	$(document).ready(function () {

		$("#navhead").text("Reports");
		kendodate_format();
		getreconlist();
		getreportlist();
		//getQCDdata();
	});

	function getreportparamlist(report_code) {
		var data = {};
		data.in_reportparam_gid = 0;
		data.in_report_code = report_code;
		data.in_action = '';
		$.ajax({
			type: "POST",
			url: "../Reports/getreportparam",
			dataType: "json",
			data: JSON.stringify({ in_reportparam_gid: data.in_reportparam_gid, in_report_code: data.in_report_code, in_action: data.in_action }),
			contentType: 'application/json; charset=utf-8',
			success: function (data) {
				debugger;
				$("#report_param").empty();
				$("#report_param").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(data, function (index, item) {
					$("#report_param").append($('<option>', {
						value: item.reportparam_code,
						text: item.reportparam_value
					}));
				});
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
	}

	function getQCDdata() {
		debugger;	
		var in_master_code = "QCD_RP_CONSTRAINT";
		var in_user_code = "sundar";
		$.ajax({
			type: "POST",
			url: '../Reports/Qcdmaster',
			dataType: 'json',
			data: JSON.stringify({ in_user_code: in_user_code, in_master_code: in_master_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				debugger;
				constraintData = response;
				//var categoriesData = @Html.Raw(Json.Serialize(ViewBag.Categories));
		
				griddata(constraintData);
			}
		});
	}

	function getreportlist() {
		debugger;
		var data = {};
		data.in_user_gid = 0;
		data.in_active_status = '';
		var Context = data;
		$.ajax({
			type: "POST",
			url: '../Reports/ReportList',
			dataType: 'json',
			data: JSON.stringify({}),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				debugger;
				$("#report_name").empty();
				$("#report_name").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(response, function (index, item) {
					$("#report_name").append($('<option>', {
						value: item.report_code,
						text: item.report_desc
					}));
				});
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
	}


	function getreconlist() {
		var data = {};
		data.in_user_gid = 0;
		data.in_active_status = '';
		var Context = data;
		$.ajax({
			type: "POST",
			url: '../Recon/Reconlistfetch',
			dataType: 'json',
			data: JSON.stringify({ in_user_gid: '', in_active_status: '' }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				debugger;
				$("#reconname").empty();
				$("#reconname").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(response, function (index, item) {
					$("#reconname").append($('<option>', {
						value: item.recon_code,
						text: item.recon_name
					}));
				});
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
	}


	function griddata(griddata) {
		debugger;
		var dataSource = new kendo.data.DataSource({
			schema: {
				model: {
					id: "ProductId",
					fields: {
							Attributes: { type: "string" },
							Constraints: { type: "string" },
							Joins: { type: "string" },
							Close: { type: "boolean" },
							Value: { type: "number" },
							Open: { type: "boolean" }
					}
				}
			}
		});

		$("#grid").kendoGrid({
			dataSource: dataSource,
			height: 152,
			columns: [
				{ field: "Attributes", title: "Attributes", width: 100 },
				{ field: "Constraints", title: "Constraints", width: 200,
						editor: function (container, options) {
							// Create a dropdown list for the CategoryId column
						$('<input required data-text-field="masterName" data-value-field="masterSyscode" data-bind="value:' + options.field + '"/>')
								.appendTo(container)
								.kendoDropDownList({
									dataSource: {
									data: griddata
									}
								});
						}
				},
				{ field: "Joins", title: "Joins", width: 100,
					editor: function (container, options) {
						$('<input required data-text-field="masterName" data-value-field="mastercode" data-bind="value:' + options.field + '"/>')
							.appendTo(container)
							.kendoDropDownList({
								dataSource: {
									data: [{ mastercode: "QCD_AND", masterName: "AND" }, { mastercode: "QCD_OR", masterName: "OR" }]
								}
							});
					}
				},
				{ field: "Close", title: ")", width: 50 },
				{ field: "Value", title: "Value", width: 100 },
				{ field: "Open", title: "(", width: 50 },
			
				{ command: ["destroy"], title: "Action", width: 200 }
			],
			editable: "inline",
			save: function (e) {
				// Handle save logic if needed
			}
		});

		//var grid = $("#grid").data("kendoGrid");
		//grid.addRow();
		$("#addRowBtn").on("click", function () {
		debugger;

			var grid = $("#grid").data("kendoGrid");
			grid.addRow();
		});
	}

	function addbtn1()
	{
		debugger;
		var constraintData1='';
		var in_master_code = "QCD_RP_CONSTRAINT";
		var in_user_code = "sundar";
		$.ajax({
			type: "POST",
			url: '../Reports/Qcdmaster',
			dataType: 'json',
			data: JSON.stringify({ in_user_code: in_user_code, in_master_code: in_master_code }),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				debugger;
				constraintData1 = response;
				initializeKendoGrid(constraintData1);

				setTimeout(function () {
					var grid = $("#grid").data("kendoGrid");
					grid.addRow();
				}, 100);
				//var categoriesData = @Html.Raw(Json.Serialize(ViewBag.Categories));

				
			}
		});
	}

	function initializeKendoGrid(constraintData) {
		var dataSource = new kendo.data.DataSource({
			schema: {
				model: {
					id: "ProductId",
					fields: {
						Attributes: { type: "string" },
						Constraints: { type: "string" },
						Joins: { type: "string" },
						Close: { type: "boolean" },
						Value: { type: "number" },
						Open: { type: "boolean" }
					}
				}
			}
		});

		$("#grid").kendoGrid({
			dataSource: dataSource,
			height: 152,
			columns: [
				{ field: "Attributes", title: "Attributes", width: 100 },
				{
					field: "Constraints", title: "Constraints", width: 200,
					editor: function (container, options) {
						$('<input required data-text-field="masterName" data-value-field="masterSyscode" data-bind="value:' + options.field + '"/>')
							.appendTo(container)
							.kendoDropDownList({
								dataSource: {
									data: constraintData
								}
							});
					}
				},
				{
					field: "Joins", title: "Joins", width: 100,
					editor: function (container, options) {
						$('<input required data-text-field="masterName" data-value-field="mastercode" data-bind="value:' + options.field + '"/>')
							.appendTo(container)
							.kendoDropDownList({
								dataSource: {
									data: [{ mastercode: "QCD_AND", masterName: "AND" }, { mastercode: "QCD_OR", masterName: "OR" }]
								}
							});
					}
				},
				{ field: "Close", title: ")", width: 50 },
				{ field: "Value", title: "Value", width: 100 },
				{ field: "Open", title: "(", width: 50 },
				{ command: ["destroy"], title: "Action", width: 200 }
			],
			editable: "inline",
			save: function (e) {
				// Handle save logic if needed
			},
			
		});
	}

	function addbtn(){

		debugger;	
			clicks += 1;
			// document.getElementById("add").innerHTML = clicks;
			debugger;

			$("#submissionTable").show();

			$('<tr id="tablerow' + counter + '" style="margin-left:90px" ><td>' +
			'<input type="checkbox"  id="chkval' + counter + '" style="margin-left:8px;width:22px;  name="checkvalof[' + counter + ']"  value="Y">' +

				
				'</td>' +

				' <td>' +
			'<input type="text"  class="form-control" id="txtorderid' + counter + '" disabled class="text-box single-line" name="ClientSampleID[' + counter + ']" value="" required="required" />' +
			' <input type="text" id="txtorderidone' + counter + '" hidden name="ClientSampleID[' + counter + ']" value="" ;" />' +
				
				'</td>' +

				' <td>' +
			'<select id="contselect' + counter + '"  class="form-control form-select"  name="drpCondition[' + counter + ']" value="" required="required" /></select>' +
				'</td>' +
				' <td>' +
			'<input type="text"  class="form-control" id="txtvalue' + counter + '" class="text-box single-line" name="Valueof[' + counter + ']" value="" required="required" />' +
									
				'</td>' +
				' <td>' +
			'<input type="checkbox"  id="chkvalue' + counter + '" style="margin-left:8px;width:22px;  name="checkvalof[' + counter + ']"  value="Y">' +

				'</td>' +
				' <td>' +
			'<select id="contbtn' + counter + '"  class="text-box single-line form-control form-select" name="jointst[' + counter + ']" value="" required="required" /></select>' +

				//'<input type="checkbox"  id="chkvalue' + counter + '" style="margin-left:8px;width:22px; name="checkvalueof[' + counter + ']"  value="Y">' +
				'</td>' +
				' <td>' +
				'<button type="button"  class="fa fa-trash" style="color:#357ab8;font-size: 12px;margin-left:10px;border:none;" onclick="removeTr(' + counter + ');"></button>' +


				'</td>' +
				//  ' <td>' +
				//'<button type="button" class="btn btn-primary" onclick="ApplyFilter(' + counter + ');">Save</button>' +
				//  '</td>' +
				'</tr>').appendTo('#submissionTable');


			debugger;

			var indexval = counter;
			$('#contselect' + indexval).append('<option value="' + "Is equal to" + '">' + "Is equal to" + '</option>');
			$('#contselect' + indexval).append('<option value="' + "Is not equal to" + '">' + "Is not equal to" + '</option>');
			$('#contselect' + indexval).append('<option value="' + "Begins with" + '">' + "Begins with" + '</option>');
			$('#contselect' + indexval).append('<option value="' + "End with" + '">' + "End with" + '</option>');
			$('#contselect' + indexval).append('<option value="' + "Contains" + '">' + "Contains" + '</option>');
			$('#contselect' + indexval).append('<option value="' + "Is greater Than" + '">' + "Is greater Than" + '</option>');
			$('#contselect' + indexval).append('<option value="' + "Is less than" + '">' + "Is less than" + '</option>');
			$('#contselect' + indexval).append('<option value="' + "Is less than or equal to" + '">' + "Is less than or equal to" + '</option>');
			$('#contselect' + indexval).append('<option value="' + "Is greater than or equal to" + '">' + "Is greater than or equal to" + '</option>');
			$('#contselect' + indexval).append('<option value="' + "Does not contains" + '">' + "Does not contains" + '</option>');
			$('#contbtn' + indexval).append('<option value="' + "AND" + '">' + "AND" + '</option>');
			$('#contbtn' + indexval).append('<option value="' + "OR" + '">' + "OR" + '</option>');
			$('#contbtn' + indexval).append('<option value="' + "" + '">' + "" + '</option>');

			$('#txtorderid' + indexval).val($("#report_param").find(":selected").text());
			$('#txtorderidone' + indexval).val($("#report_param").val());
			counter++;

			//var res = $('#counttxt').val(counter);
			//var chkcount = $('#')
			//rks = $('#txtvalue' + indexval).text();

			return false;
		}

	function removeTr(index) {
		debugger;
		if (counter > 1) {
			$('#tablerow' + index).remove();
			counter -= 1;
			clicks -= 1;
		}
		return false;
	}

	function generateReport() {
		var data = {};
		 data.in_recon_code = $("#reconname").val();
		 data.in_report_code = $("#report_name").val();
		 data.in_report_param = $("#report_param").find(":selected").text();
		 data.reportcondition ='AND';
		 data.in_ip_addr = 'localhost';
		 data.in_outputfile_flag = true;
		 data.in_user_code = 'Hema';
		for (var i=1; i<=clicks;i++)
		{
			var openpara = $("#chkval" + i).is(":checked");
			var attributes = $("#txtorderidone" + i).val();
			var constraints = $("#contselect"+i).val();
			var value = $("#txtvalue" + i).val();
			var closepara = $("#chkvalue" + i).is(":checked");
			var joins = $("#contbtn" + i).val();
			var joinsvalidation = $("#contbtn" + clicks).val();

			if (!value) {
				$.alert({
					title: 'Recon',
					content: 'Please select value field',
					type: 'red',
				});

				return false;
			}
			if (i != clicks) {
				if (joins == '') {
					$.alert({
						title: 'Recon',
						content: 'Please select joins',
						type: 'red',
					});

					return false;
				}
			}


			if(joinsvalidation!='')
			{
				$.alert({
					title: 'Recon',
					content: 'Please select last row joins as blank',
					type: 'red',
				});

				return false;
			}

		

			

			if (constraints.toLowerCase() == "is equal to") {
				if (openpara == true && closepara == true) {

					data.reportcondition += " ( " + attributes + " = '" + value.toString() + "' " + ")" + joins;

			}
				else if (openpara == true) {

					data.reportcondition += " (" + attributes + " = '" + value.toString() + "' " + joins;

			}
				else if (closepara == true) {
					data.reportcondition += " " + attributes + " = '" + value.toString() + "' " + ")" + joins;
			}
			else {
					data.reportcondition += " " + attributes + " = '" + value.toString() + "' " + joins;
			}
		}
			else if (constraints.toLowerCase() == "is not equal to") {
				if (openpara == true && closepara == true) {

					data.reportcondition += " ( " + attributes + " != '" + value.toString() + "' " + ")" + joins;

				}
				else if (openpara == true) {

					data.reportcondition += " (" + attributes + " != '" + value.toString() + "' " + joins;

				}
				else if (closepara == true) {
					reportcondition += " " + attributes + " != '" + value.toString() + "' " + ")" + joins;
				}
				else {
					data.reportcondition += " " + attributes + " != '" + value.toString() + "' " + joins;
				}
			}
			else if (constraints.toLowerCase() == "begins with") {
				if (openpara == true && closepara == true) {

					data.reportcondition += " ( " + attributes + " like '" + value.toString() + '%' + "' " + ")" + joins;

				}
				else if (openpara == true) {

					data.reportcondition += " (" + attributes + " like '" + value.toString() + '%' + "' " + joins;

				}
				else if (closepara == true) {
					data.reportcondition += " " + attributes + " like '" + value.toString() + '%' + "' " + ")" + joins;
				}
				else {
					data.reportcondition += " " + attributes + " like'" + value.toString() + '%' + "' " + joins;
				}
			}
			else if (constraints.toLowerCase() == "end with") {
				if (openpara == true && closepara == true) {

					data.reportcondition += " ( " + attributes + " like '" + '%' + value.toString() + "' " + ")" + joins;

				}
				else if (openpara == true) {

					data.reportcondition += " (" + attributes + " like '" + '%' + value.toString() + "' " + joins;

				}
				else if (closepara == true) {
					data.reportcondition += " " + attributes + " like '" + '%' + value.toString() + "' " + ")" + joins;
				}
				else {
					data.reportcondition += " " + attributes + " like '" + '%' + value.toString() + "' " + joins;
				}
			}

			else if (constraints.toLowerCase() == "contains") {
				if (openpara == true && closepara == true) {

					data.reportcondition += " ( " + attributes + " like '" + '%' + value.toString() + '%' + "' " + ")" + joins;

				}
				else if (openpara == true) {

					data.reportcondition += " (" + attributes + " like '" + '%' + value.toString() + '%' + "' " + joins;

				}
				else if (closepara == true) {
					data.reportcondition += " " + attributes + " like '" + '%' + value.toString() + '%' + "' " + ")" + joins;
				}
				else {
					data.reportcondition += " " + attributes + " like '" + '%' + value.toString() + '%' + "' " + joins;
				}
			}

			else if (constraints.toLowerCase() == "does not contains") {
				if (openpara == true && closepara == true) {

					data.reportcondition += " ( " + attributes + " not like '" + '%' + value.toString() + '%' + "' " + ")" + joins;

				}
				else if (openpara == true) {

					data.reportcondition += " (" + attributes + "not like '" + '%' + value.toString() + '%' + "' " + joins;

				}
				else if (closepara == true) {
					data.reportcondition += " " + attributes + "not like '" + '%' + value.toString() + '%' + "' " + ")" + joins;
				}
				else {
					data.reportcondition += " " + attributes + "not like '" + '%' + value.toString() + '%' + "' " + joins;
				}
			}
			else if (constraints.toLowerCase() == "is greater than") {
				if (openpara == true && closepara == true) {

					data.reportcondition += " ( " + attributes + " > '" + value.toString() + "' " + ")" + joins;

				}
				else if (openpara == true) {

					data.reportcondition += " (" + attributes + "> '" + value.toString() + "' " + joins;

				}
				else if (closepara == true) {
					data.reportcondition += " " + attributes + "> '" + value.toString() + "' " + ")" + joins;
				}
				else {
					data.reportcondition += " " + attributes + "> '" + value.toString() + "' " + joins;
				}
			}
			else if (constraints.toLowerCase() == "is less than") {
				if (openpara == true && closepara == true) {

					data.reportcondition += " ( " + attributes + " < '" + value.toString() + "' " + ")" + joins;

				}
				else if (openpara == true) {

					data.reportcondition += " (" + attributes + "< '" + value.toString() + "' " + joins;

				}
				else if (closepara == true) {
					data.reportcondition += " " + attributes + "< '" + value.toString() + "' " + ")" + joins;
				}
				else {
					data.reportcondition += " " + attributes + "< '" + value.toString() + "' " + joins;
				}
			}
			else if (constraints.toLowerCase() == "is greater than or equal to") {
				if (openpara == true && closepara == true) {

					data.reportcondition += " ( " + attributes + " >= '" + value.toString() + "' " + ")" + joins;

				}
				else if (openpara == true) {

					data.reportcondition += " (" + attributes + ">= '" + value.toString() + "' " + joins;

				}
				else if (closepara == true) {
					data.reportcondition += " " + attributes + ">= '" + value.toString() + "' " + ")" + joins;
				}
				else {
					data.reportcondition += " " + attributes + ">= '" + value.toString() + "' " + joins;
				}
			}
			else if (constraints.toLowerCase() == "is less than or equal to") {
				if (openpara == true && closepara == true) {

					data.reportcondition += " ( " + attributes + " <= '" + value.toString() + "' " + ")" + joins;

				}
				else if (openpara == true) {

					data.reportcondition += " (" + attributes + "<= '" + value.toString() + "' " + joins;

				}
				else if (closepara == true) {
					data.reportcondition += " " + attributes + "<= '" + value.toString() + "' " + ")" + joins;
				}
				else {
					data.reportcondition += " " + attributes + "<= '" + value.toString() + "' " + joins;
				}
			}
		}

		if (data.in_recon_code && data.in_report_code && data.in_report_param && data.reportcondition != 'AND' && data.in_ip_addr) {
			$.ajax({
				type: "POST",
				url: '../Reports/generateReport',
				dataType: 'json',
				async: false,
				data: JSON.stringify(data),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					var res = JSON.parse(response);
					
					if(res.length > 0) {
						var data = res[0];
						if (data.out_result != '0') {
							$.alert({
								title: 'Recon',
								content: data.out_msg,
								type: 'green',
							});

						} else {
							$.alert({
								title: 'Recon',
								content: data.out_msg,
								type: 'red',
							});
					}
					} else {
						$.alert({
							title: 'Recon',
							content: "Something Went Wrong ..!",
							type: 'red',
						});
					}
				},
				error: function (er) {
					debugger;
					alert(er)
					console.log(er)
				}
			});
		} else if (!data.in_recon_code) {
			$.alert({
				title: 'Recon',
				content: 'Please choose Recon',
				type: 'red',
			});
		} else if (!data.in_report_code) {
			$.alert({
				title: 'Recon',
				content: 'Please choose Report',
				type: 'red',
			});
		} else if (!data.in_report_param) {
			$.alert({
				title: 'Recon',
				content: 'Please choose Report value',
				type: 'red',
			});
		} else if (!data.reportcondition == 'AND') {
			$.alert({
				title: 'Recon',
				content: 'Please add any one conditions',
				type: 'red',
			});
		} else if (!data.in_ip_addr) {
			$.alert({
				title: 'Recon',
				content: 'IP address is missing',
				type: 'red',
			});
		}
	}

	//function griddata() {
	//	$("#grid").kendoGrid({
	//		dataSource: {
	//			data: @Html.Raw(Json.Serialize(Model)),
	//			pageSize: 10,
	//			schema: {
	//				model: {
	//					id: "ProductId",
	//					fields: {
	//						Attributes: { type: "string" },
	//						Constraints: { type: "string" },
	//						Joins: { type: "string" },
	//						close: { type: "boolean" },
	//						Value: { type: "number" },
	//						open: { type: "boolean" }
	//					}
	//				}
	//			}
	//		},
	//		height: 550,
	//		sortable: true,
	//		pageable: {
	//			input: true,
	//			numeric: false
	//		},
	//		columns: [
	//			{ field: "Attributes", title: "Attributes", width: 100 },
	//			{ field: "Constraints", title: "Constraints", width: 200 },
	//			{ field: "Price", title: "Price", width: 100 },
	//			{ command: ["edit", "destroy"], title: "&nbsp;", width: 200 }
	//		],
	//		editable: "inline", // Enables inline editing
	//		save: function (e) {
	//			// Implement logic to save the edited data
	//			// e.model will contain the updated data
	//		}
	//	});
	//}

</script>

