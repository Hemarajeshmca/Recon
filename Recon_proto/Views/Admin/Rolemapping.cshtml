@{
	ViewBag.title = "Role Mapping";
	Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
<!Doctype html>
<html>
<head>
	<title></title>
	<style>
		.k-link:link, .k-link:visited, .k-nav-current.k-state-hover .k-link {
			color: #fff !important;
		}
		.nav-item.me-2.me-xl-50 {
			margin-right: 33rem !important;
		}

		.error_show {
			color: red;
			margin-left: 10px;
		}

		.k-grid.k-widget {
			height: 360px;
		}

		.k-grid-header th.k-header > .k-link {
			width: 100px;
		}

		.k-grid-header {
			font-weight: bold;
		}

		.k-state-active {
			display: none;
		}

		.k-content {
			font-weight: normal;
			font-size: 13px;
		}

		.k-widget.k-window {
			padding-top: 35px;
			min-width: 90px;
			min-height: 50px;
			width: 700px !important;
			height: 300px !important;
			top: 180.766px !important;
			/*left: 120px !important;*/
			z-index: 10003;
			left: 300px !important;
		}
	</style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
	<div class="content-wrapper">
		<div class="container-xxl flex-grow-1 container-p-y">
			<div class="card-body" style="margin-top:-12px;height: 82%;">
				<form method="post" class="form-horizontal" id="form" enctype="multipart/form-data">
					<div class="row" style="margin-top: -18px;margin-bottom: 10px;">
						<div class="col-sm-6">
							<div class="row">
								<div class="col-sm-4">
									<label for="lbldatasetcode" class="form-label">Role Code</label>
									<input class="form-control" type="text" id="txtrolecode" disabled>
									<input class="form-control" type="text" id="txtrolegid" hidden>
								</div>
								
								<div class="col-sm-4">
									<label for="lblmode" class="form-label">Mode</label>
									<input class="form-control" type="text" id="txtmode" value="Update" disabled>
								</div>
								<div class="col-sm-4">
									<label for="lblstatus" class="form-label">Status</label><br>
									<input class="form-control" type="text" id="txtstatus" value="Active" disabled>
								</div>
							</div>
							
						</div>
						<div class="col-sm-4"> </div>
						<div class="col-sm-1" style="margin-top:20px;">
							<button type="button" id="savesubmit" class="btn btn-sm save_btn me-2" onclick="save_rolemap()">Save</button>&nbsp;&nbsp;&nbsp;
						</div>
						<div class="col-sm-1" style="margin-top:20px;">
							<center>
								<a href="~/Admin/Role"><img style="cursor:pointer;" src="~/Content/images/toplist.png"></a>&nbsp;&nbsp;&nbsp;&nbsp;
							</center>
						</div>
					</div>
				
					<div class="row">
						<div class="col-sm-4">
							<label for="lblstatus" class="form-label">Role Name</label><br>
							<input class="form-control" type="text" id="txtrolename" value="Active">
						</div>
					</div>
					
					<div class="row" style="margin-top:20px;">
						<div class="col-xs-12">
							<div id="Maingrid">
							</div>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>
</body>
</html>
<script>
	var checkedIds = {};
	$(document).ready(function () {
		$("#txtrolecode").val("0");
		$("#txtrolegid").val("0");
		$("#navhead").text("Role Mapping");
		fetchroleaccess();
	});

	function fetchroleaccess() {
		var getls_pageList = getlocalStorage("ls_pageList");
		if ((getls_pageList != "" && getlocalStorage('btn_clk_val') == "Edit" || getlocalStorage('btn_clk_val') == "View")) {
				var data = getlocalStorage("ls_pageList");
				var in_role_code = data.role_code;
				$("#txtrolecode").val(data.role_code);
				$("#txtrolename").val(data.role_name);
				$("#txtrolegid").val(data.role_gid);
			if (getlocalStorage('btn_clk_val') == "Edit") {
				$("#txtmode").val("Modify");
			} else if (getlocalStorage('btn_clk_val') == "View") {
				$("#txtmode").val("View");
				$("#savesubmit").hide();
			}			
		} else if (getlocalStorage('btn_clk_val') == "Create" && ($("#txtrolecode").val() == '0' || $("#txtrolecode").val() == 0)) {
			$("#txtrolename").val("");
			$("#txtmode").val("Create");
			$("#txtstatus").val("Active");	
			$("#txtrolegid").val("0");
		} if ((getls_pageList == "" && getlocalStorage('btn_clk_val') == "Create")) {
			in_role_code = $("#txtrolecode").val();
		}
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
				type: "POST",
				url: '../Admin/rolefetch',
				dataType: 'json',
				async: false,
			data: JSON.stringify({ in_role_code: in_role_code ? in_role_code : '', in_user_code: in_user_code }),
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					var data = JSON.parse(response)
					if (data.length > 0) {
						//loadGrid(data);
						grid_datasetfield(data);
					if ($("#txtmode").val() == 'Create' && ($("#txtrolecode").val() != '0' || $("#txtrolecode").val() != 0)) {
						saveroleaccess();
					}
					}
				},
				error: function (er) {
					console.log(er)
				}
			});
	}

	function grid_datasetfield(data) {
		var columns = [];
		var chkval = data;
		var arr = [];
		$.each(chkval, function (i, e) {
			$.each(e, function (key, val) {
				arr.push(val);
			});

		});

		if (arr == "No Records Found!" || arr == "Error in Data!") {
			$.alert({
				title: ' ',
				content: 'No Records found..!',
				type: 'blue',
			});
			return false;
		}

		var i = 0;
		var entryIndex = "entries[" + i + "]";
		var m = 0;
		var disabledflag = "";
		if ("@ViewBag.mode_flag" == "V") {
			disabledflag = "disabled";
		}
		for (var key in data[0]) {
			try {

				if (key == "Add" || key == "Modify" || key == "View" || key == "Download" || key == "Deny" || key == 'Delete' || key == 'Process') {
					columns.push({
						field: entryIndex,
						title: key,
						attributes: { style: "text-align: center" },
						template: '<input type="checkbox"  class="form-check-input ' + key + '" name="checkbox" id="attributecheckbox_' + key + '" value="Y"  onchange = "selectRowchild(this,' + m + ')"  ' + disabledflag + '/> ',
						width: "80px",
						filterable: false,
						// lockable: false
					});
				}
				else if (key == "usergrp_name" || key == "usergrp_stat") {
					columns.push({
						field: entryIndex,
						title: key,
						type: 'string',
						hidden: true
					});
				}
				else if (key == "rolemenu_rowid" || key == "menu_gid" || key == "menu_code") {
					columns.push({
						field: entryIndex,
						title: key,
						type: 'number',
						hidden: true
					});
				}

				else {
					columns.push({
						field: entryIndex,
						title: key,
						type: 'string',
					});
				}
			}
			catch (e) {
				columns.push({
					field: entryIndex,
					title: key,
					width: "150px",
					type: 'string'
				});
			}

			i = i + 1;
			m = m + 1;
			entryIndex = "entries[" + i + "]";
		}
		var rows = [];
		var data1 = data;
		$.each(data1, function (i, e) {
			var entryArray = [];
			$.each(e, function (key, val) {
				entryArray.push(val);
			});
			rows.push(kendo.observable({
				entries: entryArray
			}));
		});
		var viewModel = kendo.observable({
			gridRows: rows
		});

		var configuration = {
			height: "343px",
			dataBound: onDataBound,
			editable: false,
			sortable: true,
			scrollable: false,
			filterable: true,
			pagable: false,
			resizable: true,
			selectable: "false",
			columns: columns,
			rows: viewModel
		};

		$("#example").remove();
		$('#Maingrid').append('<div id="example" class="table-responsive text-nowrap" id="chk1"><table id="grid" data-bind="source: gridRows" class="table table-sm" style="width:100%;height:auto;line-height:1em;font-size:12px;"></table></div>');
		var timeEditGrid = $("#grid").kendoGrid(configuration).data("kendoGrid");
		kendo.bind($("#grid"), viewModel);
		var grid = $("#grid").data("kendoGrid");
	}

	function selectRowchild(tog_, sel_) {		
		var grid1 = $("#grid").data("kendoGrid");
		var checked = tog_.checked,
			row = $(tog_).closest("tr"),
			gridss = $("#grid").data("kendoGrid"),
			dataItem = gridss.dataItem(row);
		if (checked) {
			dataItem.entries[sel_] = "Y";
			if (sel_ == "9") {
				dataItem.entries[3] = "N";
				dataItem.entries[4] = "N";
				dataItem.entries[5] = "N";
				dataItem.entries[6] = "N";
				dataItem.entries[7] = "N";
				dataItem.entries[8] = "N"
				denyAll("Deny", dataItem.entries[0]);
			}
			else {
				dataItem.entries[9] = "N";
				denyAll("Allow", dataItem.entries[0]);
			}
		}
		else {
			dataItem.entries[sel_] = "N";
			dataItem.entries[9] = "Y";
			var view = $("#grid").data("kendoGrid").dataSource.view();
			var $grid = $("#grid");
			for (var i = 0; i < view.length; i++) {
				if (view[i].entries[0] == dataItem.entries[0]) {
					if (view[i].entries[3] == "N" && view[i].entries[4] == "N" && view[i].entries[5] == "N" && view[i].entries[6] == "N" && view[i].entries[7] == "N" && view[i].entries[8] == "N") {
						$grid.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Deny")
							.prop("checked", "checked");
						}
				}
			}
		}
	}
	
	function onDataBound(e) {
		var checked = [];
		for (var i in checkedIds) {
			if (checkedIds[i]) {
				checked.push(i);
			}
		}
		var view = this.dataSource.view();
		for (var i = 0; i < view.length; i++) {
			if (view[i].entries[3] == "Y") {
				this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Add")
					.attr("checked", "checked");
			}
			if (view[i].entries[4] == "Y") {
				this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Modify")
					.attr("checked", "checked");
			}
			if (view[i].entries[5] == "Y") {
				this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.View")
					.attr("checked", "checked");
			}
			if (view[i].entries[6] == "Y") {
				this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Download")
					.attr("checked", "checked");
			}
			if (view[i].entries[7] == "Y") {
				this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Delete")
					.attr("checked", "checked");
			}
			if (view[i].entries[8] == "Y") {
				this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Process")
					.attr("checked", "checked");
			}
			if (view[i].entries[9] == "y" || view[i].entries[9] == "Y") {
				this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Deny")
					.attr("checked", "checked");
			}
		}
	}

	function denyAll(perm, menugid) {
		var view = $("#grid").data("kendoGrid").dataSource.view();
		var $grid = $("#grid"); // Define the $grid variable here to access the Kendo UI Grid
		if (perm == "Deny") {
			for (var i = 0; i < view.length; i++) {
				if (view[i].entries[9] == "Y") {
					$grid.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Deny")
						.prop("checked", true);

					// Reset other checkboxes to "false" in the same row
					$grid.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Add")
						.prop("checked", false);

					$grid.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Modify")
						.attr("checked", false);

					$grid.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.View")
						.attr("checked", false);

					$grid.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Download")
						.attr("checked", false);

					$grid.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Delete")
						.attr("checked", false);

					$grid.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Process")
						.attr("checked", false);
					
				}
			
			}
		}
		else {

			for (var i = 0; i < view.length; i++) {
				//menugid
				if (view[i].entries[0] == menugid) {
					if (view[i].entries[3] == "Y" || view[i].entries[4] == "Y" || view[i].entries[5] == "Y" || view[i].entries[6] == "Y" || view[i].entries[7] == "Y" || view[i].entries[8] == "Y") {
						$grid.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Deny")
							.prop("checked", false);
					}
				}
			}
		}
	}

	function save_rolemap() {
		if ($("#txtmode").val() == 'Create' && $("#txtrolename").val() == "") {
			$.alert({
				title: 'Recon',
				content: 'Role Name is missing',
				type: 'red',
			});
		} else if ($("#txtmode").val() != 'Create' && ($("#txtrolename").val() == "" || $("#txtrolecode").val() == "")) {
			$.alert({
				title: 'Recon',
				content: 'Role Name is missing',
				type: 'red',
			});
		}

		try {
			var rolecode = ($("#txtrolecode").val() == '0' || $("#txtrolecode").val() == 0) ? '0' : $("#txtrolecode").val();
			var rolename = $("#txtrolename").val();
			var status = 'Y';
			var rolegid = $("#txtrolegid").val();
			var action_by = sessionStorage.getItem("usrname");
			var action = ($("#txtrolecode").val() == '0' || $("#txtrolecode").val() == 0) ? 'INSERT' : 'UPDATE'
				$.ajax({
				type: "POST",
				url: '../Admin/rolesave',
				dataType: 'json',
				data: JSON.stringify({ in_role_gid: rolegid, in_role_code: rolecode, in_role_name: rolename, in_active_status: 'Y', in_active_reason: '', in_action: action, action_by: action_by }),
				contentType: 'application/json; charset=utf-8',
				success: function (res) {
					if (res) {
						var response = JSON.parse(res);
						if (response[0].out_result == "1") {
							$("#txtrolecode").val(response[0].in_role_code);
							$("#txtrolegid").val(response[0].in_role_gid);
							saveroleaccess();
							//if ($("#txtmode").val() == 'Edit' || $("#txtmode").val() == 'View') {
							//	fetchroleaccess();
							//}
						}
						else {
							$.alert({
								title: 'Recon',
								content: response[0].out_msg,
								type: 'green',
							});
						}
					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}
			});
		}
		catch (e) {
			console.log(e)
		}


	}

	function saveroleaccess() {
		var modelobj = {};
		var modelArr = [];
		var displayedData = $("#grid").data().kendoGrid.dataSource.view();		
		for (var i = 0; i < displayedData.length; i++) {
			modelobj = {
				in_role_gid: displayedData[i].entries[0],
				in_role_code: $("#txtrolecode").val(),
				in_menu_code: displayedData[i].entries[10],
				in_add_flag: displayedData[i].entries[3],
				in_modify_flag: displayedData[i].entries[4],
				in_view_flag: displayedData[i].entries[5],
				in_download_flag: displayedData[i].entries[6],
				in_deleteflag: displayedData[i].entries[7],
				in_process_flag: displayedData[i].entries[8],
				in_deny_flag: displayedData[i].entries[9],
				in_delete_flag: 'N',
				in_active_status: 'Y',
				in_action_by: sessionStorage.getItem("usrname")
			}
			modelArr.push(modelobj);
		}
		var displayedDataAsJSON = JSON.stringify(modelArr);
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			url: '@Url.Action("saveRoleAccess", "Admin")',
			type: "post",
			data: JSON.stringify({ roledetails: displayedDataAsJSON, in_user_code: in_user_code }),
			contentType: "application/json",
			success: function (data) {
				var result = JSON.parse(data);
				if (result[0].out_result == 1 || result[0].out_result == "1") {
					$.alert({
						title: 'Recon',
						content: result[0].out_msg,
						type: 'green',
					});
					if($("#txtmode").val() == 'Create' && $("#txtrolegid") != '0'){
						$("#txtmode").val('Edit');
						$("#txtstatus").val("Active");
						fetchroleaccess();
					}
					//setTimeout(function () {
					//	window.location.reload(1);
					//}, 2500);
				} else {
					$.alert({
						title: 'Recon',
						content: 'Something went wrong..! Please try after sometime..!',
						type: 'red',
					});
					//setTimeout(function () {
					//	window.location.reload(1);
					//}, 2500);
				}
			},
			error: function (er) {
				$.alert({
					title: 'Recon',
					content: 'Role Mapping Failed.!',
					type: 'green',
				});
			}
		});
	}

</script>


