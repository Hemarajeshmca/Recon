@{
	ViewBag.title = "Undo KO by Rule";
	Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
<!Doctype html>
<html>
<head>
	<title></title>
	<style>
		.selectedDataset {
			font-size: 13px;
			font-weight: 600;
			color: brown;
		}

		/*  .k-link:link, .k-link:visited, .k-nav-current.k-state-hover .k-link {
					color: #fff !important;
				}*/

		.k-grid-header th.k-header > .k-link {
			color: white !important;
		}

		.nav-item.me-2.me-xl-50 {
			margin-right: 33rem !important;
		}

		.error_show {
			color: red;
			margin-left: 10px;
		}

		/*	.k-grid.k-widget {
											height: 360px;
										}*/

		/*		.k-grid-header th.k-header > .k-link {
											width: 100px;
										}*/

		.k-grid-header {
			font-weight: bold;
		}

		table {
			border: 1px solid #C5C5C5 !important;
		}

		.k-grid-content {
			overflow-x: hidden;
		}
		.k-state-active {
			display: none;
		}

		.k-content {
			font-weight: normal;
			font-size: 13px;
		}

		.k-widget.k-window {
			padding-top: 35px;
			min-width: 90px;
			min-height: 50px;
			width: 700px !important;
			height: 300px !important;
			top: 180.766px !important;
			/*left: 120px !important;*/
			z-index: 10003;
			left: 300px !important;
		}

		.action-button {
			width: 120px;
			background: #673AB7;
			font-weight: bold;
			color: white;
			border: 0 none;
			border-radius: 0px;
			cursor: pointer;
			padding: 10px 5px;
			margin: 10px 0px 10px 5px;
			float: right;
			border-radius: 20px;
		}

		.action-button-previous {
			width: 100px;
			background: #616161;
			font-weight: bold;
			color: white;
			border: 0 none;
			border-radius: 0px;
			cursor: pointer;
			padding: 10px 5px;
			margin: 10px 5px 10px 0px;
			float: right;
			border-radius: 20px;
		}

		.tooltip-container {
			position: relative;
			display: inline-block;
		}

		.info-icon {
			cursor: pointer;
		}

		.tooltip1 {
			display: none;
			position: absolute;
			background-color: lightslategray;
			color: #fff;
			padding: 10px;
			border-radius: 15px;
			white-space: nowrap;
			z-index: 1;
			top: 100%;
			margin-left: -95px;
			transform: translateX(-50%);
		}

		.tooltip-container:hover .tooltip1 {
			display: block;
		}
	</style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
	<div class="content-wrapper">
		<div class="container-xxl flex-grow-1 container-p-y">
			<div class="card-body" style="margin-top:-12px;height: 84%;">
				<div class="row" style="margin-top: -19px;">
					<div class="col-sm-3">
						<label for="" class="form-label">Recon Name&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
						<select id="cmbreconname" class="form-select form-control" onchange="onc()">
						</select>
					</div>
					<div class="col-md-3">
						<label for="" class="form-label">Initiated From Date</label>
						<div>
							<input class="cusDate" data-role='datepicker' id="initiated_from" name="initiated_from" style="width:100%" />
							<span data-for='valid' class='k-invalid-msg'></span>
						</div>
					</div>
					<div class="col-md-3">
						<label class="form-label"> Initiated To Date </label>
						<div>
							<input class="cusDate" data-role='datepicker2' id="initiated_to" name="initialed_to" style="width:100%" />
							<span data-for='valid' class='k-invalid-msg'></span>
						</div>
					</div>
					<div class="col-md-2" style="margin-top: 2.5%;">
						<button type="submit" onclick="showjob()" class="btn btn-sm me-2 save_btn">
							Search
						</button>
					</div>
				</div>


				<div class="row">
					<div class="nav-align-top mb-3 mt-3">
						<ul class="nav nav-pills mb-2" role="tablist">
							<li class="nav-item">
								<button type="button" id="Joblist" disabled
										class="nav-link active"
										role="tab"
										data-bs-toggle="tab"
										data-bs-target="#navs-pills-Joblist"
										aria-controls="navs-pills-Joblist"
										aria-selected="true">
									Job
								</button>
							</li>
							<li class="nav-item">
								<button type="button" id="RuleList" disabled
										class="nav-link"
										role="tab"
										data-bs-toggle="tab"
										data-bs-target="#navs-pills-RuleList"
										aria-controls="navs-pills-RuleList"
										aria-selected="true">
									Rule
								</button>
							</li>
						</ul>
						<div class="tab-content" style="box-shadow:none; padding:20px 0px;">
							<div class="tab-pane fade show active" id="navs-pills-Joblist" role="tabpanel">
								<div class="panel panel-default">
									<div class="panel-body" style="margin-top:-15px;">
										<div id="grid_job"> </div>
									</div>
									<div class="row">
										<div class="col-sm-4"></div>
										<div class="col-sm-4"></div>
										<div class="col-sm-4">
											<input type="button" name="next" class="next action-button" value="Next" onclick="validateNextdataset();" />
										</div>
									</div>
								</div>
							</div>
							<div class="tab-pane fade" id="navs-pills-RuleList" role="tabpanel">
								<div class="panel panel-default">
									<div class="panel-body" style="margin-top:-15px;">
										<div class="col-md-12" style="padding-bottom:5px;margin-top:5px;padding-right:5px">
											<div id="grid_rule"></div>
										</div>
									</div>
								</div>

								<div style="float:right !important;">
									<button type="button" style="padding: 10px 5px; margin: 10px 5px 10px 0px;  width: 100px;border-radius: 20px;font-weight: bold;font-size: 14px;" onclick="undoRule()" class="btn btn-sm me-2 save_btn">
										Undo
									</button>
									<input type="button" name="previous" class="previous action-button-previous" value="Previous" onclick="validatePrevdp();" />

								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

</body>
</html>
<script>
	var selected_reconCode = '';
	var selected_ruleGid = '';
	$(document).ready(function () {
		$("#navhead").text("Undo KO by Rule");
		kendodate_format();
		getReconName();
		undojob_grid([]);
		undorule_grid([]);
	});

	function getReconName() {
		var data = {};		
		data.in_user_gid = 0;
		data.in_active_status = '';
		data.in_user_code = sessionStorage.getItem("usrname");
		var Context = data;
		$.ajax({
			type: "POST",
			url: '../Recon/Reconlistfetch',
			dataType: 'json',
			async: false,
			data: JSON.stringify(data),
			contentType: 'application/json; charset=utf-8',
			success: function (response) {
				var res = JSON.parse(response);
				$("#cmbreconname").empty();
				$("#cmbreconname").append($('<option>', {
					value: "",
					text: "  Select  "
				}));
				$.each(res, function (index, item) {
					if (item.active_status == 'Y') {
						$("#cmbreconname").append($('<option>', {
							value: item.recon_code,
							text: item.recon_name
						}));
					}
				});
				if (sessionStorage.getItem("reconcode") != null) {
					$("#cmbreconname").val(sessionStorage.getItem("reconcode"));
					jQuery('#cmbreconname').trigger("change");
				}
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}
		});
	}
	function onc() {
		if ($("#cmbreconname").val() != '') {
			sessionStorage.setItem("reconcode", $("#cmbreconname").val());
			sessionStorage.setItem("reconname", $("#cmbreconname :selected").text());
			setcon();
		}
	}
	function showjob() {

		var reconcode = $("#cmbreconname").val();
		var fromDate = validateDateFormat($("#initiated_from").val());
		var toDate = validateDateFormat($("#initiated_to").val());
		if (reconcode && fromDate && toDate) {
			var period_from = $("#initiated_from").val();
			var ts = period_from.split("/");
			var pr = ts[2] + "-" + ts[1] + "-" + ts[0];
			var period_to = $("#initiated_to").val();
			var ts1 = period_to.split("/");
			var pr1 = ts1[2] + "-" + ts1[1] + "-" + ts1[0];
			var in_user_code = sessionStorage.getItem("usrname");
			$.ajax({
				type: "POST",
				url: '../KnockOff/getundoKOjobrule',
				dataType: 'json',
				contentType: 'application/json; charset=utf-8',
				data: JSON.stringify({ in_recon_code: reconcode, in_start_date: pr, in_end_date: pr1, in_user_code: in_user_code }),
				success: function (response) {
					var result = JSON.parse(response);
					if (result.Table.length > 0) {
						undojob_grid(result.Table);
					}
					else {
						undojob_grid([]);
					}
				},
				error: function (er) {
					alert(er)
					console.log(er)
				}

			});
		} else if (!reconcode) {
			$.alert({
				title: 'Recon',
				content: "Please Select Recon ..!",
				type: 'red',
			});

		} else if (!fromDate || !toDate) {
			$.alert({
				title: 'Recon',
				content: "Invalid Date ..!",
				type: 'red',
			});
		}

	}

	function undojob_grid(data) {
		$("#grid_job").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 10,
				schema: {
					model: {
						fields: {
							job_gid: { type: "number" },
							job_name: { type: "string" },
							job_type: { type: "string" },
							jobtype_desc: { type: "string" },
							start_date: { type: "string" },
							end_date: { type: "string" },
							job_initiated_by: { type: "string" },
							job_status: { type: "string" },
							jobstatus_desc: { type: "string" },
							job_remark: { type: "string" },
							file_path: { type: "string" }
						}
					}
				}
			},
			height: 280,
			groupable: false,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_job').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
			},
			sortable: true,
			selectable: true,
			filterable: false,
			navigatable: true,
			pageable: true,
			resizable: true,
			resizable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			columns: [
				{
					command: [
						{
							name: "Action",
							id: "Edit",
							template: "<input id='job_selected' name='job_selected' type='radio'/>",
						},
					], title: "Action&nbsp;", width: "70px",
					attributes: {
						style: "text-align: center;"
					}
				},
				{
					field: "job_gid",
					title: "Job Id",
					width: 80,
					attributes: { style: "text-align: right;" },
					filterable: {
						ui: "numeric",
						extra: false,
					},
				},
				{
					field: "job_name",
					title: "Job Name",
					width: 150,
				},
				{
					field: "job_type",
					title: "job_type",
					width: 100,
					hidden: true,
				},
				{
					field: "jobtype_desc",
					title: "Job Type",
					width: 180,
				},
				{
					field: "start_date",
					title: "Initiated Date & Time",
					width: 180,
				},
				{
					field: "end_date",
					title: "end_date",
					width: 100,
					hidden: true,
				},
				{
					field: "job_initiated_by",
					title: "Initiated By",
					width: 180,
				},
				{
					field: "job_status",
					title: "job_status",
					width: 100,
					hidden: true,
				},
				{
					field: "jobstatus_desc",
					title: "Status",
					width: 180,
				},
				{
					field: "job_remark",
					title: "Remark",
					width: 180,
				},
				{
					field: "file_path",
					title: "Path",
					width: 120,
					hidden: true,
				},
			],
			editable: false,

		});
	}

	function undorule_grid(data) {
		$("#grid_rule").kendoGrid({
			dataSource: {
				data: data,
				pageSize: 10,
				schema: {
					model: {
						fields: {
							rule_gid: { type: "string" },
							rule_code: { type: "string" },
							rule_name: { type: "string" },
							rule_order: { type: "number" },
							recon_rule_version: { type: "number" },
							source_dataset_code: { type: "string" },
							comparison_dataset_code: { type: "string" },
							source_dataset_desc: { type: "string" },
							comparison_dataset_desc: { type: "string" },
							rule_apply_on_desc: { type: "string" },
							group_flag: { type: "string" },
							group_flag_desc: { type: "string" },
							active_status_desc: { type: "string" }
						}
					}
				}
			},
			height: 250,
			groupable: false,
			dataBound: function (e) {
				resultData = e.sender._data;
				var rows = $('#grid_rule').data('kendoGrid').tbody.children();
				setColor(rows, resultData);
			},
			sortable: true,
			selectable: true,
			filterable: true,
			navigatable: true,
			pageable: true,
			resizable: true,
			pageable: {
				refresh: false,
				pageSizes: true,
				buttonCount: 5
			},
			columns: [
				{
					command: [
						{
							name: "Action",
							id: "Edit",
							template: "<input id='rule_selected' onclick='ruleSelected(this)' name='rule_selected' type='radio'/>",
						},
					], title: "Action&nbsp;", width: "40px",
					attributes: {
						style: "text-align: center;"
					}
				},
				{
					field: "rule_gid",
					title: "rule_gid",
					hidden: true,
				},
				{
					field: "name",
					title: "Action",
					template: "<input id='preview_checkbox' type='checkbox' />",
					width: 80,
					hidden: true,
				},
				{
					field: "rule_code",
					title: "Rule Code",
					width: 80,
				},

				{
					field: "rule_name",
					title: "Rule Name",
					width: 100,
				},
				{
					field: "rule_apply_on_desc",
					title: "Rule Applied On",
					width: 80,
				},
				{
					field: "rule_order",
					title: "Rule Order",
					width: 50,
					attributes: { style: "text-align: right;" },
					filterable: {
						ui: "numeric",
						extra: false,
					},
				},
				{
					field: "recon_rule_version",
					title: "Rule Version",
					width: 50,
					hidden: true,
					filterable: {
						ui: "numeric",
						extra: false,
					},
				},
				{
					field: "group_flag_desc",
					title: "Group Flag",
					width: 70,
				},
				{
					field: "active_status_desc",
					title: "Status",
					width: 50,
				},
				{
					field: "source_dataset_desc",
					title: "Source Dataset",
					width: 150,
					hidden: true
				},
				{
					field: "source_dataset_desc",
					title: "Comparision Dataset",
					width: 150,
					hidden: true
				},
				{
					field: "source_dataset_code",
					title: "Source Dataset",
					width: 100,
					hidden: true
				},
				{
					field: "comparison_dataset_code",
					title: "Comparision Dataset",
					width: 100,
					hidden: true

				}],
			editable: false,
		});
	}

	function validateNextdataset() {
		var selected_job = '';
		var grid = $("#grid_job").data("kendoGrid");
		var checkedrows = $("#job_selected:checked", grid.tbody).closest("tr");
		for (var i = 0; i < checkedrows.length; i++) {
			selected_job = grid.dataItem(checkedrows[i]);
		}
		var objpplmapupdlist = [];
		var dropdownid = "";
		var in_user_code = sessionStorage.getItem("usrname");
		$.ajax({
			type: "POST",
			url: '../KnockOff/getRuleAgainstJob',
			dataType: 'json',
			contentType: 'application/json; charset=utf-8',
			data: JSON.stringify({ in_job_gid: selected_job.job_gid, in_user_code: in_user_code }),
			success: function (response) {
				var result = JSON.parse(response);
				if (result.length > 0) {
					undorule_grid(result);
				} else {
					undorule_grid([]);
				}
				$("#Joblist").removeClass('nav-link active');
				$("#Joblist").toggleClass('nav-link');
				$("#navs-pills-RuleList").toggleClass('tab-pane fade active in');
				$("#navs-pills-Joblist").toggleClass('tab-pane fade');
				$("#RuleList").removeClass('nav-link');
				$("#RuleList").toggleClass('nav-link active');
				$("#navs-pills-Joblist").hide();
				$("#navs-pills-RuleList").show();
			},
			error: function (er) {
				alert(er)
				console.log(er)
			}

		});
	}

	function validatePrevdp() {
		$("#RuleList").removeClass('nav-link active');
		$("#RuleList").toggleClass('nav-link');
		$("#navs-pills-Joblist").toggleClass('tab-pane fade active in');
		$("#navs-pills-RuleList").toggleClass('tab-pane fade');
		$("#Joblist").removeClass('nav-link');
		$("#Joblist").toggleClass('nav-link active');
		$("#navs-pills-RuleList").hide();
		$("#navs-pills-Joblist").show();
	}

	function undoRule() {
		var selected_jobid = '';
		var reconcode = $("#cmbreconname").val();
		var grid_job = $("#grid_job").data("kendoGrid");
		var checkedrows = $("#job_selected:checked", grid_job.tbody).closest("tr");
		for (var i = 0; i < checkedrows.length; i++) {
			selected_jobid = grid_job.dataItem(checkedrows[i]);
		}
		var grid_rule = $("#grid_rule").data("kendoGrid");
		var checkedrows = $("#rule_selected:checked", grid_rule.tbody).closest("tr");
		var in_user_code = sessionStorage.getItem("usrname");
		for (var i = 0; i < checkedrows.length; i++) {
			selected_ruleGid = grid_rule.dataItem(checkedrows[i]);
		}
		if (selected_ruleGid && reconcode && selected_jobid.job_gid) {
			$.ajax({
				url: '../KnockOff/kobyRule',
				type: 'POST',
				data: JSON.stringify({ in_recon_code: reconcode, in_job_gid: selected_jobid.job_gid, in_rule_code: selected_ruleGid.rule_code, in_undo_job_reason: '', in_user_code: in_user_code }),
				dataType: 'json',
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					if (response != null) {
						var res = JSON.parse(response)
						$.alert({
							title: 'Recon',
							content: res[0].out_msg,
							type: 'Green',
						});
					} else {
						var res = JSON.parse(response)
						$.alert({
							title: 'Recon',
							content: res[0].out_msg,
							type: 'green',
						});
					}
				}
			});
		} else if (!selected_ruleGid) {
			$.alert({
				title: 'Recon',
				content: 'No Rule Selected to KO',
				type: 'red',
			});
		} else if (!reconcode) {
			$.alert({
				title: 'Recon',
				content: 'Please select Recon',
				type: 'red',
			});
		} else if (!selected_jobid.job_gid) {
			$.alert({
				title: 'Recon',
				content: 'Please select Job',
				type: 'red',
			});
		}
	}

	document.addEventListener('DOMContentLoaded', function () {
		const dateInput = document.getElementById('initiated_from');
		const dateInput1 = document.getElementById('initiated_to');
		dateInput.addEventListener('focusout', onFocusOut);
		dateInput1.addEventListener('focusout', onFocusOut);
	});

</script>